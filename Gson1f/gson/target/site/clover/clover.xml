<?xml version="1.0" encoding="UTF-8"?>
<coverage generated="1672979768718" clover="4.4.1">
   <project name="Gson 1.6" timestamp="1672979762045">
      <metrics coveredelements="2982" complexity="1244" loc="11588" methods="621" classes="128" statements="2432" packages="4" coveredconditionals="577" coveredmethods="481" elements="3903" ncloc="5408" files="90" conditionals="850" coveredstatements="1924"/>
      <package name="com.google.gson.stream">
         <metrics coveredelements="715" complexity="266" loc="1856" methods="73" classes="5" statements="550" coveredconditionals="137" coveredmethods="71" elements="789" ncloc="873" files="5" conditionals="166" coveredstatements="507"/>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/stream/JsonReader.java" name="JsonReader.java">
            <metrics coveredelements="518" coveredconditionals="103" complexity="195" loc="1118" coveredmethods="43" methods="44" elements="581" classes="1" ncloc="606" statements="409" conditionals="128" coveredstatements="372"/>
            <class name="JsonReader">
               <metrics coveredelements="518" coveredconditionals="103" complexity="195" coveredmethods="43" methods="44" elements="581" statements="409" conditionals="128" coveredstatements="372"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 206()" num="206" count="431" type="method"/>
            <line num="207" count="432" type="stmt"/>
            <line complexity="2" visibility="public" signature="JsonReader(Reader)" num="238" count="434" type="method"/>
            <line num="239" count="436" type="stmt"/>
            <line falsecount="433" truecount="1" num="239" type="cond"/>
            <line num="240" count="1" type="stmt"/>
            <line num="242" count="434" type="stmt"/>
            <line complexity="1" visibility="public" signature="setLenient(boolean) : void" num="274" count="752" type="method"/>
            <line num="275" count="759" type="stmt"/>
            <line complexity="1" visibility="public" signature="isLenient() : boolean" num="281" count="359" type="method"/>
            <line num="282" count="361" type="stmt"/>
            <line complexity="1" visibility="public" signature="beginArray() : void" num="289" count="142" type="method"/>
            <line num="290" count="142" type="stmt"/>
            <line complexity="1" visibility="public" signature="endArray() : void" num="297" count="117" type="method"/>
            <line num="298" count="117" type="stmt"/>
            <line complexity="1" visibility="public" signature="beginObject() : void" num="305" count="283" type="method"/>
            <line num="306" count="291" type="stmt"/>
            <line complexity="1" visibility="public" signature="endObject() : void" num="313" count="261" type="method"/>
            <line num="314" count="267" type="stmt"/>
            <line complexity="2" visibility="private" signature="expect(JsonToken) : void" num="320" count="806" type="method"/>
            <line num="321" count="821" type="stmt"/>
            <line num="322" count="825" type="stmt"/>
            <line falsecount="817" truecount="6" num="322" type="cond"/>
            <line num="323" count="6" type="stmt"/>
            <line num="325" count="819" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="331" count="1231" type="method"/>
            <line num="332" count="1233" type="stmt"/>
            <line num="333" count="1236" type="stmt"/>
            <line complexity="2" visibility="public" signature="peek() : JsonToken" num="339" count="2147" type="method"/>
            <line num="340" count="2155" type="stmt"/>
            <line num="342" count="2146" type="stmt"/>
            <line falsecount="1652" truecount="495" num="342" type="cond"/>
            <line num="343" count="493" type="stmt"/>
            <line num="346" count="2145" type="stmt"/>
            <line complexity="16" visibility="private" signature="quickPeek() : JsonToken" num="354" count="7506" type="method"/>
            <line num="355" count="7507" type="stmt"/>
            <line falsecount="2530" truecount="4995" num="355" type="cond"/>
            <line num="356" count="4992" type="stmt"/>
            <line num="359" count="2529" type="stmt"/>
            <line num="360" count="429" type="stmt"/>
            <line num="361" count="428" type="stmt"/>
            <line falsecount="45" truecount="387" num="361" type="cond"/>
            <line num="362" count="384" type="stmt"/>
            <line num="364" count="428" type="stmt"/>
            <line num="365" count="431" type="stmt"/>
            <line num="366" count="429" type="stmt"/>
            <line falsecount="422" truecount="3" num="366" type="cond"/>
            <line num="367" count="3" type="stmt"/>
            <line num="369" count="424" type="stmt"/>
            <line num="370" count="140" type="stmt"/>
            <line num="371" count="140" type="stmt"/>
            <line num="372" count="285" type="stmt"/>
            <line num="373" count="285" type="stmt"/>
            <line num="374" count="292" type="stmt"/>
            <line num="375" count="292" type="stmt"/>
            <line num="376" count="680" type="stmt"/>
            <line num="377" count="680" type="stmt"/>
            <line num="378" count="672" type="stmt"/>
            <line num="379" count="670" type="stmt"/>
            <line num="380" count="31" type="stmt"/>
            <line num="381" count="31" type="stmt"/>
            <line num="382" count="31" type="stmt"/>
            <line num="383" count="10" type="stmt"/>
            <line falsecount="1" truecount="9" num="383" type="cond"/>
            <line num="384" count="9" type="stmt"/>
            <line num="386" count="1" type="stmt"/>
            <line num="388" count="20" type="stmt"/>
            <line num="389" count="20" type="stmt"/>
            <line num="391" count="4" type="stmt"/>
            <line num="392" count="4" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="consumeNonExecutePrefix() : void" num="401" count="377" type="method"/>
            <line num="403" count="381" type="stmt"/>
            <line num="404" count="385" type="stmt"/>
            <line num="406" count="384" type="stmt"/>
            <line falsecount="342" truecount="44" num="406" type="cond"/>
            <line num="407" count="44" type="stmt"/>
            <line num="410" count="341" type="stmt"/>
            <line falsecount="5" truecount="365" num="410" type="cond"/>
            <line num="411" count="362" type="stmt"/>
            <line falsecount="29" truecount="337" num="411" type="cond"/>
            <line num="412" count="337" type="stmt"/>
            <line num="417" count="5" type="stmt"/>
            <line complexity="1" visibility="private" signature="advance() : JsonToken" num="423" count="2471" type="method"/>
            <line num="424" count="2476" type="stmt"/>
            <line num="426" count="2477" type="stmt"/>
            <line num="427" count="2477" type="stmt"/>
            <line num="428" count="2481" type="stmt"/>
            <line num="429" count="2478" type="stmt"/>
            <line num="430" count="2480" type="stmt"/>
            <line num="431" count="2477" type="stmt"/>
            <line complexity="2" visibility="public" signature="nextName() : String" num="441" count="655" type="method"/>
            <line num="442" count="671" type="stmt"/>
            <line num="443" count="682" type="stmt"/>
            <line falsecount="675" truecount="2" num="443" type="cond"/>
            <line num="444" count="2" type="stmt"/>
            <line num="446" count="679" type="stmt"/>
            <line num="447" count="681" type="stmt"/>
            <line num="448" count="680" type="stmt"/>
            <line complexity="4" visibility="public" signature="nextString() : String" num="459" count="837" type="method"/>
            <line num="460" count="846" type="stmt"/>
            <line num="461" count="847" type="stmt"/>
            <line falsecount="842" truecount="3" num="461" type="cond"/>
            <line num="462" count="3" type="stmt"/>
            <line num="465" count="842" type="stmt"/>
            <line num="466" count="844" type="stmt"/>
            <line num="467" count="846" type="stmt"/>
            <line complexity="5" visibility="public" signature="nextBoolean() : boolean" num="477" count="82" type="method"/>
            <line num="478" count="82" type="stmt"/>
            <line num="479" count="72" type="stmt"/>
            <line falsecount="72" truecount="0" num="479" type="cond"/>
            <line num="480" count="0" type="stmt"/>
            <line num="483" count="72" type="stmt"/>
            <line num="484" count="72" type="stmt"/>
            <line falsecount="31" truecount="41" num="484" type="cond"/>
            <line num="485" count="41" type="stmt"/>
            <line num="486" count="31" type="stmt"/>
            <line falsecount="0" truecount="31" num="486" type="cond"/>
            <line num="487" count="31" type="stmt"/>
            <line num="489" count="0" type="stmt"/>
            <line num="492" count="72" type="stmt"/>
            <line num="493" count="72" type="stmt"/>
            <line complexity="4" visibility="public" signature="nextNull() : void" num="503" count="27" type="method"/>
            <line num="504" count="27" type="stmt"/>
            <line num="505" count="23" type="stmt"/>
            <line falsecount="22" truecount="1" num="505" type="cond"/>
            <line num="506" count="1" type="stmt"/>
            <line num="509" count="22" type="stmt"/>
            <line falsecount="22" truecount="0" num="509" type="cond"/>
            <line num="510" count="0" type="stmt"/>
            <line num="513" count="22" type="stmt"/>
            <line complexity="7" visibility="public" signature="nextDouble() : double" num="525" count="18" type="method"/>
            <line num="526" count="18" type="stmt"/>
            <line num="527" count="18" type="stmt"/>
            <line falsecount="18" truecount="0" num="527" type="cond"/>
            <line num="528" count="0" type="stmt"/>
            <line num="531" count="18" type="stmt"/>
            <line num="533" count="18" type="stmt"/>
            <line falsecount="17" truecount="1" num="533" type="cond"/>
            <line num="534" count="1" type="stmt"/>
            <line num="537" count="17" type="stmt"/>
            <line falsecount="16" truecount="1" num="537" type="cond"/>
            <line num="538" count="1" type="stmt"/>
            <line num="541" count="16" type="stmt"/>
            <line num="542" count="16" type="stmt"/>
            <line complexity="6" visibility="public" signature="nextLong() : long" num="555" count="7" type="method"/>
            <line num="556" count="7" type="stmt"/>
            <line num="557" count="7" type="stmt"/>
            <line falsecount="7" truecount="0" num="557" type="cond"/>
            <line num="558" count="0" type="stmt"/>
            <line num="561" count="7" type="stmt"/>
            <line num="562" count="7" type="stmt"/>
            <line num="563" count="7" type="stmt"/>
            <line num="565" count="1" type="stmt"/>
            <line num="566" count="1" type="stmt"/>
            <line num="567" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="567" type="cond"/>
            <line num="568" count="0" type="stmt"/>
            <line num="572" count="7" type="stmt"/>
            <line falsecount="6" truecount="1" num="572" type="cond"/>
            <line num="573" count="1" type="stmt"/>
            <line num="576" count="6" type="stmt"/>
            <line num="577" count="6" type="stmt"/>
            <line complexity="6" visibility="public" signature="nextInt() : int" num="590" count="7" type="method"/>
            <line num="591" count="7" type="stmt"/>
            <line num="592" count="7" type="stmt"/>
            <line falsecount="7" truecount="0" num="592" type="cond"/>
            <line num="593" count="0" type="stmt"/>
            <line num="596" count="7" type="stmt"/>
            <line num="597" count="7" type="stmt"/>
            <line num="598" count="7" type="stmt"/>
            <line num="600" count="3" type="stmt"/>
            <line num="601" count="3" type="stmt"/>
            <line num="602" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="602" type="cond"/>
            <line num="603" count="2" type="stmt"/>
            <line num="607" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="607" type="cond"/>
            <line num="608" count="1" type="stmt"/>
            <line num="611" count="4" type="stmt"/>
            <line num="612" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="close() : void" num="618" count="5" type="method"/>
            <line num="619" count="5" type="stmt"/>
            <line num="620" count="5" type="stmt"/>
            <line num="621" count="5" type="stmt"/>
            <line num="622" count="5" type="stmt"/>
            <line num="623" count="5" type="stmt"/>
            <line num="624" count="5" type="stmt"/>
            <line complexity="6" visibility="public" signature="skipValue() : void" num="632" count="2" type="method"/>
            <line num="633" count="2" type="stmt"/>
            <line num="634" count="2" type="stmt"/>
            <line num="635" count="2" type="stmt"/>
            <line num="636" count="2" type="stmt"/>
            <line num="637" count="13" type="stmt"/>
            <line num="638" count="13" type="stmt"/>
            <line falsecount="9" truecount="4" num="638" type="cond"/>
            <line num="639" count="4" type="stmt"/>
            <line num="640" count="9" type="stmt"/>
            <line falsecount="5" truecount="4" num="640" type="cond"/>
            <line num="641" count="4" type="stmt"/>
            <line falsecount="2" truecount="11" num="643" type="cond"/>
            <line num="645" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="peekStack() : JsonScope" num="649" count="2530" type="method"/>
            <line num="650" count="2533" type="stmt"/>
            <line complexity="1" visibility="private" signature="pop() : JsonScope" num="653" count="382" type="method"/>
            <line num="654" count="385" type="stmt"/>
            <line complexity="1" visibility="private" signature="push(JsonScope) : void" num="657" count="858" type="method"/>
            <line num="658" count="866" type="stmt"/>
            <line complexity="1" visibility="private" signature="replaceTop(JsonScope) : void" num="664" count="1927" type="method"/>
            <line num="665" count="1929" type="stmt"/>
            <line complexity="9" visibility="private" signature="nextInArray(boolean) : JsonToken" num="668" count="425" type="method"/>
            <line num="669" count="425" type="stmt"/>
            <line falsecount="285" truecount="140" num="669" type="cond"/>
            <line num="670" count="140" type="stmt"/>
            <line num="673" count="285" type="stmt"/>
            <line num="674" count="101" type="stmt"/>
            <line num="675" count="101" type="stmt"/>
            <line num="676" count="101" type="stmt"/>
            <line num="677" count="101" type="stmt"/>
            <line num="678" count="1" type="stmt"/>
            <line num="679" count="1" type="stmt"/>
            <line num="680" count="182" type="stmt"/>
            <line num="681" count="183" type="stmt"/>
            <line num="682" count="1" type="stmt"/>
            <line num="683" count="1" type="stmt"/>
            <line num="687" count="323" type="stmt"/>
            <line num="688" count="19" type="stmt"/>
            <line num="689" count="19" type="stmt"/>
            <line falsecount="3" truecount="16" num="689" type="cond"/>
            <line num="690" count="16" type="stmt"/>
            <line num="691" count="16" type="stmt"/>
            <line num="692" count="16" type="stmt"/>
            <line num="695" count="0" type="stmt"/>
            <line num="696" count="6" type="stmt"/>
            <line num="698" count="9" type="stmt"/>
            <line num="699" count="5" type="stmt"/>
            <line num="700" count="5" type="stmt"/>
            <line num="701" count="5" type="stmt"/>
            <line num="702" count="5" type="stmt"/>
            <line num="703" count="295" type="stmt"/>
            <line num="704" count="295" type="stmt"/>
            <line num="705" count="295" type="stmt"/>
            <line complexity="9" visibility="private" signature="nextInObject(boolean) : JsonToken" num="709" count="936" type="method"/>
            <line num="715" count="954" type="stmt"/>
            <line falsecount="669" truecount="293" num="715" type="cond"/>
            <line num="717" count="290" type="stmt"/>
            <line num="718" count="8" type="stmt"/>
            <line num="719" count="8" type="stmt"/>
            <line num="720" count="8" type="stmt"/>
            <line num="721" count="8" type="stmt"/>
            <line num="722" count="285" type="stmt"/>
            <line num="723" count="284" type="stmt"/>
            <line num="726" count="671" type="stmt"/>
            <line num="727" count="270" type="stmt"/>
            <line num="728" count="270" type="stmt"/>
            <line num="729" count="267" type="stmt"/>
            <line num="730" count="269" type="stmt"/>
            <line num="731" count="1" type="stmt"/>
            <line num="732" count="401" type="stmt"/>
            <line num="733" count="402" type="stmt"/>
            <line num="734" count="0" type="stmt"/>
            <line num="735" count="0" type="stmt"/>
            <line num="740" count="683" type="stmt"/>
            <line num="741" count="686" type="stmt"/>
            <line num="742" count="347" type="stmt"/>
            <line num="743" count="347" type="stmt"/>
            <line num="744" count="271" type="stmt"/>
            <line num="745" count="616" type="stmt"/>
            <line num="746" count="616" type="stmt"/>
            <line num="747" count="67" type="stmt"/>
            <line num="748" count="67" type="stmt"/>
            <line num="749" count="66" type="stmt"/>
            <line num="750" count="66" type="stmt"/>
            <line num="751" count="66" type="stmt"/>
            <line falsecount="66" truecount="0" num="751" type="cond"/>
            <line num="752" count="0" type="stmt"/>
            <line num="756" count="679" type="stmt"/>
            <line num="757" count="683" type="stmt"/>
            <line num="758" count="683" type="stmt"/>
            <line complexity="6" visibility="private" signature="objectValue() : JsonToken" num="761" count="656" type="method"/>
            <line num="766" count="667" type="stmt"/>
            <line num="767" count="674" type="stmt"/>
            <line num="768" count="674" type="stmt"/>
            <line num="769" count="5" type="stmt"/>
            <line num="770" count="5" type="stmt"/>
            <line num="771" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="771" type="cond"/>
            <line num="772" count="1" type="stmt"/>
            <line num="774" count="3" type="stmt"/>
            <line num="775" count="1" type="stmt"/>
            <line num="776" count="1" type="stmt"/>
            <line num="779" count="674" type="stmt"/>
            <line num="780" count="677" type="stmt"/>
            <line complexity="5" visibility="private" signature="nextValue() : JsonToken" num="783" count="1425" type="method"/>
            <line num="784" count="1432" type="stmt"/>
            <line num="785" count="1411" type="stmt"/>
            <line num="786" count="293" type="stmt"/>
            <line num="787" count="288" type="stmt"/>
            <line num="788" count="294" type="stmt"/>
            <line num="789" count="294" type="stmt"/>
            <line num="791" count="141" type="stmt"/>
            <line num="792" count="141" type="stmt"/>
            <line num="793" count="141" type="stmt"/>
            <line num="794" count="141" type="stmt"/>
            <line num="796" count="285" type="stmt"/>
            <line num="797" count="284" type="stmt"/>
            <line num="798" count="131" type="stmt"/>
            <line num="799" count="416" type="stmt"/>
            <line num="800" count="414" type="stmt"/>
            <line num="801" count="414" type="stmt"/>
            <line num="803" count="560" type="stmt"/>
            <line num="804" count="558" type="stmt"/>
            <line num="805" count="558" type="stmt"/>
            <line complexity="4" visibility="private" signature="fillBuffer(int) : boolean" num="814" count="550" type="method"/>
            <line num="815" count="552" type="stmt"/>
            <line falsecount="508" truecount="44" num="815" type="cond"/>
            <line num="816" count="44" type="stmt"/>
            <line num="817" count="44" type="stmt"/>
            <line num="819" count="508" type="stmt"/>
            <line num="822" count="552" type="stmt"/>
            <line num="823" count="550" type="stmt"/>
            <line num="824" count="552" type="stmt"/>
            <line falsecount="0" truecount="0" num="824" type="cond"/>
            <line num="825" count="429" type="stmt"/>
            <line num="826" count="430" type="stmt"/>
            <line falsecount="0" truecount="430" num="826" type="cond"/>
            <line num="827" count="430" type="stmt"/>
            <line num="830" count="122" type="stmt"/>
            <line complexity="14" visibility="private" signature="nextNonWhitespace() : int" num="833" count="4747" type="method"/>
            <line num="834" count="4754" type="stmt"/>
            <line falsecount="25" truecount="4907" num="834" type="cond"/>
            <line num="835" count="4910" type="stmt"/>
            <line num="836" count="4903" type="stmt"/>
            <line num="837" count="1" type="stmt"/>
            <line num="838" count="136" type="stmt"/>
            <line num="839" count="32" type="stmt"/>
            <line num="840" count="1" type="stmt"/>
            <line num="841" count="170" type="stmt"/>
            <line num="843" count="6" type="stmt"/>
            <line num="844" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="844" type="cond"/>
            <line num="845" count="0" type="stmt"/>
            <line num="848" count="6" type="stmt"/>
            <line num="849" count="4" type="stmt"/>
            <line num="850" count="4" type="stmt"/>
            <line num="851" count="2" type="stmt"/>
            <line num="853" count="2" type="stmt"/>
            <line num="854" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="854" type="cond"/>
            <line num="855" count="0" type="stmt"/>
            <line num="857" count="2" type="stmt"/>
            <line num="858" count="2" type="stmt"/>
            <line num="860" count="2" type="stmt"/>
            <line num="862" count="2" type="stmt"/>
            <line num="863" count="2" type="stmt"/>
            <line num="864" count="2" type="stmt"/>
            <line num="866" count="0" type="stmt"/>
            <line num="867" count="0" type="stmt"/>
            <line num="870" count="3" type="stmt"/>
            <line num="876" count="3" type="stmt"/>
            <line num="877" count="2" type="stmt"/>
            <line num="878" count="2" type="stmt"/>
            <line num="880" count="4730" type="stmt"/>
            <line num="881" count="4729" type="stmt"/>
            <line num="884" count="25" type="stmt"/>
            <line complexity="2" visibility="private" signature="checkLenient() : void" num="887" count="694" type="method"/>
            <line num="888" count="721" type="stmt"/>
            <line falsecount="719" truecount="15" num="888" type="cond"/>
            <line num="889" count="15" type="stmt"/>
            <line complexity="5" visibility="private" signature="skipToEndOfLine() : void" num="898" count="4" type="method"/>
            <line num="899" count="4" type="stmt"/>
            <line falsecount="0" truecount="68" num="899" type="cond"/>
            <line num="900" count="68" type="stmt"/>
            <line num="901" count="68" type="stmt"/>
            <line falsecount="64" truecount="4" num="901" type="cond"/>
            <line num="902" count="4" type="stmt"/>
            <line complexity="5" visibility="private" signature="skipTo(String) : boolean" num="907" count="2" type="method"/>
            <line num="908" count="2" type="stmt"/>
            <line falsecount="0" truecount="36" num="909" type="cond"/>
            <line num="910" count="36" type="stmt"/>
            <line falsecount="2" truecount="38" num="910" type="cond"/>
            <line num="911" count="38" type="stmt"/>
            <line falsecount="4" truecount="34" num="911" type="cond"/>
            <line num="912" count="34" type="stmt"/>
            <line num="915" count="2" type="stmt"/>
            <line num="917" count="0" type="stmt"/>
            <line complexity="9" visibility="private" signature="nextString(char) : String" num="930" count="1004" type="method"/>
            <line num="931" count="1019" type="stmt"/>
            <line num="932" count="1026" type="stmt"/>
            <line num="934" count="1028" type="stmt"/>
            <line num="935" count="1030" type="stmt"/>
            <line falsecount="0" truecount="5953" num="935" type="cond"/>
            <line num="936" count="5967" type="stmt"/>
            <line num="938" count="5967" type="stmt"/>
            <line falsecount="4931" truecount="1034" num="938" type="cond"/>
            <line num="939" count="1033" type="stmt"/>
            <line falsecount="1029" truecount="3" num="939" type="cond"/>
            <line num="940" count="3" type="stmt"/>
            <line num="941" count="1028" type="stmt"/>
            <line falsecount="26" truecount="1003" num="941" type="cond"/>
            <line num="942" count="1003" type="stmt"/>
            <line num="944" count="26" type="stmt"/>
            <line num="945" count="26" type="stmt"/>
            <line num="948" count="4926" type="stmt"/>
            <line falsecount="4890" truecount="40" num="948" type="cond"/>
            <line num="949" count="40" type="stmt"/>
            <line falsecount="14" truecount="26" num="949" type="cond"/>
            <line num="950" count="26" type="stmt"/>
            <line num="952" count="40" type="stmt"/>
            <line num="953" count="40" type="stmt"/>
            <line num="954" count="40" type="stmt"/>
            <line num="958" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="958" type="cond"/>
            <line num="959" count="0" type="stmt"/>
            <line num="961" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="962" type="cond"/>
            <line num="964" count="0" type="stmt"/>
            <line complexity="22" visibility="private" signature="nextLiteral() : String" num="971" count="626" type="method"/>
            <line num="972" count="626" type="stmt"/>
            <line num="973" count="626" type="stmt"/>
            <line num="975" count="626" type="stmt"/>
            <line num="976" count="626" type="stmt"/>
            <line falsecount="53" truecount="2461" num="976" type="cond"/>
            <line num="977" count="2462" type="stmt"/>
            <line num="978" count="2463" type="stmt"/>
            <line num="979" count="0" type="stmt"/>
            <line num="980" count="0" type="stmt"/>
            <line num="981" count="4" type="stmt"/>
            <line num="982" count="0" type="stmt"/>
            <line num="983" count="0" type="stmt"/>
            <line num="984" count="4" type="stmt"/>
            <line num="986" count="0" type="stmt"/>
            <line num="987" count="168" type="stmt"/>
            <line num="988" count="0" type="stmt"/>
            <line num="989" count="68" type="stmt"/>
            <line num="990" count="65" type="stmt"/>
            <line num="991" count="261" type="stmt"/>
            <line num="992" count="2" type="stmt"/>
            <line num="993" count="0" type="stmt"/>
            <line num="994" count="0" type="stmt"/>
            <line num="995" count="0" type="stmt"/>
            <line num="996" count="5" type="stmt"/>
            <line num="997" count="566" type="stmt"/>
            <line num="998" count="568" type="stmt"/>
            <line falsecount="569" truecount="2" num="998" type="cond"/>
            <line num="999" count="2" type="stmt"/>
            <line num="1000" count="569" type="stmt"/>
            <line falsecount="0" truecount="569" num="1000" type="cond"/>
            <line num="1001" count="568" type="stmt"/>
            <line num="1003" count="0" type="stmt"/>
            <line num="1004" count="0" type="stmt"/>
            <line num="1009" count="53" type="stmt"/>
            <line falsecount="0" truecount="53" num="1009" type="cond"/>
            <line num="1010" count="53" type="stmt"/>
            <line num="1012" count="53" type="stmt"/>
            <line falsecount="53" truecount="0" num="1013" type="cond"/>
            <line num="1015" count="53" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="1018" count="0" type="method"/>
            <line num="1019" count="0" type="stmt"/>
            <line complexity="14" visibility="private" signature="readEscapeCharacter() : char" num="1031" count="40" type="method"/>
            <line num="1032" count="40" type="stmt"/>
            <line falsecount="40" truecount="0" num="1032" type="cond"/>
            <line num="1033" count="0" type="stmt"/>
            <line num="1036" count="40" type="stmt"/>
            <line num="1037" count="40" type="stmt"/>
            <line num="1038" count="15" type="stmt"/>
            <line num="1039" count="15" type="stmt"/>
            <line falsecount="15" truecount="0" num="1039" type="cond"/>
            <line num="1040" count="0" type="stmt"/>
            <line num="1042" count="15" type="stmt"/>
            <line num="1043" count="15" type="stmt"/>
            <line num="1044" count="15" type="stmt"/>
            <line num="1046" count="1" type="stmt"/>
            <line num="1047" count="1" type="stmt"/>
            <line num="1049" count="1" type="stmt"/>
            <line num="1050" count="1" type="stmt"/>
            <line num="1052" count="4" type="stmt"/>
            <line num="1053" count="4" type="stmt"/>
            <line num="1055" count="2" type="stmt"/>
            <line num="1056" count="2" type="stmt"/>
            <line num="1058" count="1" type="stmt"/>
            <line num="1059" count="1" type="stmt"/>
            <line num="1061" count="0" type="stmt"/>
            <line num="1062" count="8" type="stmt"/>
            <line num="1063" count="4" type="stmt"/>
            <line num="1064" count="4" type="stmt"/>
            <line num="1065" count="16" type="stmt"/>
            <line complexity="2" visibility="private" signature="readLiteral() : JsonToken" num="1072" count="551" type="method"/>
            <line num="1073" count="557" type="stmt"/>
            <line num="1074" count="556" type="stmt"/>
            <line falsecount="556" truecount="2" num="1074" type="cond"/>
            <line num="1075" count="2" type="stmt"/>
            <line num="1077" count="555" type="stmt"/>
            <line num="1078" count="556" type="stmt"/>
            <line num="1079" count="556" type="stmt"/>
            <line complexity="5" visibility="private" signature="decodeLiteral() : void" num="1085" count="485" type="method"/>
            <line num="1086" count="490" type="stmt"/>
            <line falsecount="480" truecount="16" num="1086" type="cond"/>
            <line num="1087" count="16" type="stmt"/>
            <line num="1088" count="480" type="stmt"/>
            <line falsecount="433" truecount="47" num="1088" type="cond"/>
            <line num="1089" count="47" type="stmt"/>
            <line num="1091" count="433" type="stmt"/>
            <line num="1092" count="433" type="stmt"/>
            <line num="1093" count="425" type="stmt"/>
            <line num="1096" count="5" type="stmt"/>
            <line num="1097" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="syntaxError(String) : IOException" num="1106" count="23" type="method"/>
            <line num="1107" count="23" type="stmt"/>
            <line complexity="1" visibility="private" signature="getSnippet() : CharSequence" num="1110" count="23" type="method"/>
            <line num="1111" count="23" type="stmt"/>
            <line num="1112" count="23" type="stmt"/>
            <line num="1113" count="23" type="stmt"/>
            <line num="1114" count="23" type="stmt"/>
            <line num="1115" count="23" type="stmt"/>
            <line num="1116" count="23" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/stream/JsonScope.java" name="JsonScope.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="71" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JsonScope">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/stream/JsonToken.java" name="JsonToken.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="85" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="13" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JsonToken">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/stream/JsonWriter.java" name="JsonWriter.java">
            <metrics coveredelements="195" coveredconditionals="34" complexity="70" loc="553" coveredmethods="27" methods="28" elements="206" classes="1" ncloc="236" statements="140" conditionals="38" coveredstatements="134"/>
            <class name="JsonWriter">
               <metrics coveredelements="195" coveredconditionals="34" complexity="70" coveredmethods="27" methods="28" elements="206" statements="140" conditionals="38" coveredstatements="134"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 129()" num="129" count="422" type="method"/>
            <line num="130" count="423" type="stmt"/>
            <line complexity="2" visibility="public" signature="JsonWriter(Writer)" num="153" count="421" type="method"/>
            <line num="154" count="421" type="stmt"/>
            <line falsecount="422" truecount="0" num="154" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line num="157" count="420" type="stmt"/>
            <line complexity="2" visibility="public" signature="setIndent(String) : void" num="168" count="11" type="method"/>
            <line num="169" count="11" type="stmt"/>
            <line falsecount="11" truecount="0" num="169" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="11" type="stmt"/>
            <line num="174" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="setLenient(boolean) : void" num="190" count="793" type="method"/>
            <line num="191" count="795" type="stmt"/>
            <line complexity="1" visibility="public" signature="isLenient() : boolean" num="197" count="396" type="method"/>
            <line num="198" count="398" type="stmt"/>
            <line complexity="1" visibility="public" signature="setHtmlSafe(boolean) : void" num="208" count="797" type="method"/>
            <line num="209" count="798" type="stmt"/>
            <line complexity="1" visibility="public" signature="isHtmlSafe() : boolean" num="216" count="397" type="method"/>
            <line num="217" count="400" type="stmt"/>
            <line complexity="1" visibility="public" signature="beginArray() : JsonWriter" num="226" count="188" type="method"/>
            <line num="227" count="188" type="stmt"/>
            <line complexity="1" visibility="public" signature="endArray() : JsonWriter" num="235" count="182" type="method"/>
            <line num="236" count="182" type="stmt"/>
            <line complexity="1" visibility="public" signature="beginObject() : JsonWriter" num="245" count="369" type="method"/>
            <line num="246" count="371" type="stmt"/>
            <line complexity="1" visibility="public" signature="endObject() : JsonWriter" num="254" count="363" type="method"/>
            <line num="255" count="367" type="stmt"/>
            <line complexity="1" visibility="private" signature="open(JsonScope,String) : JsonWriter" num="262" count="556" type="method"/>
            <line num="263" count="558" type="stmt"/>
            <line num="264" count="558" type="stmt"/>
            <line num="265" count="554" type="stmt"/>
            <line num="266" count="556" type="stmt"/>
            <line complexity="4" visibility="private" signature="close(JsonScope,JsonScope,String) : JsonWriter" num="273" count="545" type="method"/>
            <line num="275" count="546" type="stmt"/>
            <line num="276" count="547" type="stmt"/>
            <line falsecount="544" truecount="3" num="276" type="cond"/>
            <line num="277" count="3" type="stmt"/>
            <line num="280" count="545" type="stmt"/>
            <line num="281" count="544" type="stmt"/>
            <line falsecount="37" truecount="508" num="281" type="cond"/>
            <line num="282" count="506" type="stmt"/>
            <line num="284" count="545" type="stmt"/>
            <line num="285" count="546" type="stmt"/>
            <line complexity="1" visibility="private" signature="peek() : JsonScope" num="291" count="3073" type="method"/>
            <line num="292" count="3076" type="stmt"/>
            <line complexity="1" visibility="private" signature="replaceTop(JsonScope) : void" num="298" count="2283" type="method"/>
            <line num="299" count="2284" type="stmt"/>
            <line complexity="2" visibility="public" signature="name(String) : JsonWriter" num="308" count="853" type="method"/>
            <line num="309" count="853" type="stmt"/>
            <line falsecount="851" truecount="1" num="309" type="cond"/>
            <line num="310" count="1" type="stmt"/>
            <line num="312" count="850" type="stmt"/>
            <line num="313" count="852" type="stmt"/>
            <line num="314" count="852" type="stmt"/>
            <line complexity="2" visibility="public" signature="value(String) : JsonWriter" num="323" count="449" type="method"/>
            <line num="324" count="454" type="stmt"/>
            <line falsecount="454" truecount="1" num="324" type="cond"/>
            <line num="325" count="1" type="stmt"/>
            <line num="327" count="456" type="stmt"/>
            <line num="328" count="455" type="stmt"/>
            <line num="329" count="455" type="stmt"/>
            <line complexity="1" visibility="public" signature="nullValue() : JsonWriter" num="337" count="36" type="method"/>
            <line num="338" count="36" type="stmt"/>
            <line num="339" count="36" type="stmt"/>
            <line num="340" count="36" type="stmt"/>
            <line complexity="2" visibility="public" signature="value(boolean) : JsonWriter" num="348" count="83" type="method"/>
            <line num="349" count="83" type="stmt"/>
            <line num="350" count="82" type="stmt"/>
            <line falsecount="64" truecount="18" num="350" type="cond"/>
            <line num="351" count="82" type="stmt"/>
            <line complexity="3" visibility="public" signature="value(double) : JsonWriter" num="361" count="22" type="method"/>
            <line num="362" count="22" type="stmt"/>
            <line falsecount="19" truecount="3" num="362" type="cond"/>
            <line num="363" count="3" type="stmt"/>
            <line num="365" count="19" type="stmt"/>
            <line num="366" count="19" type="stmt"/>
            <line num="367" count="19" type="stmt"/>
            <line complexity="1" visibility="public" signature="value(long) : JsonWriter" num="375" count="9" type="method"/>
            <line num="376" count="9" type="stmt"/>
            <line num="377" count="9" type="stmt"/>
            <line num="378" count="9" type="stmt"/>
            <line complexity="6" visibility="public" signature="value(Number) : JsonWriter" num="388" count="514" type="method"/>
            <line num="389" count="515" type="stmt"/>
            <line falsecount="518" truecount="0" num="389" type="cond"/>
            <line num="390" count="0" type="stmt"/>
            <line num="393" count="517" type="stmt"/>
            <line num="394" count="516" type="stmt"/>
            <line falsecount="514" truecount="3" num="394" type="cond"/>
            <line num="396" count="3" type="stmt"/>
            <line num="398" count="514" type="stmt"/>
            <line num="399" count="515" type="stmt"/>
            <line num="400" count="513" type="stmt"/>
            <line complexity="1" visibility="public" signature="flush() : void" num="407" count="0" type="method"/>
            <line num="408" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="close() : void" num="416" count="4" type="method"/>
            <line num="417" count="4" type="stmt"/>
            <line num="419" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="419" type="cond"/>
            <line num="420" count="0" type="stmt"/>
            <line complexity="16" visibility="private" signature="string(String) : void" num="424" count="1305" type="method"/>
            <line num="425" count="1307" type="stmt"/>
            <line num="426" count="1303" type="stmt"/>
            <line falsecount="1308" truecount="6713" num="426" type="cond"/>
            <line num="427" count="6712" type="stmt"/>
            <line num="435" count="6714" type="stmt"/>
            <line num="436" count="12" type="stmt"/>
            <line num="437" count="4" type="stmt"/>
            <line num="438" count="16" type="stmt"/>
            <line num="439" count="16" type="stmt"/>
            <line num="440" count="16" type="stmt"/>
            <line num="442" count="1" type="stmt"/>
            <line num="443" count="1" type="stmt"/>
            <line num="444" count="1" type="stmt"/>
            <line num="446" count="1" type="stmt"/>
            <line num="447" count="1" type="stmt"/>
            <line num="448" count="1" type="stmt"/>
            <line num="450" count="3" type="stmt"/>
            <line num="451" count="3" type="stmt"/>
            <line num="452" count="3" type="stmt"/>
            <line num="454" count="2" type="stmt"/>
            <line num="455" count="2" type="stmt"/>
            <line num="456" count="2" type="stmt"/>
            <line num="458" count="1" type="stmt"/>
            <line num="459" count="1" type="stmt"/>
            <line num="460" count="1" type="stmt"/>
            <line num="462" count="10" type="stmt"/>
            <line num="463" count="10" type="stmt"/>
            <line num="464" count="3" type="stmt"/>
            <line num="465" count="6" type="stmt"/>
            <line num="466" count="9" type="stmt"/>
            <line num="467" count="38" type="stmt"/>
            <line falsecount="14" truecount="24" num="467" type="cond"/>
            <line num="468" count="24" type="stmt"/>
            <line num="470" count="14" type="stmt"/>
            <line num="472" count="38" type="stmt"/>
            <line num="474" count="6650" type="stmt"/>
            <line num="475" count="6650" type="stmt"/>
            <line falsecount="6649" truecount="2" num="475" type="cond"/>
            <line num="476" count="2" type="stmt"/>
            <line num="478" count="6648" type="stmt"/>
            <line num="480" count="6651" type="stmt"/>
            <line num="483" count="1308" type="stmt"/>
            <line complexity="3" visibility="private" signature="newline() : void" num="486" count="1769" type="method"/>
            <line num="487" count="1770" type="stmt"/>
            <line falsecount="220" truecount="1550" num="487" type="cond"/>
            <line num="488" count="1551" type="stmt"/>
            <line num="491" count="220" type="stmt"/>
            <line num="492" count="220" type="stmt"/>
            <line falsecount="220" truecount="343" num="492" type="cond"/>
            <line num="493" count="343" type="stmt"/>
            <line complexity="3" visibility="private" signature="beforeName() : void" num="501" count="849" type="method"/>
            <line num="502" count="852" type="stmt"/>
            <line num="503" count="854" type="stmt"/>
            <line falsecount="347" truecount="506" num="503" type="cond"/>
            <line num="504" count="507" type="stmt"/>
            <line num="505" count="347" type="stmt"/>
            <line falsecount="346" truecount="1" num="505" type="cond"/>
            <line num="506" count="1" type="stmt"/>
            <line num="508" count="851" type="stmt"/>
            <line num="509" count="852" type="stmt"/>
            <line complexity="8" visibility="private" signature="beforeValue(boolean) : void" num="520" count="1671" type="method"/>
            <line num="521" count="1675" type="stmt"/>
            <line num="522" count="412" type="stmt"/>
            <line num="523" count="414" type="stmt"/>
            <line falsecount="412" truecount="1" num="523" type="cond"/>
            <line num="524" count="1" type="stmt"/>
            <line num="527" count="414" type="stmt"/>
            <line num="528" count="413" type="stmt"/>
            <line num="530" count="168" type="stmt"/>
            <line num="531" count="168" type="stmt"/>
            <line num="532" count="168" type="stmt"/>
            <line num="533" count="168" type="stmt"/>
            <line num="535" count="241" type="stmt"/>
            <line num="536" count="241" type="stmt"/>
            <line num="537" count="241" type="stmt"/>
            <line num="538" count="241" type="stmt"/>
            <line num="540" count="850" type="stmt"/>
            <line num="541" count="850" type="stmt"/>
            <line num="542" count="849" type="stmt"/>
            <line num="543" count="851" type="stmt"/>
            <line num="545" count="2" type="stmt"/>
            <line num="546" count="2" type="stmt"/>
            <line num="549" count="2" type="stmt"/>
            <line num="550" count="2" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/stream/MalformedJsonException.java" name="MalformedJsonException.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="29" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="7" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="MalformedJsonException">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="MalformedJsonException(String)" num="26" count="23" type="method"/>
            <line num="27" count="23" type="stmt"/>
         </file>
      </package>
      <package name="com.google.gson">
         <metrics coveredelements="2241" complexity="924" loc="9077" methods="526" classes="117" statements="1774" coveredconditionals="434" coveredmethods="406" elements="2920" ncloc="4284" files="80" conditionals="620" coveredstatements="1401"/>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java" name="AnonymousAndLocalClassExclusionStrategy.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="3" loc="39" coveredmethods="3" methods="3" elements="6" classes="1" ncloc="13" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="AnonymousAndLocalClassExclusionStrategy">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="shouldSkipField(FieldAttributes) : boolean" num="27" count="1699" type="method"/>
            <line num="28" count="1713" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldSkipClass(Class&lt;?&gt;) : boolean" num="31" count="2864" type="method"/>
            <line num="32" count="2876" type="stmt"/>
            <line complexity="1" visibility="private" signature="isAnonymousOrLocal(Class&lt;?&gt;) : boolean" num="35" count="4572" type="method"/>
            <line num="36" count="4581" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/Cache.java" name="Cache.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="61" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Cache">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/CamelCaseSeparatorNamingPolicy.java" name="CamelCaseSeparatorNamingPolicy.java">
            <metrics coveredelements="16" coveredconditionals="4" complexity="5" loc="73" coveredmethods="2" methods="2" elements="16" classes="1" ncloc="25" statements="10" conditionals="4" coveredstatements="10"/>
            <class name="CamelCaseSeparatorNamingPolicy">
               <metrics coveredelements="16" coveredconditionals="4" complexity="5" coveredmethods="2" methods="2" elements="16" statements="10" conditionals="4" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="CamelCaseSeparatorNamingPolicy(String)" num="53" count="19" type="method"/>
            <line num="54" count="19" type="stmt"/>
            <line num="55" count="18" type="stmt"/>
            <line num="56" count="17" type="stmt"/>
            <line complexity="4" visibility="protected" signature="translateName(String,Type,Collection&lt;Annotation&gt;) : String" num="59" count="19" type="method"/>
            <line num="62" count="19" type="stmt"/>
            <line num="63" count="19" type="stmt"/>
            <line falsecount="19" truecount="374" num="63" type="cond"/>
            <line num="64" count="374" type="stmt"/>
            <line num="65" count="374" type="stmt"/>
            <line falsecount="312" truecount="62" num="65" type="cond"/>
            <line num="66" count="62" type="stmt"/>
            <line num="68" count="374" type="stmt"/>
            <line num="71" count="19" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/CircularReferenceException.java" name="CircularReferenceException.java">
            <metrics coveredelements="13" coveredconditionals="3" complexity="4" loc="45" coveredmethods="2" methods="2" elements="14" classes="1" ncloc="19" statements="8" conditionals="4" coveredstatements="8"/>
            <class name="CircularReferenceException">
               <metrics coveredelements="13" coveredconditionals="3" complexity="4" coveredmethods="2" methods="2" elements="14" statements="8" conditionals="4" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="package" signature="CircularReferenceException(Object)" num="30" count="4" type="method"/>
            <line num="31" count="4" type="stmt"/>
            <line num="32" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="createDetailedException(FieldAttributes) : IllegalStateException" num="35" count="4" type="method"/>
            <line num="36" count="4" type="stmt"/>
            <line num="37" count="4" type="stmt"/>
            <line falsecount="1" truecount="3" num="37" type="cond"/>
            <line num="38" count="3" type="stmt"/>
            <line num="40" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="40" type="cond"/>
            <line num="41" count="4" type="stmt"/>
            <line num="43" count="4" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/CompositionFieldNamingPolicy.java" name="CompositionFieldNamingPolicy.java">
            <metrics coveredelements="8" coveredconditionals="1" complexity="3" loc="46" coveredmethods="2" methods="2" elements="10" classes="1" ncloc="20" statements="6" conditionals="2" coveredstatements="5"/>
            <class name="CompositionFieldNamingPolicy">
               <metrics coveredelements="8" coveredconditionals="1" complexity="3" coveredmethods="2" methods="2" elements="10" statements="6" conditionals="2" coveredstatements="5"/>
            </class>
            <line complexity="2" visibility="public" signature="CompositionFieldNamingPolicy(RecursiveFieldNamingPolicy)" num="32" count="13" type="method"/>
            <line num="33" count="13" type="stmt"/>
            <line falsecount="13" truecount="0" num="33" type="cond"/>
            <line num="34" count="0" type="stmt"/>
            <line num="36" count="13" type="stmt"/>
            <line complexity="1" visibility="protected" signature="translateName(String,Type,Collection&lt;Annotation&gt;) : String" num="39" count="15" type="method"/>
            <line num="41" count="15" type="stmt"/>
            <line num="42" count="30" type="stmt"/>
            <line num="44" count="15" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/DefaultTypeAdapters.java" name="DefaultTypeAdapters.java">
            <metrics coveredelements="331" coveredconditionals="34" complexity="125" loc="892" coveredmethods="65" methods="94" elements="421" classes="31" ncloc="739" statements="285" conditionals="42" coveredstatements="232"/>
            <class name="DefaultTypeAdapters">
               <metrics coveredelements="98" coveredconditionals="0" complexity="8" coveredmethods="8" methods="8" elements="98" statements="90" conditionals="0" coveredstatements="90"/>
            </class>
            <class name="DefaultTypeAdapters.DefaultDateTypeAdapter">
               <metrics coveredelements="16" coveredconditionals="1" complexity="9" coveredmethods="5" methods="7" elements="26" statements="17" conditionals="2" coveredstatements="10"/>
            </class>
            <class name="DefaultTypeAdapters.DefaultJavaSqlDateTypeAdapter">
               <metrics coveredelements="6" coveredconditionals="0" complexity="5" coveredmethods="2" methods="3" elements="16" statements="11" conditionals="2" coveredstatements="4"/>
            </class>
            <class name="DefaultTypeAdapters.DefaultTimestampDeserializer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="DefaultTypeAdapters.DefaultTimeTypeAdapter">
               <metrics coveredelements="2" coveredconditionals="0" complexity="5" coveredmethods="1" methods="3" elements="16" statements="11" conditionals="2" coveredstatements="1"/>
            </class>
            <class name="DefaultTypeAdapters.GregorianCalendarTypeAdapter">
               <metrics coveredelements="18" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="20" statements="17" conditionals="0" coveredstatements="16"/>
            </class>
            <class name="DefaultTypeAdapters.EnumTypeAdapter">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="DefaultTypeAdapters.UrlTypeAdapter">
               <metrics coveredelements="5" coveredconditionals="0" complexity="4" coveredmethods="2" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="DefaultTypeAdapters.UriTypeAdapter">
               <metrics coveredelements="5" coveredconditionals="0" complexity="4" coveredmethods="2" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="DefaultTypeAdapters.UuidTypeAdapter">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="DefaultTypeAdapters.LocaleTypeAdapter">
               <metrics coveredelements="28" coveredconditionals="9" complexity="9" coveredmethods="2" methods="3" elements="31" statements="18" conditionals="10" coveredstatements="17"/>
            </class>
            <class name="DefaultTypeAdapters.CollectionTypeAdapter">
               <metrics coveredelements="39" coveredconditionals="10" complexity="12" coveredmethods="4" methods="4" elements="43" statements="27" conditionals="12" coveredstatements="25"/>
            </class>
            <class name="DefaultTypeAdapters.PropertiesCreator">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="DefaultTypeAdapters.MapTypeAdapter">
               <metrics coveredelements="34" coveredconditionals="6" complexity="8" coveredmethods="4" methods="5" elements="36" statements="25" conditionals="6" coveredstatements="24"/>
            </class>
            <class name="DefaultTypeAdapters.BigDecimalTypeAdapter">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="DefaultTypeAdapters.BigIntegerTypeAdapter">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="DefaultTypeAdapters.NumberTypeAdapter">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="DefaultTypeAdapters.LongSerializer">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="DefaultTypeAdapters.LongDeserializer">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="DefaultTypeAdapters.IntegerTypeAdapter">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="DefaultTypeAdapters.ShortTypeAdapter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="DefaultTypeAdapters.ByteTypeAdapter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="DefaultTypeAdapters.FloatSerializer">
               <metrics coveredelements="11" coveredconditionals="4" complexity="5" coveredmethods="2" methods="2" elements="11" statements="5" conditionals="4" coveredstatements="5"/>
            </class>
            <class name="DefaultTypeAdapters.FloatDeserializer">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="DefaultTypeAdapters.DoubleSerializer">
               <metrics coveredelements="11" coveredconditionals="4" complexity="5" coveredmethods="2" methods="2" elements="11" statements="5" conditionals="4" coveredstatements="5"/>
            </class>
            <class name="DefaultTypeAdapters.DoubleDeserializer">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="DefaultTypeAdapters.CharacterTypeAdapter">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="DefaultTypeAdapters.StringTypeAdapter">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="DefaultTypeAdapters.BooleanTypeAdapter">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="DefaultTypeAdapters.TreeSetCreator">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="DefaultTypeAdapters.HashSetCreator">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="private" signature="createDefaultSerializers() : ParameterizedTypeHandlerMap&lt;JsonSerializer&lt;?&gt;&gt;" num="103" count="1" type="method"/>
            <line num="104" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="createDefaultDeserializers() : ParameterizedTypeHandlerMap&lt;JsonDeserializer&lt;?&gt;&gt;" num="141" count="1" type="method"/>
            <line num="142" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="createDefaultInstanceCreators() : ParameterizedTypeHandlerMap&lt;InstanceCreator&lt;?&gt;&gt;" num="184" count="1" type="method"/>
            <line num="185" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="wrapDeserializer(JsonDeserializer&lt;?&gt;) : JsonDeserializer&lt;?&gt;" num="199" count="31" type="method"/>
            <line num="201" count="31" type="stmt"/>
            <line complexity="1" visibility="package" signature="getDefaultSerializers() : ParameterizedTypeHandlerMap&lt;JsonSerializer&lt;?&gt;&gt;" num="204" count="345" type="method"/>
            <line num="205" count="345" type="stmt"/>
            <line complexity="1" visibility="package" signature="getDefaultSerializers(boolean,LongSerializationPolicy) : ParameterizedTypeHandlerMap&lt;JsonSerializer&lt;?&gt;&gt;" num="208" count="506" type="method"/>
            <line num="210" count="506" type="stmt"/>
            <line num="214" count="506" type="stmt"/>
            <line num="216" count="506" type="stmt"/>
            <line num="217" count="506" type="stmt"/>
            <line num="220" count="506" type="stmt"/>
            <line num="222" count="506" type="stmt"/>
            <line num="223" count="506" type="stmt"/>
            <line num="226" count="506" type="stmt"/>
            <line num="228" count="506" type="stmt"/>
            <line num="229" count="506" type="stmt"/>
            <line num="231" count="506" type="stmt"/>
            <line num="232" count="506" type="stmt"/>
            <line complexity="1" visibility="package" signature="getDefaultDeserializers() : ParameterizedTypeHandlerMap&lt;JsonDeserializer&lt;?&gt;&gt;" num="235" count="506" type="method"/>
            <line num="236" count="506" type="stmt"/>
            <line complexity="1" visibility="package" signature="getDefaultInstanceCreators() : ParameterizedTypeHandlerMap&lt;InstanceCreator&lt;?&gt;&gt;" num="239" count="506" type="method"/>
            <line num="240" count="506" type="stmt"/>
            <line complexity="1" visibility="package" signature="DefaultDateTypeAdapter()" num="246" count="1" type="method"/>
            <line num="247" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="DefaultDateTypeAdapter(String)" num="250" count="5" type="method"/>
            <line num="251" count="5" type="stmt"/>
            <line complexity="1" visibility="package" signature="DefaultDateTypeAdapter(int)" num="254" count="2" type="method"/>
            <line num="255" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="DefaultDateTypeAdapter(int,int)" num="258" count="0" type="method"/>
            <line num="259" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Date,Type,JsonSerializationContext) : JsonElement" num="264" count="9" type="method"/>
            <line num="265" count="9" type="stmt"/>
            <line num="266" count="9" type="stmt"/>
            <line num="267" count="9" type="stmt"/>
            <line complexity="3" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Date" num="271" count="6" type="method"/>
            <line num="273" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="273" type="cond"/>
            <line num="274" count="0" type="stmt"/>
            <line num="276" count="6" type="stmt"/>
            <line num="277" count="6" type="stmt"/>
            <line num="278" count="6" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="285" count="0" type="method"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="DefaultJavaSqlDateTypeAdapter()" num="297" count="1" type="method"/>
            <line num="298" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(java.sql.Date,Type,JsonSerializationContext) : JsonElement" num="301" count="1" type="method"/>
            <line num="303" count="1" type="stmt"/>
            <line num="304" count="1" type="stmt"/>
            <line num="305" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : java.sql.Date" num="308" count="0" type="method"/>
            <line num="310" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="310" type="cond"/>
            <line num="311" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Timestamp" num="325" count="0" type="method"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="DefaultTimeTypeAdapter()" num="334" count="1" type="method"/>
            <line num="335" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Time,Type,JsonSerializationContext) : JsonElement" num="337" count="0" type="method"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Time" num="343" count="0" type="method"/>
            <line num="345" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="345" type="cond"/>
            <line num="346" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="354" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(GregorianCalendar,Type,JsonSerializationContext) : JsonElement" num="369" count="2" type="method"/>
            <line num="371" count="2" type="stmt"/>
            <line num="372" count="2" type="stmt"/>
            <line num="373" count="2" type="stmt"/>
            <line num="374" count="2" type="stmt"/>
            <line num="375" count="2" type="stmt"/>
            <line num="376" count="2" type="stmt"/>
            <line num="377" count="2" type="stmt"/>
            <line num="378" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : GregorianCalendar" num="381" count="2" type="method"/>
            <line num="383" count="2" type="stmt"/>
            <line num="384" count="2" type="stmt"/>
            <line num="385" count="2" type="stmt"/>
            <line num="386" count="2" type="stmt"/>
            <line num="387" count="2" type="stmt"/>
            <line num="388" count="2" type="stmt"/>
            <line num="389" count="2" type="stmt"/>
            <line num="390" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="393" count="0" type="method"/>
            <line num="395" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(T,Type,JsonSerializationContext) : JsonElement" num="402" count="11" type="method"/>
            <line num="403" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : T" num="406" count="10" type="method"/>
            <line num="409" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="412" count="0" type="method"/>
            <line num="414" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(URL,Type,JsonSerializationContext) : JsonElement" num="419" count="1" type="method"/>
            <line num="420" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : URL" num="423" count="2" type="method"/>
            <line num="425" count="2" type="stmt"/>
            <line num="426" count="2" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="432" count="0" type="method"/>
            <line num="434" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(URI,Type,JsonSerializationContext) : JsonElement" num="439" count="1" type="method"/>
            <line num="440" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : URI" num="442" count="1" type="method"/>
            <line num="444" count="1" type="stmt"/>
            <line num="445" count="1" type="stmt"/>
            <line num="447" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="450" count="0" type="method"/>
            <line num="452" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(UUID,Type,JsonSerializationContext) : JsonElement" num="457" count="1" type="method"/>
            <line num="458" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : UUID" num="461" count="1" type="method"/>
            <line num="463" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="466" count="0" type="method"/>
            <line num="468" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Locale,Type,JsonSerializationContext) : JsonElement" num="474" count="3" type="method"/>
            <line num="475" count="3" type="stmt"/>
            <line complexity="7" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Locale" num="478" count="3" type="method"/>
            <line num="480" count="3" type="stmt"/>
            <line num="481" count="3" type="stmt"/>
            <line num="482" count="3" type="stmt"/>
            <line num="483" count="3" type="stmt"/>
            <line num="484" count="3" type="stmt"/>
            <line num="485" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="485" type="cond"/>
            <line num="486" count="3" type="stmt"/>
            <line num="488" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="488" type="cond"/>
            <line num="489" count="2" type="stmt"/>
            <line num="491" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="491" type="cond"/>
            <line num="492" count="1" type="stmt"/>
            <line num="494" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="494" type="cond"/>
            <line num="495" count="1" type="stmt"/>
            <line num="496" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="496" type="cond"/>
            <line num="497" count="1" type="stmt"/>
            <line num="499" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="503" count="0" type="method"/>
            <line num="505" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="serialize(Collection,Type,JsonSerializationContext) : JsonElement" num="512" count="77" type="method"/>
            <line num="513" count="77" type="stmt"/>
            <line falsecount="77" truecount="0" num="513" type="cond"/>
            <line num="514" count="0" type="stmt"/>
            <line num="516" count="77" type="stmt"/>
            <line num="517" count="77" type="stmt"/>
            <line num="518" count="77" type="stmt"/>
            <line falsecount="17" truecount="60" num="518" type="cond"/>
            <line num="519" count="60" type="stmt"/>
            <line num="521" count="77" type="stmt"/>
            <line num="522" count="192" type="stmt"/>
            <line falsecount="189" truecount="3" num="522" type="cond"/>
            <line num="523" count="3" type="stmt"/>
            <line num="525" count="189" type="stmt"/>
            <line falsecount="130" truecount="59" num="525" type="cond"/>
            <line num="527" count="189" type="stmt"/>
            <line num="528" count="186" type="stmt"/>
            <line num="531" count="74" type="stmt"/>
            <line complexity="4" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Collection" num="534" count="48" type="method"/>
            <line num="536" count="48" type="stmt"/>
            <line falsecount="48" truecount="0" num="536" type="cond"/>
            <line num="537" count="0" type="stmt"/>
            <line num="541" count="48" type="stmt"/>
            <line num="542" count="48" type="stmt"/>
            <line num="543" count="45" type="stmt"/>
            <line num="544" count="100" type="stmt"/>
            <line falsecount="99" truecount="1" num="544" type="cond"/>
            <line num="545" count="1" type="stmt"/>
            <line num="547" count="99" type="stmt"/>
            <line num="548" count="99" type="stmt"/>
            <line num="551" count="45" type="stmt"/>
            <line complexity="1" visibility="private" signature="constructCollectionType(Type,JsonDeserializationContext) : Collection" num="554" count="48" type="method"/>
            <line num="556" count="48" type="stmt"/>
            <line num="557" count="48" type="stmt"/>
            <line num="558" count="48" type="stmt"/>
            <line complexity="1" visibility="public" signature="createInstance(Type) : Collection" num="561" count="42" type="method"/>
            <line num="562" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="createInstance(Type) : Properties" num="567" count="1" type="method"/>
            <line num="568" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="serialize(Map,Type,JsonSerializationContext) : JsonElement" num="576" count="32" type="method"/>
            <line num="577" count="32" type="stmt"/>
            <line num="578" count="32" type="stmt"/>
            <line num="579" count="32" type="stmt"/>
            <line falsecount="18" truecount="14" num="579" type="cond"/>
            <line num="580" count="14" type="stmt"/>
            <line num="583" count="32" type="stmt"/>
            <line num="584" count="39" type="stmt"/>
            <line num="586" count="39" type="stmt"/>
            <line num="587" count="39" type="stmt"/>
            <line falsecount="30" truecount="9" num="587" type="cond"/>
            <line num="588" count="9" type="stmt"/>
            <line num="590" count="30" type="stmt"/>
            <line falsecount="10" truecount="20" num="590" type="cond"/>
            <line num="592" count="30" type="stmt"/>
            <line num="594" count="39" type="stmt"/>
            <line num="596" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Map" num="599" count="14" type="method"/>
            <line num="603" count="14" type="stmt"/>
            <line num="604" count="14" type="stmt"/>
            <line num="605" count="14" type="stmt"/>
            <line num="606" count="18" type="stmt"/>
            <line num="607" count="18" type="stmt"/>
            <line num="608" count="18" type="stmt"/>
            <line num="610" count="14" type="stmt"/>
            <line complexity="1" visibility="private" signature="constructMapType(Type,JsonDeserializationContext) : Map" num="613" count="14" type="method"/>
            <line num="614" count="14" type="stmt"/>
            <line num="615" count="14" type="stmt"/>
            <line num="616" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="createInstance(Type) : Map" num="619" count="12" type="method"/>
            <line num="620" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="623" count="0" type="method"/>
            <line num="625" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(BigDecimal,Type,JsonSerializationContext) : JsonElement" num="631" count="6" type="method"/>
            <line num="632" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : BigDecimal" num="635" count="11" type="method"/>
            <line num="637" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="640" count="4" type="method"/>
            <line num="642" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(BigInteger,Type,JsonSerializationContext) : JsonElement" num="649" count="5" type="method"/>
            <line num="650" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : BigInteger" num="653" count="6" type="method"/>
            <line num="655" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="658" count="2" type="method"/>
            <line num="660" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Number,Type,JsonSerializationContext) : JsonElement" num="666" count="1" type="method"/>
            <line num="667" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Number" num="670" count="2" type="method"/>
            <line num="672" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="675" count="0" type="method"/>
            <line num="677" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="LongSerializer(LongSerializationPolicy)" num="684" count="506" type="method"/>
            <line num="685" count="506" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Long,Type,JsonSerializationContext) : JsonElement" num="688" count="85" type="method"/>
            <line num="689" count="85" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="692" count="0" type="method"/>
            <line num="694" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Long" num="699" count="62" type="method"/>
            <line num="701" count="62" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="704" count="1" type="method"/>
            <line num="706" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Integer,Type,JsonSerializationContext) : JsonElement" num="712" count="357" type="method"/>
            <line num="713" count="357" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Integer" num="716" count="254" type="method"/>
            <line num="718" count="254" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="721" count="0" type="method"/>
            <line num="723" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Short,Type,JsonSerializationContext) : JsonElement" num="729" count="0" type="method"/>
            <line num="730" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Short" num="733" count="0" type="method"/>
            <line num="735" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="738" count="0" type="method"/>
            <line num="740" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Byte,Type,JsonSerializationContext) : JsonElement" num="745" count="0" type="method"/>
            <line num="746" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Byte" num="749" count="0" type="method"/>
            <line num="751" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="754" count="0" type="method"/>
            <line num="756" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="FloatSerializer(boolean)" num="763" count="506" type="method"/>
            <line num="764" count="506" type="stmt"/>
            <line complexity="4" visibility="public" signature="serialize(Float,Type,JsonSerializationContext) : JsonElement" num="767" count="20" type="method"/>
            <line num="768" count="20" type="stmt"/>
            <line falsecount="6" truecount="14" num="768" type="cond"/>
            <line num="769" count="14" type="stmt"/>
            <line falsecount="8" truecount="6" num="769" type="cond"/>
            <line num="770" count="6" type="stmt"/>
            <line num="775" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Float" num="780" count="11" type="method"/>
            <line num="782" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="785" count="0" type="method"/>
            <line num="787" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="DoubleSerializer(boolean)" num="794" count="506" type="method"/>
            <line num="795" count="506" type="stmt"/>
            <line complexity="4" visibility="public" signature="serialize(Double,Type,JsonSerializationContext) : JsonElement" num="798" count="31" type="method"/>
            <line num="799" count="31" type="stmt"/>
            <line falsecount="12" truecount="19" num="799" type="cond"/>
            <line num="800" count="19" type="stmt"/>
            <line falsecount="12" truecount="7" num="800" type="cond"/>
            <line num="801" count="7" type="stmt"/>
            <line num="806" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Double" num="811" count="17" type="method"/>
            <line num="813" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="816" count="0" type="method"/>
            <line num="818" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Character,Type,JsonSerializationContext) : JsonElement" num="824" count="4" type="method"/>
            <line num="825" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Character" num="828" count="4" type="method"/>
            <line num="830" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="833" count="0" type="method"/>
            <line num="835" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(String,Type,JsonSerializationContext) : JsonElement" num="841" count="400" type="method"/>
            <line num="842" count="404" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : String" num="845" count="322" type="method"/>
            <line num="847" count="331" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="850" count="0" type="method"/>
            <line num="852" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Boolean,Type,JsonSerializationContext) : JsonElement" num="858" count="71" type="method"/>
            <line num="859" count="71" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Boolean" num="862" count="40" type="method"/>
            <line num="864" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="867" count="0" type="method"/>
            <line num="869" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createInstance(Type) : TreeSet&lt;?&gt;" num="874" count="2" type="method"/>
            <line num="875" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="877" count="0" type="method"/>
            <line num="879" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createInstance(Type) : HashSet&lt;?&gt;" num="884" count="4" type="method"/>
            <line num="885" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="887" count="0" type="method"/>
            <line num="889" count="0" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java" name="DelegatingJsonElementVisitor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="117" coveredmethods="0" methods="15" elements="31" classes="1" ncloc="58" statements="16" conditionals="0" coveredstatements="0"/>
            <class name="DelegatingJsonElementVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="15" elements="31" statements="16" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="DelegatingJsonElementVisitor(JsonElementVisitor)" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="endArray(JsonArray) : void" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="endObject(JsonObject) : void" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="startArray(JsonArray) : void" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="startObject(JsonObject) : void" num="67" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitArrayMember(JsonArray,JsonPrimitive,boolean) : void" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitArrayMember(JsonArray,JsonArray,boolean) : void" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitArrayMember(JsonArray,JsonObject,boolean) : void" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitObjectMember(JsonObject,String,JsonPrimitive,boolean) : void" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitObjectMember(JsonObject,String,JsonArray,boolean) : void" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitObjectMember(JsonObject,String,JsonObject,boolean) : void" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitNullObjectMember(JsonObject,String,boolean) : void" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitPrimitive(JsonPrimitive) : void" num="106" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitNull() : void" num="110" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitNullArrayMember(JsonArray,boolean) : void" num="114" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java" name="DisjunctionExclusionStrategy.java">
            <metrics coveredelements="17" coveredconditionals="4" complexity="5" loc="52" coveredmethods="3" methods="3" elements="17" classes="1" ncloc="25" statements="10" conditionals="4" coveredstatements="10"/>
            <class name="DisjunctionExclusionStrategy">
               <metrics coveredelements="17" coveredconditionals="4" complexity="5" coveredmethods="3" methods="3" elements="17" statements="10" conditionals="4" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="DisjunctionExclusionStrategy(Collection&lt;ExclusionStrategy&gt;)" num="30" count="327" type="method"/>
            <line num="31" count="327" type="stmt"/>
            <line num="32" count="326" type="stmt"/>
            <line complexity="2" visibility="public" signature="shouldSkipField(FieldAttributes) : boolean" num="35" count="1697" type="method"/>
            <line num="36" count="1712" type="stmt"/>
            <line num="37" count="5224" type="stmt"/>
            <line falsecount="4997" truecount="241" num="37" type="cond"/>
            <line num="38" count="241" type="stmt"/>
            <line num="41" count="1477" type="stmt"/>
            <line complexity="2" visibility="public" signature="shouldSkipClass(Class&lt;?&gt;) : boolean" num="44" count="2849" type="method"/>
            <line num="45" count="2862" type="stmt"/>
            <line num="46" count="8696" type="stmt"/>
            <line falsecount="8706" truecount="7" num="46" type="cond"/>
            <line num="47" count="7" type="stmt"/>
            <line num="50" count="2876" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/Escaper.java" name="Escaper.java">
            <metrics coveredelements="64" coveredconditionals="6" complexity="21" loc="160" coveredmethods="7" methods="7" elements="81" classes="1" ncloc="109" statements="66" conditionals="8" coveredstatements="51"/>
            <class name="Escaper">
               <metrics coveredelements="64" coveredconditionals="6" complexity="21" coveredmethods="7" methods="7" elements="81" statements="66" conditionals="8" coveredstatements="51"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 46()" num="46" count="1" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="Escaper(boolean)" num="64" count="33" type="method"/>
            <line num="65" count="33" type="stmt"/>
            <line complexity="2" visibility="public" signature="escapeJsonString(CharSequence) : String" num="68" count="73" type="method"/>
            <line num="69" count="73" type="stmt"/>
            <line num="70" count="73" type="stmt"/>
            <line num="71" count="73" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="73" type="stmt"/>
            <line complexity="12" visibility="private" signature="escapeJsonString(CharSequence,StringBuffer) : void" num="78" count="73" type="method"/>
            <line num="79" count="73" type="stmt"/>
            <line num="80" count="73" type="stmt"/>
            <line num="82" count="73" type="stmt"/>
            <line falsecount="73" truecount="619" num="82" type="cond"/>
            <line num="83" count="619" type="stmt"/>
            <line num="84" count="619" type="stmt"/>
            <line num="86" count="619" type="stmt"/>
            <line falsecount="49" truecount="570" num="86" type="cond"/>
            <line num="87" count="570" type="stmt"/>
            <line num="90" count="49" type="stmt"/>
            <line num="91" count="49" type="stmt"/>
            <line num="92" count="49" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="3" type="stmt"/>
            <line num="100" count="3" type="stmt"/>
            <line num="101" count="3" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="42" type="stmt"/>
            <line num="118" count="42" type="stmt"/>
            <line num="119" count="42" type="stmt"/>
            <line num="122" count="73" type="stmt"/>
            <line complexity="2" visibility="private" signature="mustEscapeCharInJsString(int) : boolean" num="125" count="578" type="method"/>
            <line num="126" count="578" type="stmt"/>
            <line falsecount="0" truecount="578" num="126" type="cond"/>
            <line num="127" count="578" type="stmt"/>
            <line num="128" count="578" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isControlCharacter(int) : boolean" num="134" count="619" type="method"/>
            <line num="136" count="619" type="stmt"/>
            <line complexity="2" visibility="private" signature="appendHexJavaScriptRepresentation(int,Appendable) : void" num="142" count="42" type="method"/>
            <line num="144" count="42" type="stmt"/>
            <line falsecount="42" truecount="0" num="144" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="42" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/ExclusionStrategy.java" name="ExclusionStrategy.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="95" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ExclusionStrategy">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java" name="ExposeAnnotationDeserializationExclusionStrategy.java">
            <metrics coveredelements="9" coveredconditionals="2" complexity="3" loc="39" coveredmethods="2" methods="2" elements="9" classes="1" ncloc="14" statements="5" conditionals="2" coveredstatements="5"/>
            <class name="ExposeAnnotationDeserializationExclusionStrategy">
               <metrics coveredelements="9" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="9" statements="5" conditionals="2" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="shouldSkipClass(Class&lt;?&gt;) : boolean" num="28" count="8" type="method"/>
            <line num="29" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="shouldSkipField(FieldAttributes) : boolean" num="32" count="12" type="method"/>
            <line num="33" count="12" type="stmt"/>
            <line num="34" count="12" type="stmt"/>
            <line falsecount="8" truecount="4" num="34" type="cond"/>
            <line num="35" count="4" type="stmt"/>
            <line num="37" count="8" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java" name="ExposeAnnotationSerializationExclusionStrategy.java">
            <metrics coveredelements="9" coveredconditionals="2" complexity="3" loc="40" coveredmethods="2" methods="2" elements="9" classes="1" ncloc="14" statements="5" conditionals="2" coveredstatements="5"/>
            <class name="ExposeAnnotationSerializationExclusionStrategy">
               <metrics coveredelements="9" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="9" statements="5" conditionals="2" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="shouldSkipClass(Class&lt;?&gt;) : boolean" num="29" count="21" type="method"/>
            <line num="30" count="21" type="stmt"/>
            <line complexity="2" visibility="public" signature="shouldSkipField(FieldAttributes) : boolean" num="33" count="32" type="method"/>
            <line num="34" count="32" type="stmt"/>
            <line num="35" count="32" type="stmt"/>
            <line falsecount="24" truecount="8" num="35" type="cond"/>
            <line num="36" count="8" type="stmt"/>
            <line num="38" count="24" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/FieldAttributes.java" name="FieldAttributes.java">
            <metrics coveredelements="56" coveredconditionals="8" complexity="19" loc="230" coveredmethods="14" methods="14" elements="57" classes="1" ncloc="96" statements="35" conditionals="8" coveredstatements="34"/>
            <class name="FieldAttributes">
               <metrics coveredelements="56" coveredconditionals="8" complexity="19" coveredmethods="14" methods="14" elements="57" statements="35" conditionals="8" coveredstatements="34"/>
            </class>
            <line complexity="1" visibility="package" signature="FieldAttributes(Class&lt;?&gt;,Field)" num="59" count="1720" type="method"/>
            <line num="60" count="1732" type="stmt"/>
            <line num="61" count="1743" type="stmt"/>
            <line num="62" count="1745" type="stmt"/>
            <line num="63" count="1745" type="stmt"/>
            <line num="64" count="1744" type="stmt"/>
            <line num="65" count="1740" type="stmt"/>
            <line num="66" count="1744" type="stmt"/>
            <line complexity="2" visibility="private" signature="getMaxCacheSize() : int" num="69" count="1" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDeclaringClass() : Class&lt;?&gt;" num="83" count="1" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="90" count="1434" type="method"/>
            <line num="91" count="1448" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDeclaredType() : Type" num="110" count="1427" type="method"/>
            <line num="111" count="1438" type="stmt"/>
            <line falsecount="23" truecount="1420" num="111" type="cond"/>
            <line num="112" count="1422" type="stmt"/>
            <line num="114" count="1438" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDeclaredClass() : Class&lt;?&gt;" num="133" count="3170" type="method"/>
            <line num="134" count="3182" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnnotation(Class&lt;T&gt;) : T" num="144" count="1584" type="method"/>
            <line num="145" count="1581" type="stmt"/>
            <line complexity="3" visibility="public" signature="getAnnotations() : Collection&lt;Annotation&gt;" num="154" count="3005" type="method"/>
            <line num="155" count="3032" type="stmt"/>
            <line falsecount="1544" truecount="1488" num="155" type="cond"/>
            <line num="156" count="1484" type="stmt"/>
            <line num="157" count="1489" type="stmt"/>
            <line num="158" count="1494" type="stmt"/>
            <line falsecount="1350" truecount="144" num="158" type="cond"/>
            <line num="159" count="144" type="stmt"/>
            <line num="161" count="144" type="stmt"/>
            <line num="164" count="3036" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasModifier(int) : boolean" num="177" count="3395" type="method"/>
            <line num="178" count="3397" type="stmt"/>
            <line complexity="1" visibility="package" signature="set(Object,Object) : void" num="188" count="553" type="method"/>
            <line num="189" count="559" type="stmt"/>
            <line complexity="1" visibility="package" signature="get(Object) : Object" num="199" count="883" type="method"/>
            <line num="200" count="887" type="stmt"/>
            <line complexity="1" visibility="package" signature="isSynthetic() : boolean" num="208" count="1698" type="method"/>
            <line num="209" count="1713" type="stmt"/>
            <line complexity="1" visibility="package" signature="getFieldObject() : Field" num="215" count="2" type="method"/>
            <line num="217" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="getAnnotationFromArray(Collection&lt;Annotation&gt;,Class&lt;T&gt;) : T" num="220" count="1574" type="method"/>
            <line num="223" count="1590" type="stmt"/>
            <line num="224" count="125" type="stmt"/>
            <line falsecount="54" truecount="71" num="224" type="cond"/>
            <line num="225" count="71" type="stmt"/>
            <line num="228" count="1512" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/FieldNamingPolicy.java" name="FieldNamingPolicy.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="99" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="15" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="FieldNamingPolicy">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="private" signature="FieldNamingPolicy(FieldNamingStrategy2)" num="92" count="4" type="method"/>
            <line num="93" count="4" type="stmt"/>
            <line complexity="1" visibility="package" signature="getFieldNamingPolicy() : FieldNamingStrategy2" num="96" count="8" type="method"/>
            <line num="97" count="8" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/FieldNamingStrategy.java" name="FieldNamingStrategy.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="40" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FieldNamingStrategy">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/FieldNamingStrategy2.java" name="FieldNamingStrategy2.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="38" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FieldNamingStrategy2">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/FieldNamingStrategy2Adapter.java" name="FieldNamingStrategy2Adapter.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="2" loc="38" coveredmethods="2" methods="2" elements="5" classes="1" ncloc="12" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="FieldNamingStrategy2Adapter">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="FieldNamingStrategy2Adapter(FieldNamingStrategy)" num="29" count="2" type="method"/>
            <line num="30" count="2" type="stmt"/>
            <line num="31" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="translateName(FieldAttributes) : String" num="34" count="2" type="method"/>
            <line num="36" count="2" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/GenericArrayTypeImpl.java" name="GenericArrayTypeImpl.java">
            <metrics coveredelements="14" coveredconditionals="3" complexity="7" loc="70" coveredmethods="4" methods="4" elements="18" classes="1" ncloc="26" statements="8" conditionals="6" coveredstatements="7"/>
            <class name="GenericArrayTypeImpl">
               <metrics coveredelements="14" coveredconditionals="3" complexity="7" coveredmethods="4" methods="4" elements="18" statements="8" conditionals="6" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="GenericArrayTypeImpl(Type)" num="47" count="30" type="method"/>
            <line num="48" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="getGenericComponentType() : Type" num="51" count="111" type="method"/>
            <line num="52" count="111" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="55" count="1" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="62" type="cond"/>
            <line complexity="2" visibility="public" signature="hashCode() : int" num="66" count="31" type="method"/>
            <line num="68" count="31" type="stmt"/>
            <line falsecount="31" truecount="0" num="68" type="cond"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/Gson.java" name="Gson.java">
            <metrics coveredelements="109" coveredconditionals="13" complexity="37" loc="566" coveredmethods="21" methods="23" elements="132" classes="1" ncloc="209" statements="87" conditionals="22" coveredstatements="75"/>
            <class name="Gson">
               <metrics coveredelements="109" coveredconditionals="13" complexity="37" coveredmethods="21" methods="23" elements="132" statements="87" conditionals="22" coveredstatements="75"/>
            </class>
            <line complexity="1" visibility="public" signature="Gson()" num="150" count="344" type="method"/>
            <line num="151" count="344" type="stmt"/>
            <line complexity="1" visibility="package" signature="Gson(ExclusionStrategy,ExclusionStrategy,FieldNamingStrategy2,MappedObjectConstructor,boolean,ParameterizedTypeHandlerMap&lt;JsonSerializer&lt;?&gt;&gt;,ParameterizedTypeHandlerMap&lt;JsonDeserializer&lt;?&gt;&gt;,boolean,boolean,boolean)" num="157" count="506" type="method"/>
            <line num="162" count="506" type="stmt"/>
            <line num="163" count="506" type="stmt"/>
            <line num="164" count="506" type="stmt"/>
            <line num="165" count="506" type="stmt"/>
            <line num="166" count="506" type="stmt"/>
            <line num="167" count="506" type="stmt"/>
            <line num="168" count="506" type="stmt"/>
            <line num="169" count="506" type="stmt"/>
            <line num="170" count="506" type="stmt"/>
            <line num="171" count="506" type="stmt"/>
            <line complexity="1" visibility="private" signature="createDefaultObjectNavigatorFactory(ExclusionStrategy) : ObjectNavigatorFactory" num="174" count="770" type="method"/>
            <line num="175" count="780" type="stmt"/>
            <line complexity="2" visibility="private" signature="createExclusionStrategy(double) : ExclusionStrategy" num="178" count="1" type="method"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="183" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="toJsonTree(Object) : JsonElement" num="202" count="9" type="method"/>
            <line num="203" count="9" type="stmt"/>
            <line falsecount="9" truecount="0" num="203" type="cond"/>
            <line num="204" count="0" type="stmt"/>
            <line num="206" count="9" type="stmt"/>
            <line complexity="2" visibility="public" signature="toJsonTree(Object,Type) : JsonElement" num="225" count="417" type="method"/>
            <line num="226" count="419" type="stmt"/>
            <line falsecount="418" truecount="1" num="226" type="cond"/>
            <line num="227" count="1" type="stmt"/>
            <line num="229" count="416" type="stmt"/>
            <line num="231" count="416" type="stmt"/>
            <line complexity="3" visibility="public" signature="toJson(Object) : String" num="247" count="337" type="method"/>
            <line num="248" count="340" type="stmt"/>
            <line falsecount="341" truecount="0" num="248" type="cond"/>
            <line num="249" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="249" type="cond"/>
            <line num="251" count="342" type="stmt"/>
            <line complexity="1" visibility="public" signature="toJson(Object,Type) : String" num="269" count="388" type="method"/>
            <line num="270" count="390" type="stmt"/>
            <line num="271" count="391" type="stmt"/>
            <line num="272" count="373" type="stmt"/>
            <line complexity="4" visibility="public" signature="toJson(Object,Appendable) : void" num="288" count="1" type="method"/>
            <line num="289" count="1" type="stmt"/>
            <line num="290" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="290" type="cond"/>
            <line num="291" count="1" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="292" type="cond"/>
            <line num="293" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toJson(Object,Type,Appendable) : void" num="315" count="2" type="method"/>
            <line num="316" count="2" type="stmt"/>
            <line num="317" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="toJson(Object,Type,JsonWriter) : void" num="324" count="11" type="method"/>
            <line num="325" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="toJson(JsonElement) : String" num="335" count="8" type="method"/>
            <line num="336" count="8" type="stmt"/>
            <line num="337" count="8" type="stmt"/>
            <line num="338" count="8" type="stmt"/>
            <line complexity="4" visibility="public" signature="toJson(JsonElement,Appendable) : void" num="348" count="383" type="method"/>
            <line num="349" count="384" type="stmt"/>
            <line num="350" count="387" type="stmt"/>
            <line falsecount="384" truecount="2" num="350" type="cond"/>
            <line num="351" count="2" type="stmt"/>
            <line num="353" count="385" type="stmt"/>
            <line num="354" count="387" type="stmt"/>
            <line falsecount="379" truecount="8" num="354" type="cond"/>
            <line num="355" count="8" type="stmt"/>
            <line num="357" count="386" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toJson(JsonElement,JsonWriter) : void" num="366" count="396" type="method"/>
            <line num="367" count="395" type="stmt"/>
            <line num="368" count="397" type="stmt"/>
            <line num="369" count="399" type="stmt"/>
            <line num="370" count="399" type="stmt"/>
            <line num="371" count="398" type="stmt"/>
            <line num="372" count="398" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line num="376" count="396" type="stmt"/>
            <line num="377" count="398" type="stmt"/>
            <line complexity="1" visibility="public" signature="fromJson(String,Class&lt;T&gt;) : T" num="398" count="303" type="method"/>
            <line num="400" count="305" type="stmt"/>
            <line num="401" count="295" type="stmt"/>
            <line complexity="2" visibility="public" signature="fromJson(String,Type) : T" num="421" count="339" type="method"/>
            <line num="423" count="342" type="stmt"/>
            <line falsecount="345" truecount="1" num="423" type="cond"/>
            <line num="424" count="1" type="stmt"/>
            <line num="426" count="345" type="stmt"/>
            <line num="427" count="345" type="stmt"/>
            <line num="428" count="324" type="stmt"/>
            <line complexity="1" visibility="public" signature="fromJson(Reader,Class&lt;T&gt;) : T" num="449" count="4" type="method"/>
            <line num="450" count="4" type="stmt"/>
            <line num="451" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="fromJson(Reader,Type) : T" num="472" count="337" type="method"/>
            <line num="473" count="342" type="stmt"/>
            <line complexity="1" visibility="public" signature="fromJson(JsonReader,Type) : T" num="480" count="351" type="method"/>
            <line num="482" count="351" type="stmt"/>
            <line num="483" count="355" type="stmt"/>
            <line num="484" count="360" type="stmt"/>
            <line num="485" count="360" type="stmt"/>
            <line num="486" count="346" type="stmt"/>
            <line num="488" count="354" type="stmt"/>
            <line complexity="1" visibility="public" signature="fromJson(JsonElement,Class&lt;T&gt;) : T" num="508" count="13" type="method"/>
            <line num="509" count="13" type="stmt"/>
            <line num="510" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="fromJson(JsonElement,Type) : T" num="531" count="355" type="method"/>
            <line num="533" count="356" type="stmt"/>
            <line falsecount="366" truecount="0" num="533" type="cond"/>
            <line num="534" count="0" type="stmt"/>
            <line num="536" count="365" type="stmt"/>
            <line num="539" count="361" type="stmt"/>
            <line num="540" count="345" type="stmt"/>
            <line complexity="1" visibility="private" signature="writeOutNullString(Appendable) : void" num="548" count="0" type="method"/>
            <line num="549" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="552" count="0" type="method"/>
            <line num="554" count="0" type="stmt"/>
            <line num="564" count="0" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/GsonBuilder.java" name="GsonBuilder.java">
            <metrics coveredelements="141" coveredconditionals="20" complexity="44" loc="570" coveredmethods="22" methods="28" elements="176" classes="1" ncloc="247" statements="120" conditionals="28" coveredstatements="99"/>
            <class name="GsonBuilder">
               <metrics coveredelements="141" coveredconditionals="20" complexity="44" coveredmethods="22" methods="28" elements="176" statements="120" conditionals="28" coveredstatements="99"/>
            </class>
            <line complexity="1" visibility="public" signature="GsonBuilder()" num="91" count="175" type="method"/>
            <line num="93" count="175" type="stmt"/>
            <line num="94" count="175" type="stmt"/>
            <line num="97" count="175" type="stmt"/>
            <line num="98" count="175" type="stmt"/>
            <line num="99" count="175" type="stmt"/>
            <line num="100" count="175" type="stmt"/>
            <line num="101" count="175" type="stmt"/>
            <line num="102" count="175" type="stmt"/>
            <line num="103" count="175" type="stmt"/>
            <line num="104" count="175" type="stmt"/>
            <line num="105" count="175" type="stmt"/>
            <line num="106" count="175" type="stmt"/>
            <line num="107" count="175" type="stmt"/>
            <line num="108" count="175" type="stmt"/>
            <line num="109" count="175" type="stmt"/>
            <line num="110" count="175" type="stmt"/>
            <line num="111" count="175" type="stmt"/>
            <line num="112" count="175" type="stmt"/>
            <line complexity="1" visibility="public" signature="setVersion(double) : GsonBuilder" num="122" count="15" type="method"/>
            <line num="123" count="15" type="stmt"/>
            <line num="124" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="excludeFieldsWithModifiers(int) : GsonBuilder" num="138" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generateNonExecutableJson() : GsonBuilder" num="152" count="3" type="method"/>
            <line num="153" count="3" type="stmt"/>
            <line num="154" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="excludeFieldsWithoutExposeAnnotation() : GsonBuilder" num="163" count="8" type="method"/>
            <line num="164" count="8" type="stmt"/>
            <line num="165" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="serializeNulls() : GsonBuilder" num="175" count="30" type="method"/>
            <line num="176" count="30" type="stmt"/>
            <line num="177" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="disableInnerClassSerialization() : GsonBuilder" num="186" count="1" type="method"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setLongSerializationPolicy(LongSerializationPolicy) : GsonBuilder" num="199" count="2" type="method"/>
            <line num="200" count="2" type="stmt"/>
            <line num="201" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setFieldNamingPolicy(FieldNamingPolicy) : GsonBuilder" num="212" count="8" type="method"/>
            <line num="213" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="setFieldNamingStrategy(FieldNamingStrategy) : GsonBuilder" num="224" count="1" type="method"/>
            <line num="225" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="setFieldNamingStrategy(FieldNamingStrategy2) : GsonBuilder" num="235" count="9" type="method"/>
            <line num="236" count="9" type="stmt"/>
            <line num="238" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="setExclusionStrategies(ExclusionStrategy) : GsonBuilder" num="251" count="3" type="method"/>
            <line num="252" count="3" type="stmt"/>
            <line num="253" count="3" type="stmt"/>
            <line num="255" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPrettyPrinting() : GsonBuilder" num="264" count="8" type="method"/>
            <line num="265" count="8" type="stmt"/>
            <line num="266" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="disableHtmlEscaping() : GsonBuilder" num="276" count="3" type="method"/>
            <line num="277" count="3" type="stmt"/>
            <line num="278" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDateFormat(String) : GsonBuilder" num="294" count="3" type="method"/>
            <line num="296" count="3" type="stmt"/>
            <line num="297" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDateFormat(int) : GsonBuilder" num="314" count="2" type="method"/>
            <line num="315" count="2" type="stmt"/>
            <line num="316" count="2" type="stmt"/>
            <line num="317" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDateFormat(int,int) : GsonBuilder" num="335" count="0" type="method"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="registerTypeAdapter(Type,Object) : GsonBuilder" num="355" count="81" type="method"/>
            <line num="356" count="81" type="stmt"/>
            <line num="358" count="81" type="stmt"/>
            <line falsecount="58" truecount="23" num="358" type="cond"/>
            <line num="359" count="23" type="stmt"/>
            <line num="361" count="81" type="stmt"/>
            <line falsecount="41" truecount="40" num="361" type="cond"/>
            <line num="362" count="40" type="stmt"/>
            <line num="364" count="81" type="stmt"/>
            <line falsecount="35" truecount="46" num="364" type="cond"/>
            <line num="365" count="46" type="stmt"/>
            <line num="367" count="81" type="stmt"/>
            <line complexity="1" visibility="private" signature="registerInstanceCreator(Type,InstanceCreator&lt;? extends T&gt;) : GsonBuilder" num="381" count="23" type="method"/>
            <line num="383" count="23" type="stmt"/>
            <line num="384" count="23" type="stmt"/>
            <line complexity="1" visibility="private" signature="registerSerializer(Type,JsonSerializer&lt;T&gt;) : GsonBuilder" num="397" count="40" type="method"/>
            <line num="398" count="40" type="stmt"/>
            <line num="399" count="40" type="stmt"/>
            <line complexity="1" visibility="private" signature="registerDeserializer(Type,JsonDeserializer&lt;T&gt;) : GsonBuilder" num="412" count="46" type="method"/>
            <line num="413" count="46" type="stmt"/>
            <line num="414" count="46" type="stmt"/>
            <line complexity="4" visibility="public" signature="registerTypeHierarchyAdapter(Class&lt;?&gt;,Object) : GsonBuilder" num="434" count="0" type="method"/>
            <line num="435" count="0" type="stmt"/>
            <line num="437" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="437" type="cond"/>
            <line num="438" count="0" type="stmt"/>
            <line num="440" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="440" type="cond"/>
            <line num="441" count="0" type="stmt"/>
            <line num="443" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="443" type="cond"/>
            <line num="444" count="0" type="stmt"/>
            <line num="446" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="registerInstanceCreatorForTypeHierarchy(Class&lt;?&gt;,InstanceCreator&lt;? extends T&gt;) : GsonBuilder" num="449" count="0" type="method"/>
            <line num="451" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="registerSerializerForTypeHierarchy(Class&lt;?&gt;,JsonSerializer&lt;T&gt;) : GsonBuilder" num="455" count="0" type="method"/>
            <line num="457" count="0" type="stmt"/>
            <line num="458" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="registerDeserializerForTypeHierarchy(Class&lt;?&gt;,JsonDeserializer&lt;T&gt;) : GsonBuilder" num="461" count="0" type="method"/>
            <line num="463" count="0" type="stmt"/>
            <line num="465" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="serializeSpecialFloatingPointValues() : GsonBuilder" num="488" count="7" type="method"/>
            <line num="489" count="7" type="stmt"/>
            <line num="490" count="7" type="stmt"/>
            <line complexity="4" visibility="public" signature="create() : Gson" num="499" count="161" type="method"/>
            <line num="500" count="161" type="stmt"/>
            <line num="502" count="161" type="stmt"/>
            <line num="505" count="161" type="stmt"/>
            <line num="506" count="161" type="stmt"/>
            <line num="508" count="161" type="stmt"/>
            <line falsecount="160" truecount="1" num="508" type="cond"/>
            <line num="509" count="1" type="stmt"/>
            <line num="510" count="1" type="stmt"/>
            <line num="512" count="161" type="stmt"/>
            <line falsecount="146" truecount="15" num="512" type="cond"/>
            <line num="513" count="15" type="stmt"/>
            <line num="514" count="15" type="stmt"/>
            <line num="516" count="161" type="stmt"/>
            <line falsecount="153" truecount="8" num="516" type="cond"/>
            <line num="517" count="8" type="stmt"/>
            <line num="518" count="8" type="stmt"/>
            <line num="520" count="161" type="stmt"/>
            <line num="522" count="161" type="stmt"/>
            <line num="525" count="161" type="stmt"/>
            <line num="526" count="161" type="stmt"/>
            <line num="527" count="161" type="stmt"/>
            <line num="530" count="161" type="stmt"/>
            <line num="533" count="161" type="stmt"/>
            <line num="535" count="161" type="stmt"/>
            <line num="537" count="161" type="stmt"/>
            <line num="539" count="161" type="stmt"/>
            <line num="540" count="161" type="stmt"/>
            <line num="541" count="161" type="stmt"/>
            <line num="543" count="161" type="stmt"/>
            <line num="545" count="161" type="stmt"/>
            <line num="548" count="161" type="stmt"/>
            <line complexity="8" visibility="private" signature="addTypeAdaptersForDate(String,int,int,ParameterizedTypeHandlerMap&lt;JsonSerializer&lt;?&gt;&gt;,ParameterizedTypeHandlerMap&lt;JsonDeserializer&lt;?&gt;&gt;) : void" num="551" count="161" type="method"/>
            <line num="554" count="161" type="stmt"/>
            <line num="555" count="161" type="stmt"/>
            <line falsecount="158" truecount="3" num="555" type="cond"/>
            <line num="556" count="3" type="stmt"/>
            <line num="557" count="158" type="stmt"/>
            <line falsecount="158" truecount="0" num="557" type="cond"/>
            <line num="558" count="0" type="stmt"/>
            <line num="561" count="161" type="stmt"/>
            <line falsecount="158" truecount="3" num="561" type="cond"/>
            <line num="562" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="562" type="cond"/>
            <line num="563" count="3" type="stmt"/>
            <line num="565" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="565" type="cond"/>
            <line num="566" count="2" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java" name="InnerClassExclusionStrategy.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="4" loc="43" coveredmethods="4" methods="4" elements="8" classes="1" ncloc="16" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="InnerClassExclusionStrategy">
               <metrics coveredelements="8" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="shouldSkipField(FieldAttributes) : boolean" num="28" count="2" type="method"/>
            <line num="29" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldSkipClass(Class&lt;?&gt;) : boolean" num="32" count="3" type="method"/>
            <line num="33" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="isInnerClass(Class&lt;?&gt;) : boolean" num="36" count="5" type="method"/>
            <line num="37" count="5" type="stmt"/>
            <line complexity="1" visibility="private" signature="isStatic(Class&lt;?&gt;) : boolean" num="40" count="5" type="method"/>
            <line num="41" count="5" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/InstanceCreator.java" name="InstanceCreator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="92" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="InstanceCreator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/JavaFieldNamingPolicy.java" name="JavaFieldNamingPolicy.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="51" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="JavaFieldNamingPolicy">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="protected" signature="translateName(String,Type,Collection&lt;Annotation&gt;) : String" num="47" count="1395" type="method"/>
            <line num="49" count="1422" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/JsonArray.java" name="JsonArray.java">
            <metrics coveredelements="51" coveredconditionals="10" complexity="36" loc="312" coveredmethods="13" methods="21" elements="107" classes="1" ncloc="140" statements="56" conditionals="30" coveredstatements="28"/>
            <class name="JsonArray">
               <metrics coveredelements="51" coveredconditionals="10" complexity="36" coveredmethods="13" methods="21" elements="107" statements="56" conditionals="30" coveredstatements="28"/>
            </class>
            <line complexity="1" visibility="public" signature="JsonArray()" num="41" count="251" type="method"/>
            <line num="42" count="251" type="stmt"/>
            <line complexity="2" visibility="public" signature="add(JsonElement) : void" num="50" count="545" type="method"/>
            <line num="51" count="545" type="stmt"/>
            <line falsecount="545" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="545" type="stmt"/>
            <line complexity="1" visibility="public" signature="addAll(JsonArray) : void" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="reverse() : void" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="78" count="126" type="method"/>
            <line num="79" count="126" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;JsonElement&gt;" num="88" count="192" type="method"/>
            <line num="89" count="192" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : JsonElement" num="100" count="73" type="method"/>
            <line num="101" count="73" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsNumber() : Number" num="112" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsString() : String" num="128" count="3" type="method"/>
            <line num="130" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="130" type="cond"/>
            <line num="131" count="3" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsDouble() : double" num="144" count="2" type="method"/>
            <line num="146" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="146" type="cond"/>
            <line num="147" count="2" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsBigDecimal() : BigDecimal" num="161" count="1" type="method"/>
            <line num="163" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="163" type="cond"/>
            <line num="164" count="1" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsBigInteger() : BigInteger" num="178" count="1" type="method"/>
            <line num="180" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="180" type="cond"/>
            <line num="181" count="1" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsFloat() : float" num="194" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="196" type="cond"/>
            <line num="197" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsLong() : long" num="210" count="3" type="method"/>
            <line num="212" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="212" type="cond"/>
            <line num="213" count="3" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsInt() : int" num="226" count="2" type="method"/>
            <line num="228" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="228" type="cond"/>
            <line num="229" count="2" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsByte() : byte" num="234" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="236" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsCharacter() : char" num="242" count="0" type="method"/>
            <line num="244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="244" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsShort() : short" num="258" count="0" type="method"/>
            <line num="260" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="260" type="cond"/>
            <line num="261" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsBoolean() : boolean" num="274" count="6" type="method"/>
            <line num="276" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="276" type="cond"/>
            <line num="277" count="6" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="getAsObject() : Object" num="290" count="0" type="method"/>
            <line num="292" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="292" type="cond"/>
            <line num="293" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="toString(Appendable,Escaper) : void" num="298" count="6" type="method"/>
            <line num="300" count="6" type="stmt"/>
            <line num="301" count="6" type="stmt"/>
            <line num="302" count="6" type="stmt"/>
            <line num="303" count="18" type="stmt"/>
            <line falsecount="12" truecount="6" num="303" type="cond"/>
            <line num="304" count="6" type="stmt"/>
            <line num="306" count="12" type="stmt"/>
            <line num="308" count="18" type="stmt"/>
            <line num="310" count="6" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java" name="JsonArrayDeserializationVisitor.java">
            <metrics coveredelements="43" coveredconditionals="13" complexity="17" loc="112" coveredmethods="5" methods="8" elements="55" classes="1" ncloc="69" statements="31" conditionals="16" coveredstatements="25"/>
            <class name="JsonArrayDeserializationVisitor">
               <metrics coveredelements="43" coveredconditionals="13" complexity="17" coveredmethods="5" methods="8" elements="55" statements="31" conditionals="16" coveredstatements="25"/>
            </class>
            <line complexity="1" visibility="package" signature="JsonArrayDeserializationVisitor(JsonArray,Type,ObjectNavigatorFactory,ObjectConstructor,ParameterizedTypeHandlerMap&lt;JsonDeserializer&lt;?&gt;&gt;,JsonDeserializationContext)" num="31" count="77" type="method"/>
            <line num="35" count="77" type="stmt"/>
            <line complexity="3" visibility="protected" signature="constructTarget() : T" num="38" count="31" type="method"/>
            <line num="42" count="31" type="stmt"/>
            <line num="44" count="31" type="stmt"/>
            <line falsecount="31" truecount="0" num="44" type="cond"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="31" type="stmt"/>
            <line num="48" count="31" type="stmt"/>
            <line falsecount="2" truecount="29" num="48" type="cond"/>
            <line num="49" count="29" type="stmt"/>
            <line num="52" count="29" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line complexity="8" visibility="public" signature="visitArray(Object,Type) : void" num="59" count="29" type="method"/>
            <line num="60" count="29" type="stmt"/>
            <line falsecount="29" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="29" type="stmt"/>
            <line num="64" count="29" type="stmt"/>
            <line num="65" count="29" type="stmt"/>
            <line falsecount="27" truecount="70" num="65" type="cond"/>
            <line num="66" count="70" type="stmt"/>
            <line num="67" count="70" type="stmt"/>
            <line num="69" count="70" type="stmt"/>
            <line falsecount="68" truecount="2" num="69" type="cond"/>
            <line num="70" count="2" type="stmt"/>
            <line num="71" count="68" type="stmt"/>
            <line falsecount="54" truecount="14" num="71" type="cond"/>
            <line num="72" count="14" type="stmt"/>
            <line num="73" count="54" type="stmt"/>
            <line falsecount="42" truecount="12" num="73" type="cond"/>
            <line num="74" count="12" type="stmt"/>
            <line num="75" count="42" type="stmt"/>
            <line falsecount="0" truecount="42" num="75" type="cond"/>
            <line num="76" count="42" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="68" type="stmt"/>
            <line complexity="1" visibility="public" signature="startVisitingObject(Object) : void" num="89" count="1" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitArrayField(FieldAttributes,Type,Object) : void" num="93" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitObjectField(FieldAttributes,Type,Object) : void" num="98" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFieldUsingCustomHandler(FieldAttributes,Type,Object) : boolean" num="103" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitPrimitive(Object) : void" num="108" count="1" type="method"/>
            <line num="109" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/JsonDeserializationContext.java" name="JsonDeserializationContext.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JsonDeserializationContext">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/JsonDeserializationContextDefault.java" name="JsonDeserializationContextDefault.java">
            <metrics coveredelements="38" coveredconditionals="7" complexity="11" loc="88" coveredmethods="6" methods="6" elements="40" classes="1" ncloc="58" statements="26" conditionals="8" coveredstatements="25"/>
            <class name="JsonDeserializationContextDefault">
               <metrics coveredelements="38" coveredconditionals="7" complexity="11" coveredmethods="6" methods="6" elements="40" statements="26" conditionals="8" coveredstatements="25"/>
            </class>
            <line complexity="1" visibility="package" signature="JsonDeserializationContextDefault(ObjectNavigatorFactory,ParameterizedTypeHandlerMap&lt;JsonDeserializer&lt;?&gt;&gt;,MappedObjectConstructor)" num="32" count="357" type="method"/>
            <line num="35" count="364" type="stmt"/>
            <line num="36" count="361" type="stmt"/>
            <line num="37" count="364" type="stmt"/>
            <line complexity="1" visibility="package" signature="getObjectConstructor() : ObjectConstructor" num="40" count="62" type="method"/>
            <line num="41" count="62" type="stmt"/>
            <line complexity="6" visibility="public" signature="deserialize(JsonElement,Type) : T" num="44" count="493" type="method"/>
            <line num="46" count="493" type="stmt"/>
            <line falsecount="500" truecount="6" num="46" type="cond"/>
            <line num="47" count="6" type="stmt"/>
            <line num="48" count="499" type="stmt"/>
            <line falsecount="446" truecount="54" num="48" type="cond"/>
            <line num="49" count="54" type="stmt"/>
            <line num="50" count="446" type="stmt"/>
            <line falsecount="205" truecount="240" num="50" type="cond"/>
            <line num="51" count="238" type="stmt"/>
            <line num="52" count="205" type="stmt"/>
            <line falsecount="0" truecount="205" num="52" type="cond"/>
            <line num="53" count="205" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="fromJsonArray(Type,JsonArray,JsonDeserializationContext) : T" num="59" count="54" type="method"/>
            <line num="61" count="54" type="stmt"/>
            <line num="63" count="54" type="stmt"/>
            <line num="64" count="54" type="stmt"/>
            <line num="65" count="48" type="stmt"/>
            <line complexity="1" visibility="private" signature="fromJsonObject(Type,JsonObject,JsonDeserializationContext) : T" num="68" count="228" type="method"/>
            <line num="70" count="231" type="stmt"/>
            <line num="72" count="240" type="stmt"/>
            <line num="73" count="242" type="stmt"/>
            <line num="74" count="230" type="stmt"/>
            <line complexity="1" visibility="private" signature="fromJsonPrimitive(Type,JsonPrimitive,JsonDeserializationContext) : T" num="77" count="205" type="method"/>
            <line num="80" count="205" type="stmt"/>
            <line num="82" count="205" type="stmt"/>
            <line num="84" count="205" type="stmt"/>
            <line num="85" count="198" type="stmt"/>
            <line num="86" count="198" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java" name="JsonDeserializationVisitor.java">
            <metrics coveredelements="43" coveredconditionals="5" complexity="13" loc="112" coveredmethods="9" methods="9" elements="45" classes="1" ncloc="73" statements="30" conditionals="6" coveredstatements="29"/>
            <class name="JsonDeserializationVisitor">
               <metrics coveredelements="43" coveredconditionals="5" complexity="13" coveredmethods="9" methods="9" elements="45" statements="30" conditionals="6" coveredstatements="29"/>
            </class>
            <line complexity="1" visibility="public" signature="JsonDeserializationVisitor(JsonElement,Type,ObjectNavigatorFactory,ObjectConstructor,ParameterizedTypeHandlerMap&lt;JsonDeserializer&lt;?&gt;&gt;,JsonDeserializationContext)" num="40" count="579" type="method"/>
            <line num="44" count="588" type="stmt"/>
            <line num="45" count="590" type="stmt"/>
            <line num="46" count="591" type="stmt"/>
            <line num="47" count="591" type="stmt"/>
            <line num="48" count="591" type="stmt"/>
            <line num="49" count="591" type="stmt"/>
            <line num="50" count="592" type="stmt"/>
            <line num="51" count="592" type="stmt"/>
            <line complexity="2" visibility="public" signature="getTarget() : T" num="54" count="850" type="method"/>
            <line num="55" count="855" type="stmt"/>
            <line falsecount="576" truecount="278" num="55" type="cond"/>
            <line num="56" count="278" type="stmt"/>
            <line num="57" count="276" type="stmt"/>
            <line num="59" count="850" type="stmt"/>
            <line complexity="1" visibility="public" signature="start(ObjectTypePair) : void" num="64" count="267" type="method"/>
            <line complexity="1" visibility="public" signature="end(ObjectTypePair) : void" num="67" count="267" type="method"/>
            <line complexity="2" visibility="public" signature="visitUsingCustomHandler(ObjectTypePair) : boolean" num="70" count="576" type="method"/>
            <line num="72" count="583" type="stmt"/>
            <line num="73" count="590" type="stmt"/>
            <line falsecount="312" truecount="278" num="73" type="cond"/>
            <line num="74" count="278" type="stmt"/>
            <line num="76" count="312" type="stmt"/>
            <line num="77" count="303" type="stmt"/>
            <line num="78" count="303" type="stmt"/>
            <line num="79" count="303" type="stmt"/>
            <line complexity="3" visibility="protected" signature="invokeCustomDeserializer(JsonElement,Pair&lt;JsonDeserializer&lt;?&gt;, ObjectTypePair&gt;) : Object" num="82" count="868" type="method"/>
            <line num="84" count="868" type="stmt"/>
            <line falsecount="868" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="868" type="stmt"/>
            <line num="88" count="868" type="stmt"/>
            <line complexity="1" visibility="package" signature="visitChildAsObject(Type,JsonElement) : Object" num="91" count="68" type="method"/>
            <line num="92" count="68" type="stmt"/>
            <line num="95" count="68" type="stmt"/>
            <line complexity="1" visibility="package" signature="visitChildAsArray(Type,JsonArray) : Object" num="98" count="23" type="method"/>
            <line num="99" count="23" type="stmt"/>
            <line num="102" count="23" type="stmt"/>
            <line complexity="1" visibility="private" signature="visitChild(Type,JsonDeserializationVisitor&lt;?&gt;) : Object" num="105" count="91" type="method"/>
            <line num="106" count="91" type="stmt"/>
            <line num="107" count="91" type="stmt"/>
            <line num="110" count="88" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/JsonDeserializer.java" name="JsonDeserializer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="88" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JsonDeserializer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/JsonDeserializerExceptionWrapper.java" name="JsonDeserializerExceptionWrapper.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="5" loc="71" coveredmethods="2" methods="3" elements="11" classes="1" ncloc="29" statements="8" conditionals="0" coveredstatements="7"/>
            <class name="JsonDeserializerExceptionWrapper">
               <metrics coveredelements="9" coveredconditionals="0" complexity="5" coveredmethods="2" methods="3" elements="11" statements="8" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="package" signature="JsonDeserializerExceptionWrapper(JsonDeserializer&lt;T&gt;)" num="42" count="80" type="method"/>
            <line num="43" count="80" type="stmt"/>
            <line num="44" count="80" type="stmt"/>
            <line complexity="3" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : T" num="47" count="858" type="method"/>
            <line num="49" count="865" type="stmt"/>
            <line num="50" count="868" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="56" count="12" type="stmt"/>
            <line num="63" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/JsonElement.java" name="JsonElement.java">
            <metrics coveredelements="27" coveredconditionals="3" complexity="28" loc="338" coveredmethods="9" methods="23" elements="66" classes="1" ncloc="96" statements="35" conditionals="8" coveredstatements="15"/>
            <class name="JsonElement">
               <metrics coveredelements="27" coveredconditionals="3" complexity="28" coveredmethods="9" methods="23" elements="66" statements="35" conditionals="8" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="isJsonArray() : boolean" num="38" count="1514" type="method"/>
            <line num="39" count="1524" type="stmt"/>
            <line complexity="1" visibility="public" signature="isJsonObject() : boolean" num="47" count="4284" type="method"/>
            <line num="48" count="4308" type="stmt"/>
            <line complexity="1" visibility="public" signature="isJsonPrimitive() : boolean" num="56" count="3026" type="method"/>
            <line num="57" count="3028" type="stmt"/>
            <line complexity="1" visibility="public" signature="isJsonNull() : boolean" num="66" count="4780" type="method"/>
            <line num="67" count="4788" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsJsonObject() : JsonObject" num="79" count="2020" type="method"/>
            <line num="80" count="2036" type="stmt"/>
            <line falsecount="0" truecount="2064" num="80" type="cond"/>
            <line num="81" count="2058" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsJsonArray() : JsonArray" num="95" count="485" type="method"/>
            <line num="96" count="485" type="stmt"/>
            <line falsecount="0" truecount="485" num="96" type="cond"/>
            <line num="97" count="485" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsJsonPrimitive() : JsonPrimitive" num="111" count="1293" type="method"/>
            <line num="112" count="1293" type="stmt"/>
            <line falsecount="0" truecount="1296" num="112" type="cond"/>
            <line num="113" count="1295" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsJsonNull() : JsonNull" num="128" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="129" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsBoolean() : boolean" num="144" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getAsBooleanWrapper() : Boolean" num="157" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsNumber() : Number" num="170" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsString() : String" num="183" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsDouble() : double" num="196" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsFloat() : float" num="209" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsLong() : long" num="222" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsInt() : int" num="235" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsByte() : byte" num="249" count="0" type="method"/>
            <line num="250" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsCharacter() : char" num="263" count="0" type="method"/>
            <line num="264" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsBigDecimal() : BigDecimal" num="277" count="0" type="method"/>
            <line num="278" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsBigInteger() : BigInteger" num="291" count="1" type="method"/>
            <line num="292" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsShort() : short" num="304" count="0" type="method"/>
            <line num="305" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getAsObject() : Object" num="317" count="0" type="method"/>
            <line num="318" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="326" count="19" type="method"/>
            <line num="328" count="19" type="stmt"/>
            <line num="329" count="19" type="stmt"/>
            <line num="330" count="19" type="stmt"/>
            <line num="331" count="19" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/JsonElementVisitor.java" name="JsonElementVisitor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="47" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="21" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JsonElementVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/JsonFieldNameValidator.java" name="JsonFieldNameValidator.java">
            <metrics coveredelements="9" coveredconditionals="2" complexity="2" loc="56" coveredmethods="1" methods="1" elements="9" classes="1" ncloc="17" statements="6" conditionals="2" coveredstatements="6"/>
            <class name="JsonFieldNameValidator">
               <metrics coveredelements="9" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="9" statements="6" conditionals="2" coveredstatements="6"/>
            </class>
            <line complexity="2" visibility="public" signature="validate(String) : String" num="46" count="19" type="method"/>
            <line num="47" count="19" type="stmt"/>
            <line num="48" count="19" type="stmt"/>
            <line num="50" count="19" type="stmt"/>
            <line num="51" count="19" type="stmt"/>
            <line falsecount="13" truecount="6" num="51" type="cond"/>
            <line num="52" count="6" type="stmt"/>
            <line num="54" count="13" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/JsonIOException.java" name="JsonIOException.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="46" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="13" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="JsonIOException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="JsonIOException(String)" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="JsonIOException(String,Throwable)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="JsonIOException(Throwable)" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/JsonNull.java" name="JsonNull.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="5" loc="72" coveredmethods="2" methods="5" elements="9" classes="1" ncloc="22" statements="4" conditionals="0" coveredstatements="1"/>
            <class name="JsonNull">
               <metrics coveredelements="3" coveredconditionals="0" complexity="5" coveredmethods="2" methods="5" elements="9" statements="4" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="JsonNull()" num="34" count="2" type="method"/>
            <line complexity="1" visibility="protected" signature="toString(Appendable,Escaper) : void" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="createJsonNull() : JsonNull" num="69" count="58" type="method"/>
            <line num="70" count="58" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/JsonObject.java" name="JsonObject.java">
            <metrics coveredelements="49" coveredconditionals="9" complexity="20" loc="208" coveredmethods="12" methods="15" elements="56" classes="1" ncloc="75" statements="31" conditionals="10" coveredstatements="28"/>
            <class name="JsonObject">
               <metrics coveredelements="49" coveredconditionals="9" complexity="20" coveredmethods="12" methods="15" elements="56" statements="31" conditionals="10" coveredstatements="28"/>
            </class>
            <line complexity="1" visibility="public" signature="JsonObject()" num="42" count="641" type="method"/>
            <line num="43" count="645" type="stmt"/>
            <line complexity="2" visibility="public" signature="add(String,JsonElement) : void" num="54" count="1520" type="method"/>
            <line num="55" count="1530" type="stmt"/>
            <line num="56" count="1535" type="stmt"/>
            <line falsecount="1529" truecount="1" num="56" type="cond"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1528" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove(String) : JsonElement" num="69" count="2" type="method"/>
            <line num="70" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProperty(String,String) : void" num="80" count="17" type="method"/>
            <line num="81" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProperty(String,Number) : void" num="91" count="21" type="method"/>
            <line num="92" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProperty(String,Boolean) : void" num="102" count="1" type="method"/>
            <line num="103" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProperty(String,Character) : void" num="113" count="1" type="method"/>
            <line num="114" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="createJsonElement(Object) : JsonElement" num="123" count="40" type="method"/>
            <line num="124" count="40" type="stmt"/>
            <line falsecount="38" truecount="2" num="124" type="cond"/>
            <line complexity="1" visibility="public" signature="entrySet() : Set&lt;Map.Entry&lt;String, JsonElement&gt;&gt;" num="133" count="357" type="method"/>
            <line num="134" count="359" type="stmt"/>
            <line complexity="1" visibility="public" signature="has(String) : boolean" num="143" count="6" type="method"/>
            <line num="144" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="get(String) : JsonElement" num="153" count="677" type="method"/>
            <line num="154" count="690" type="stmt"/>
            <line falsecount="59" truecount="652" num="154" type="cond"/>
            <line num="155" count="649" type="stmt"/>
            <line num="156" count="644" type="stmt"/>
            <line falsecount="640" truecount="0" num="156" type="cond"/>
            <line num="158" count="59" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsJsonPrimitive(String) : JsonPrimitive" num="167" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsJsonArray(String) : JsonArray" num="177" count="0" type="method"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsJsonObject(String) : JsonObject" num="187" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="toString(Appendable,Escaper) : void" num="191" count="5" type="method"/>
            <line num="193" count="5" type="stmt"/>
            <line num="194" count="5" type="stmt"/>
            <line num="195" count="5" type="stmt"/>
            <line num="196" count="10" type="stmt"/>
            <line falsecount="6" truecount="4" num="196" type="cond"/>
            <line num="197" count="4" type="stmt"/>
            <line num="199" count="6" type="stmt"/>
            <line num="201" count="10" type="stmt"/>
            <line num="202" count="10" type="stmt"/>
            <line num="203" count="10" type="stmt"/>
            <line num="204" count="10" type="stmt"/>
            <line num="206" count="5" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java" name="JsonObjectDeserializationVisitor.java">
            <metrics coveredelements="70" coveredconditionals="18" complexity="24" loc="135" coveredmethods="8" methods="9" elements="83" classes="1" ncloc="99" statements="52" conditionals="22" coveredstatements="44"/>
            <class name="JsonObjectDeserializationVisitor">
               <metrics coveredelements="70" coveredconditionals="18" complexity="24" coveredmethods="8" methods="9" elements="83" statements="52" conditionals="22" coveredstatements="44"/>
            </class>
            <line complexity="1" visibility="package" signature="JsonObjectDeserializationVisitor(JsonElement,Type,ObjectNavigatorFactory,ObjectConstructor,ParameterizedTypeHandlerMap&lt;JsonDeserializer&lt;?&gt;&gt;,JsonDeserializationContext)" num="30" count="512" type="method"/>
            <line num="34" count="505" type="stmt"/>
            <line complexity="1" visibility="protected" signature="constructTarget() : T" num="37" count="247" type="method"/>
            <line num="40" count="247" type="stmt"/>
            <line complexity="1" visibility="public" signature="startVisitingObject(Object) : void" num="43" count="227" type="method"/>
            <line complexity="1" visibility="public" signature="visitArray(Object,Type) : void" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="visitObjectField(FieldAttributes,Type,Object) : void" num="52" count="12" type="method"/>
            <line num="53" count="12" type="stmt"/>
            <line num="54" count="12" type="stmt"/>
            <line falsecount="12" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="12" type="stmt"/>
            <line num="58" count="12" type="stmt"/>
            <line num="59" count="12" type="stmt"/>
            <line num="60" count="12" type="stmt"/>
            <line falsecount="0" truecount="12" num="60" type="cond"/>
            <line num="61" count="12" type="stmt"/>
            <line num="62" count="11" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="visitArrayField(FieldAttributes,Type,Object) : void" num="71" count="11" type="method"/>
            <line num="72" count="11" type="stmt"/>
            <line num="73" count="11" type="stmt"/>
            <line falsecount="11" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="11" type="stmt"/>
            <line num="77" count="11" type="stmt"/>
            <line num="78" count="11" type="stmt"/>
            <line num="79" count="11" type="stmt"/>
            <line falsecount="0" truecount="11" num="79" type="cond"/>
            <line num="80" count="11" type="stmt"/>
            <line num="81" count="11" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getFieldName(FieldAttributes) : String" num="90" count="631" type="method"/>
            <line num="91" count="638" type="stmt"/>
            <line num="92" count="666" type="stmt"/>
            <line complexity="9" visibility="public" signature="visitFieldUsingCustomHandler(FieldAttributes,Type,Object) : boolean" num="95" count="606" type="method"/>
            <line num="96" count="614" type="stmt"/>
            <line num="97" count="640" type="stmt"/>
            <line num="98" count="626" type="stmt"/>
            <line falsecount="634" truecount="2" num="98" type="cond"/>
            <line num="99" count="2" type="stmt"/>
            <line num="101" count="634" type="stmt"/>
            <line num="102" count="640" type="stmt"/>
            <line num="103" count="644" type="stmt"/>
            <line falsecount="587" truecount="57" num="103" type="cond"/>
            <line num="104" count="57" type="stmt"/>
            <line num="105" count="587" type="stmt"/>
            <line falsecount="570" truecount="8" num="105" type="cond"/>
            <line num="106" count="8" type="stmt"/>
            <line falsecount="3" truecount="5" num="106" type="cond"/>
            <line num="107" count="5" type="stmt"/>
            <line num="109" count="8" type="stmt"/>
            <line num="111" count="576" type="stmt"/>
            <line num="112" count="573" type="stmt"/>
            <line num="113" count="579" type="stmt"/>
            <line falsecount="556" truecount="23" num="113" type="cond"/>
            <line num="114" count="23" type="stmt"/>
            <line num="116" count="556" type="stmt"/>
            <line num="117" count="548" type="stmt"/>
            <line falsecount="1" truecount="551" num="117" type="cond"/>
            <line num="118" count="550" type="stmt"/>
            <line num="120" count="540" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitPrimitive(Object) : void" num="126" count="9" type="method"/>
            <line num="128" count="9" type="stmt"/>
            <line falsecount="8" truecount="1" num="128" type="cond"/>
            <line num="129" count="1" type="stmt"/>
            <line num="132" count="8" type="stmt"/>
            <line num="133" count="8" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/JsonParseException.java" name="JsonParseException.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="3" loc="64" coveredmethods="3" methods="3" elements="6" classes="1" ncloc="13" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="JsonParseException">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="JsonParseException(String)" num="41" count="6" type="method"/>
            <line num="42" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="JsonParseException(String,Throwable)" num="51" count="12" type="method"/>
            <line num="52" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="JsonParseException(Throwable)" num="61" count="2" type="method"/>
            <line num="62" count="2" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/JsonParser.java" name="JsonParser.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="7" loc="80" coveredmethods="3" methods="3" elements="17" classes="1" ncloc="31" statements="12" conditionals="2" coveredstatements="7"/>
            <class name="JsonParser">
               <metrics coveredelements="10" coveredconditionals="0" complexity="7" coveredmethods="3" methods="3" elements="17" statements="12" conditionals="2" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="parse(String) : JsonElement" num="40" count="5" type="method"/>
            <line num="41" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="parse(Reader) : JsonElement" num="52" count="7" type="method"/>
            <line num="53" count="7" type="stmt"/>
            <line complexity="5" visibility="public" signature="parse(JsonReader) : JsonElement" num="62" count="7" type="method"/>
            <line num="63" count="7" type="stmt"/>
            <line num="64" count="7" type="stmt"/>
            <line num="65" count="7" type="stmt"/>
            <line num="66" count="7" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="7" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/JsonPrimitive.java" name="JsonPrimitive.java">
            <metrics coveredelements="153" coveredconditionals="47" complexity="66" loc="387" coveredmethods="30" methods="30" elements="176" classes="1" ncloc="203" statements="86" conditionals="60" coveredstatements="76"/>
            <class name="JsonPrimitive">
               <metrics coveredelements="153" coveredconditionals="47" complexity="66" coveredmethods="30" methods="30" elements="176" statements="86" conditionals="60" coveredstatements="76"/>
            </class>
            <line complexity="1" visibility="public" signature="JsonPrimitive(Boolean)" num="46" count="120" type="method"/>
            <line num="47" count="120" type="stmt"/>
            <line complexity="1" visibility="public" signature="JsonPrimitive(Number)" num="55" count="955" type="method"/>
            <line num="56" count="959" type="stmt"/>
            <line complexity="1" visibility="public" signature="JsonPrimitive(String)" num="64" count="855" type="method"/>
            <line num="65" count="867" type="stmt"/>
            <line complexity="1" visibility="public" signature="JsonPrimitive(Character)" num="74" count="5" type="method"/>
            <line num="75" count="5" type="stmt"/>
            <line complexity="1" visibility="package" signature="JsonPrimitive(Object)" num="84" count="38" type="method"/>
            <line num="85" count="38" type="stmt"/>
            <line complexity="2" visibility="package" signature="setValue(Object) : void" num="88" count="1983" type="method"/>
            <line num="89" count="1991" type="stmt"/>
            <line falsecount="1984" truecount="6" num="89" type="cond"/>
            <line num="92" count="6" type="stmt"/>
            <line num="93" count="6" type="stmt"/>
            <line num="95" count="1987" type="stmt"/>
            <line num="97" count="1988" type="stmt"/>
            <line complexity="1" visibility="public" signature="isBoolean() : boolean" num="106" count="1465" type="method"/>
            <line num="107" count="1476" type="stmt"/>
            <line complexity="1" visibility="package" signature="getAsBooleanWrapper() : Boolean" num="116" count="114" type="method"/>
            <line num="118" count="114" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsBoolean() : boolean" num="127" count="114" type="method"/>
            <line num="129" count="114" type="stmt"/>
            <line falsecount="1" truecount="113" num="129" type="cond"/>
            <line complexity="1" visibility="public" signature="isNumber() : boolean" num="137" count="2234" type="method"/>
            <line num="138" count="2245" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsNumber() : Number" num="147" count="939" type="method"/>
            <line num="149" count="942" type="stmt"/>
            <line falsecount="939" truecount="0" num="149" type="cond"/>
            <line complexity="5" visibility="package" signature="stringToNumber(String) : Number" num="152" count="417" type="method"/>
            <line num="153" count="425" type="stmt"/>
            <line num="154" count="427" type="stmt"/>
            <line num="155" count="377" type="stmt"/>
            <line falsecount="2" truecount="380" num="155" type="cond"/>
            <line num="156" count="380" type="stmt"/>
            <line num="158" count="2" type="stmt"/>
            <line num="162" count="45" type="stmt"/>
            <line num="163" count="45" type="stmt"/>
            <line num="165" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="isString() : boolean" num="174" count="40" type="method"/>
            <line num="175" count="40" type="stmt"/>
            <line complexity="3" visibility="public" signature="getAsString() : String" num="184" count="839" type="method"/>
            <line num="186" count="855" type="stmt"/>
            <line falsecount="856" truecount="2" num="186" type="cond"/>
            <line num="187" count="2" type="stmt"/>
            <line num="188" count="857" type="stmt"/>
            <line falsecount="857" truecount="1" num="188" type="cond"/>
            <line num="189" count="1" type="stmt"/>
            <line num="191" count="845" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAsDouble() : double" num="201" count="20" type="method"/>
            <line num="203" count="20" type="stmt"/>
            <line falsecount="3" truecount="17" num="203" type="cond"/>
            <line complexity="2" visibility="public" signature="getAsBigDecimal() : BigDecimal" num="212" count="13" type="method"/>
            <line num="214" count="13" type="stmt"/>
            <line falsecount="6" truecount="7" num="214" type="cond"/>
            <line complexity="2" visibility="public" signature="getAsBigInteger() : BigInteger" num="223" count="6" type="method"/>
            <line num="225" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="225" type="cond"/>
            <line complexity="2" visibility="public" signature="getAsFloat() : float" num="234" count="12" type="method"/>
            <line num="236" count="12" type="stmt"/>
            <line falsecount="1" truecount="11" num="236" type="cond"/>
            <line complexity="2" visibility="public" signature="getAsLong() : long" num="245" count="66" type="method"/>
            <line num="247" count="66" type="stmt"/>
            <line falsecount="4" truecount="62" num="247" type="cond"/>
            <line complexity="2" visibility="public" signature="getAsShort() : short" num="256" count="1" type="method"/>
            <line num="258" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="258" type="cond"/>
            <line complexity="2" visibility="public" signature="getAsInt() : int" num="267" count="269" type="method"/>
            <line num="269" count="269" type="stmt"/>
            <line falsecount="3" truecount="274" num="269" type="cond"/>
            <line complexity="2" visibility="public" signature="getAsByte() : byte" num="272" count="1" type="method"/>
            <line num="274" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="274" type="cond"/>
            <line complexity="1" visibility="public" signature="getAsCharacter() : char" num="277" count="7" type="method"/>
            <line num="279" count="7" type="stmt"/>
            <line complexity="4" visibility="package" signature="getAsObject() : Object" num="287" count="215" type="method"/>
            <line num="289" count="215" type="stmt"/>
            <line falsecount="215" truecount="0" num="289" type="cond"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="291" type="cond"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="293" type="cond"/>
            <line num="294" count="0" type="stmt"/>
            <line num="298" count="215" type="stmt"/>
            <line complexity="2" visibility="protected" signature="toString(Appendable,Escaper) : void" num="301" count="36" type="method"/>
            <line num="303" count="36" type="stmt"/>
            <line falsecount="26" truecount="10" num="303" type="cond"/>
            <line num="304" count="10" type="stmt"/>
            <line num="305" count="10" type="stmt"/>
            <line num="306" count="10" type="stmt"/>
            <line num="308" count="26" type="stmt"/>
            <line complexity="3" visibility="private" signature="isPrimitiveOrString(Object) : boolean" num="312" count="988" type="method"/>
            <line num="313" count="999" type="stmt"/>
            <line falsecount="121" truecount="886" num="313" type="cond"/>
            <line num="314" count="877" type="stmt"/>
            <line num="317" count="121" type="stmt"/>
            <line num="318" count="121" type="stmt"/>
            <line num="319" count="1815" type="stmt"/>
            <line falsecount="1694" truecount="121" num="319" type="cond"/>
            <line num="320" count="121" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="hashCode() : int" num="326" count="26" type="method"/>
            <line num="328" count="26" type="stmt"/>
            <line falsecount="26" truecount="0" num="328" type="cond"/>
            <line num="329" count="0" type="stmt"/>
            <line num="332" count="26" type="stmt"/>
            <line falsecount="6" truecount="20" num="332" type="cond"/>
            <line num="333" count="20" type="stmt"/>
            <line num="334" count="20" type="stmt"/>
            <line num="336" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="336" type="cond"/>
            <line num="337" count="6" type="stmt"/>
            <line num="338" count="6" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="equals(Object) : boolean" num="343" count="35" type="method"/>
            <line num="345" count="35" type="stmt"/>
            <line falsecount="33" truecount="2" num="345" type="cond"/>
            <line num="346" count="2" type="stmt"/>
            <line num="348" count="33" type="stmt"/>
            <line falsecount="33" truecount="0" num="348" type="cond"/>
            <line num="349" count="0" type="stmt"/>
            <line num="351" count="33" type="stmt"/>
            <line num="352" count="33" type="stmt"/>
            <line falsecount="33" truecount="0" num="352" type="cond"/>
            <line num="353" count="0" type="stmt"/>
            <line num="355" count="33" type="stmt"/>
            <line falsecount="17" truecount="16" num="355" type="cond"/>
            <line num="356" count="16" type="stmt"/>
            <line num="358" count="17" type="stmt"/>
            <line falsecount="14" truecount="3" num="358" type="cond"/>
            <line num="359" count="3" type="stmt"/>
            <line num="361" count="14" type="stmt"/>
            <line complexity="2" visibility="private" signature="isIntegral(JsonPrimitive) : boolean" num="368" count="83" type="method"/>
            <line num="369" count="83" type="stmt"/>
            <line falsecount="14" truecount="69" num="369" type="cond"/>
            <line num="370" count="69" type="stmt"/>
            <line num="371" count="69" type="stmt"/>
            <line num="374" count="14" type="stmt"/>
            <line complexity="2" visibility="private" signature="isFloatingPoint(JsonPrimitive) : boolean" num="380" count="26" type="method"/>
            <line num="381" count="26" type="stmt"/>
            <line falsecount="6" truecount="20" num="381" type="cond"/>
            <line num="382" count="20" type="stmt"/>
            <line num="383" count="20" type="stmt"/>
            <line num="385" count="6" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/JsonSerializationContext.java" name="JsonSerializationContext.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="49" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JsonSerializationContext">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/JsonSerializationContextDefault.java" name="JsonSerializationContextDefault.java">
            <metrics coveredelements="18" coveredconditionals="2" complexity="5" loc="59" coveredmethods="4" methods="4" elements="18" classes="1" ncloc="31" statements="12" conditionals="2" coveredstatements="12"/>
            <class name="JsonSerializationContextDefault">
               <metrics coveredelements="18" coveredconditionals="2" complexity="5" coveredmethods="4" methods="4" elements="18" statements="12" conditionals="2" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="package" signature="JsonSerializationContextDefault(ObjectNavigatorFactory,boolean,ParameterizedTypeHandlerMap&lt;JsonSerializer&lt;?&gt;&gt;)" num="33" count="413" type="method"/>
            <line num="35" count="413" type="stmt"/>
            <line num="36" count="417" type="stmt"/>
            <line num="37" count="416" type="stmt"/>
            <line num="38" count="417" type="stmt"/>
            <line complexity="2" visibility="public" signature="serialize(Object) : JsonElement" num="41" count="4" type="method"/>
            <line num="42" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="42" type="cond"/>
            <line num="43" count="1" type="stmt"/>
            <line num="45" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Object,Type) : JsonElement" num="48" count="219" type="method"/>
            <line num="49" count="219" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Object,Type,boolean) : JsonElement" num="52" count="636" type="method"/>
            <line num="53" count="636" type="stmt"/>
            <line num="54" count="639" type="stmt"/>
            <line num="56" count="638" type="stmt"/>
            <line num="57" count="616" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/JsonSerializationVisitor.java" name="JsonSerializationVisitor.java">
            <metrics coveredelements="122" coveredconditionals="23" complexity="44" loc="236" coveredmethods="18" methods="20" elements="150" classes="1" ncloc="182" statements="94" conditionals="36" coveredstatements="81"/>
            <class name="JsonSerializationVisitor">
               <metrics coveredelements="122" coveredconditionals="23" complexity="44" coveredmethods="18" methods="20" elements="150" statements="94" conditionals="36" coveredstatements="81"/>
            </class>
            <line complexity="1" visibility="package" signature="JsonSerializationVisitor(ObjectNavigatorFactory,boolean,ParameterizedTypeHandlerMap&lt;JsonSerializer&lt;?&gt;&gt;,JsonSerializationContext,MemoryRefStack)" num="37" count="815" type="method"/>
            <line num="40" count="815" type="stmt"/>
            <line num="41" count="815" type="stmt"/>
            <line num="42" count="815" type="stmt"/>
            <line num="43" count="816" type="stmt"/>
            <line num="44" count="815" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTarget() : Object" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="start(ObjectTypePair) : void" num="51" count="1543" type="method"/>
            <line num="52" count="1545" type="stmt"/>
            <line falsecount="1545" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="1543" type="stmt"/>
            <line falsecount="1541" truecount="4" num="55" type="cond"/>
            <line num="56" count="4" type="stmt"/>
            <line num="58" count="1542" type="stmt"/>
            <line complexity="2" visibility="public" signature="end(ObjectTypePair) : void" num="61" count="1523" type="method"/>
            <line num="62" count="1528" type="stmt"/>
            <line falsecount="0" truecount="1536" num="62" type="cond"/>
            <line num="63" count="1537" type="stmt"/>
            <line complexity="1" visibility="public" signature="startVisitingObject(Object) : void" num="67" count="307" type="method"/>
            <line num="68" count="309" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitArray(Object,Type) : void" num="71" count="74" type="method"/>
            <line num="72" count="74" type="stmt"/>
            <line num="73" count="74" type="stmt"/>
            <line num="74" count="74" type="stmt"/>
            <line num="75" count="74" type="stmt"/>
            <line num="76" count="74" type="stmt"/>
            <line falsecount="73" truecount="144" num="76" type="cond"/>
            <line num="77" count="144" type="stmt"/>
            <line num="78" count="144" type="stmt"/>
            <line num="82" count="144" type="stmt"/>
            <line complexity="4" visibility="public" signature="visitArrayField(FieldAttributes,Type,Object) : void" num="86" count="20" type="method"/>
            <line num="87" count="20" type="stmt"/>
            <line num="88" count="20" type="stmt"/>
            <line falsecount="20" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="93" count="20" type="stmt"/>
            <line num="94" count="20" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="visitObjectField(FieldAttributes,Type,Object) : void" num="101" count="17" type="method"/>
            <line num="102" count="17" type="stmt"/>
            <line num="103" count="17" type="stmt"/>
            <line falsecount="17" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="108" count="17" type="stmt"/>
            <line num="112" count="17" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitPrimitive(Object) : void" num="119" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="addAsChildOfObject(FieldAttributes,ObjectTypePair) : void" num="124" count="37" type="method"/>
            <line num="125" count="37" type="stmt"/>
            <line num="126" count="35" type="stmt"/>
            <line complexity="1" visibility="private" signature="addChildAsElement(FieldAttributes,JsonElement) : void" num="129" count="764" type="method"/>
            <line num="130" count="769" type="stmt"/>
            <line num="131" count="775" type="stmt"/>
            <line complexity="2" visibility="private" signature="addAsArrayElement(ObjectTypePair) : void" num="134" count="144" type="method"/>
            <line num="135" count="144" type="stmt"/>
            <line falsecount="139" truecount="5" num="135" type="cond"/>
            <line num="136" count="5" type="stmt"/>
            <line num="138" count="139" type="stmt"/>
            <line num="139" count="138" type="stmt"/>
            <line complexity="1" visibility="private" signature="getJsonElementForChild(ObjectTypePair) : JsonElement" num="143" count="176" type="method"/>
            <line num="144" count="176" type="stmt"/>
            <line num="145" count="176" type="stmt"/>
            <line num="147" count="176" type="stmt"/>
            <line num="148" count="173" type="stmt"/>
            <line complexity="5" visibility="public" signature="visitUsingCustomHandler(ObjectTypePair) : boolean" num="151" count="810" type="method"/>
            <line num="152" count="809" type="stmt"/>
            <line num="153" count="811" type="stmt"/>
            <line num="154" count="812" type="stmt"/>
            <line falsecount="812" truecount="0" num="154" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="160" count="811" type="stmt"/>
            <line num="161" count="796" type="stmt"/>
            <line falsecount="387" truecount="409" num="161" type="cond"/>
            <line num="162" count="409" type="stmt"/>
            <line num="163" count="409" type="stmt"/>
            <line num="165" count="387" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line complexity="3" visibility="private" signature="findAndInvokeCustomSerializer(ObjectTypePair) : JsonElement" num="174" count="1576" type="method"/>
            <line num="176" count="1579" type="stmt"/>
            <line num="177" count="1583" type="stmt"/>
            <line falsecount="1159" truecount="424" num="177" type="cond"/>
            <line num="178" count="424" type="stmt"/>
            <line num="180" count="1159" type="stmt"/>
            <line num="181" count="1159" type="stmt"/>
            <line num="182" count="1158" type="stmt"/>
            <line num="183" count="1157" type="stmt"/>
            <line num="184" count="1156" type="stmt"/>
            <line num="186" count="1133" type="stmt"/>
            <line falsecount="1137" truecount="1" num="186" type="cond"/>
            <line num="188" count="1155" type="stmt"/>
            <line complexity="6" visibility="public" signature="visitFieldUsingCustomHandler(FieldAttributes,Type,Object) : boolean" num="192" count="812" type="method"/>
            <line num="193" count="815" type="stmt"/>
            <line num="194" count="823" type="stmt"/>
            <line num="195" count="823" type="stmt"/>
            <line num="196" count="825" type="stmt"/>
            <line falsecount="761" truecount="62" num="196" type="cond"/>
            <line num="197" count="62" type="stmt"/>
            <line falsecount="47" truecount="15" num="197" type="cond"/>
            <line num="198" count="15" type="stmt"/>
            <line num="200" count="62" type="stmt"/>
            <line num="202" count="765" type="stmt"/>
            <line num="203" count="766" type="stmt"/>
            <line num="204" count="766" type="stmt"/>
            <line falsecount="37" truecount="726" num="204" type="cond"/>
            <line num="205" count="729" type="stmt"/>
            <line num="206" count="724" type="stmt"/>
            <line num="208" count="37" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="assignToRoot(JsonElement) : void" num="216" count="790" type="method"/>
            <line num="217" count="791" type="stmt"/>
            <line num="218" count="792" type="stmt"/>
            <line complexity="1" visibility="private" signature="isFieldNull(FieldAttributes,Object) : boolean" num="221" count="37" type="method"/>
            <line num="222" count="37" type="stmt"/>
            <line complexity="2" visibility="private" signature="getFieldValue(FieldAttributes,Object) : Object" num="225" count="74" type="method"/>
            <line num="226" count="74" type="stmt"/>
            <line num="227" count="74" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJsonElement() : JsonElement" num="233" count="787" type="method"/>
            <line num="234" count="789" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/JsonSerializer.java" name="JsonSerializer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="86" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JsonSerializer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/JsonStreamParser.java" name="JsonStreamParser.java">
            <metrics coveredelements="17" coveredconditionals="2" complexity="12" loc="122" coveredmethods="4" methods="5" elements="26" classes="1" ncloc="50" statements="17" conditionals="4" coveredstatements="11"/>
            <class name="JsonStreamParser">
               <metrics coveredelements="17" coveredconditionals="2" complexity="12" coveredmethods="4" methods="5" elements="26" statements="17" conditionals="4" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="JsonStreamParser(String)" num="60" count="4" type="method"/>
            <line num="61" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="JsonStreamParser(Reader)" num="68" count="6" type="method"/>
            <line num="69" count="6" type="stmt"/>
            <line num="70" count="6" type="stmt"/>
            <line num="71" count="6" type="stmt"/>
            <line complexity="6" visibility="public" signature="next() : JsonElement" num="81" count="13" type="method"/>
            <line num="82" count="13" type="stmt"/>
            <line falsecount="12" truecount="1" num="82" type="cond"/>
            <line num="83" count="1" type="stmt"/>
            <line num="86" count="12" type="stmt"/>
            <line num="87" count="12" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line complexity="3" visibility="public" signature="hasNext() : boolean" num="102" count="24" type="method"/>
            <line num="103" count="24" type="stmt"/>
            <line num="104" count="24" type="stmt"/>
            <line num="105" count="24" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="119" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/JsonSyntaxException.java" name="JsonSyntaxException.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="3" loc="46" coveredmethods="1" methods="3" elements="6" classes="1" ncloc="13" statements="3" conditionals="0" coveredstatements="1"/>
            <class name="JsonSyntaxException">
               <metrics coveredelements="2" coveredconditionals="0" complexity="3" coveredmethods="1" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="JsonSyntaxException(String)" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="JsonSyntaxException(String,Throwable)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="JsonSyntaxException(Throwable)" num="43" count="2" type="method"/>
            <line num="44" count="2" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/JsonTreeNavigator.java" name="JsonTreeNavigator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="17" loc="111" coveredmethods="0" methods="4" elements="78" classes="1" ncloc="78" statements="50" conditionals="24" coveredstatements="0"/>
            <class name="JsonTreeNavigator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="4" elements="78" statements="50" conditionals="24" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="JsonTreeNavigator(JsonElementVisitor,boolean)" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="navigate(JsonElement) : void" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="37" type="cond"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="39" type="cond"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="visitChild(JsonObject,String,JsonElement,boolean) : boolean" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="visitChild(JsonArray,JsonElement,boolean) : void" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/LongSerializationPolicy.java" name="LongSerializationPolicy.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="4" loc="74" coveredmethods="4" methods="4" elements="8" classes="4" ncloc="25" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="LongSerializationPolicy">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="LongSerializationPolicy.Strategy">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="LongSerializationPolicy.DefaultStrategy">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="LongSerializationPolicy.StringStrategy">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="private" signature="LongSerializationPolicy(Strategy)" num="45" count="2" type="method"/>
            <line num="46" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Long) : JsonElement" num="55" count="87" type="method"/>
            <line num="56" count="87" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Long) : JsonElement" num="64" count="85" type="method"/>
            <line num="65" count="85" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Long) : JsonElement" num="70" count="2" type="method"/>
            <line num="71" count="2" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/LowerCamelCaseSeparatorNamingPolicy.java" name="LowerCamelCaseSeparatorNamingPolicy.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="43" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="6" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="LowerCamelCaseSeparatorNamingPolicy">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="LowerCamelCaseSeparatorNamingPolicy(String)" num="40" count="7" type="method"/>
            <line num="41" count="7" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/LowerCaseNamingPolicy.java" name="LowerCaseNamingPolicy.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="50" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="LowerCaseNamingPolicy">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="protected" signature="translateName(String,Type,Collection&lt;Annotation&gt;) : String" num="45" count="11" type="method"/>
            <line num="48" count="11" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/LruCache.java" name="LruCache.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="7" loc="64" coveredmethods="5" methods="7" elements="15" classes="1" ncloc="30" statements="8" conditionals="0" coveredstatements="6"/>
            <class name="LruCache">
               <metrics coveredelements="11" coveredconditionals="0" complexity="7" coveredmethods="5" methods="7" elements="15" statements="8" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="package" signature="LruCache(int)" num="35" count="4" type="method"/>
            <line num="36" count="4" type="stmt"/>
            <line num="37" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="addElement(K,V) : void" num="40" count="155" type="method"/>
            <line num="41" count="155" type="stmt"/>
            <line complexity="1" visibility="public" signature="clear() : void" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getElement(K) : V" num="48" count="1496" type="method"/>
            <line num="49" count="1509" type="stmt"/>
            <line complexity="1" visibility="public" signature="removeElement(K) : V" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="56" count="154" type="method"/>
            <line num="57" count="154" type="stmt"/>
            <line complexity="1" visibility="protected" signature="removeEldestEntry(Map.Entry&lt;K, V&gt;) : boolean" num="60" count="154" type="method"/>
            <line num="62" count="154" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/MappedObjectConstructor.java" name="MappedObjectConstructor.java">
            <metrics coveredelements="27" coveredconditionals="5" complexity="14" loc="112" coveredmethods="5" methods="7" elements="41" classes="1" ncloc="69" statements="26" conditionals="8" coveredstatements="17"/>
            <class name="MappedObjectConstructor">
               <metrics coveredelements="27" coveredconditionals="5" complexity="14" coveredmethods="5" methods="7" elements="41" statements="26" conditionals="8" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="MappedObjectConstructor(ParameterizedTypeHandlerMap&lt;InstanceCreator&lt;?&gt;&gt;)" num="42" count="506" type="method"/>
            <line num="44" count="506" type="stmt"/>
            <line complexity="2" visibility="public" signature="construct(Type) : T" num="47" count="311" type="method"/>
            <line num="49" count="311" type="stmt"/>
            <line num="50" count="311" type="stmt"/>
            <line falsecount="242" truecount="69" num="50" type="cond"/>
            <line num="51" count="69" type="stmt"/>
            <line num="53" count="242" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructArray(Type,int) : Object" num="56" count="29" type="method"/>
            <line num="57" count="29" type="stmt"/>
            <line complexity="5" visibility="private" signature="constructWithNoArgConstructor(Type) : T" num="60" count="242" type="method"/>
            <line num="61" count="242" type="stmt"/>
            <line num="62" count="242" type="stmt"/>
            <line num="63" count="238" type="stmt"/>
            <line falsecount="241" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="67" count="240" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getNoArgsConstructor(Type) : Constructor&lt;T&gt;" num="80" count="242" type="method"/>
            <line num="82" count="242" type="stmt"/>
            <line num="83" count="242" type="stmt"/>
            <line num="84" count="242" type="stmt"/>
            <line num="85" count="237" type="stmt"/>
            <line num="86" count="242" type="stmt"/>
            <line num="87" count="261" type="stmt"/>
            <line falsecount="20" truecount="239" num="87" type="cond"/>
            <line num="88" count="240" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="register(Type,InstanceCreator&lt;? extends T&gt;) : void" num="101" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/MemoryRefStack.java" name="MemoryRefStack.java">
            <metrics coveredelements="16" coveredconditionals="3" complexity="8" loc="87" coveredmethods="4" methods="5" elements="20" classes="1" ncloc="30" statements="11" conditionals="4" coveredstatements="9"/>
            <class name="MemoryRefStack">
               <metrics coveredelements="16" coveredconditionals="3" complexity="8" coveredmethods="4" methods="5" elements="20" statements="11" conditionals="4" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="push(ObjectTypePair) : ObjectTypePair" num="37" count="1539" type="method"/>
            <line num="38" count="1540" type="stmt"/>
            <line num="40" count="1544" type="stmt"/>
            <line complexity="1" visibility="public" signature="pop() : ObjectTypePair" num="49" count="1532" type="method"/>
            <line num="50" count="1538" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEmpty() : boolean" num="53" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="peek() : ObjectTypePair" num="63" count="2" type="method"/>
            <line num="64" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="contains(ObjectTypePair) : boolean" num="74" count="1544" type="method"/>
            <line num="75" count="1546" type="stmt"/>
            <line falsecount="1545" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="1545" type="stmt"/>
            <line num="80" count="1650" type="stmt"/>
            <line falsecount="1642" truecount="5" num="80" type="cond"/>
            <line num="82" count="5" type="stmt"/>
            <line num="85" count="1542" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java" name="ModifierBasedExclusionStrategy.java">
            <metrics coveredelements="15" coveredconditionals="3" complexity="5" loc="53" coveredmethods="3" methods="3" elements="16" classes="1" ncloc="25" statements="9" conditionals="4" coveredstatements="9"/>
            <class name="ModifierBasedExclusionStrategy">
               <metrics coveredelements="15" coveredconditionals="3" complexity="5" coveredmethods="3" methods="3" elements="16" statements="9" conditionals="4" coveredstatements="9"/>
            </class>
            <line complexity="2" visibility="public" signature="ModifierBasedExclusionStrategy(int)" num="32" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="34" type="cond"/>
            <line num="35" count="2" type="stmt"/>
            <line num="36" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="shouldSkipField(FieldAttributes) : boolean" num="41" count="1689" type="method"/>
            <line num="42" count="1702" type="stmt"/>
            <line num="43" count="3393" type="stmt"/>
            <line falsecount="3197" truecount="200" num="43" type="cond"/>
            <line num="44" count="200" type="stmt"/>
            <line num="47" count="1509" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldSkipClass(Class&lt;?&gt;) : boolean" num="50" count="2869" type="method"/>
            <line num="51" count="2876" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java" name="ModifyFirstLetterNamingPolicy.java">
            <metrics coveredelements="34" coveredconditionals="11" complexity="11" loc="107" coveredmethods="3" methods="3" elements="36" classes="2" ncloc="47" statements="21" conditionals="12" coveredstatements="20"/>
            <class name="ModifyFirstLetterNamingPolicy">
               <metrics coveredelements="34" coveredconditionals="11" complexity="11" coveredmethods="3" methods="3" elements="36" statements="21" conditionals="12" coveredstatements="20"/>
            </class>
            <class name="ModifyFirstLetterNamingPolicy.LetterModifier">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ModifyFirstLetterNamingPolicy(LetterModifier)" num="65" count="17" type="method"/>
            <line num="66" count="17" type="stmt"/>
            <line num="67" count="16" type="stmt"/>
            <line complexity="8" visibility="protected" signature="translateName(String,Type,Collection&lt;Annotation&gt;) : String" num="70" count="23" type="method"/>
            <line num="73" count="23" type="stmt"/>
            <line num="74" count="23" type="stmt"/>
            <line num="75" count="23" type="stmt"/>
            <line num="77" count="23" type="stmt"/>
            <line falsecount="8" truecount="25" num="77" type="cond"/>
            <line num="78" count="25" type="stmt"/>
            <line falsecount="10" truecount="15" num="78" type="cond"/>
            <line num="79" count="15" type="stmt"/>
            <line num="82" count="10" type="stmt"/>
            <line num="83" count="10" type="stmt"/>
            <line num="86" count="23" type="stmt"/>
            <line falsecount="23" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="90" count="23" type="stmt"/>
            <line num="91" count="23" type="stmt"/>
            <line falsecount="9" truecount="14" num="91" type="cond"/>
            <line num="92" count="14" type="stmt"/>
            <line num="93" count="14" type="stmt"/>
            <line num="94" count="9" type="stmt"/>
            <line falsecount="8" truecount="1" num="94" type="cond"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="8" type="stmt"/>
            <line complexity="2" visibility="private" signature="modifyString(char,String,int) : String" num="102" count="15" type="method"/>
            <line num="103" count="15" type="stmt"/>
            <line falsecount="4" truecount="11" num="103" type="cond"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/NullExclusionStrategy.java" name="NullExclusionStrategy.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="37" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="9" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="NullExclusionStrategy">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="shouldSkipField(FieldAttributes) : boolean" num="30" count="1" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldSkipClass(Class&lt;?&gt;) : boolean" num="34" count="1" type="method"/>
            <line num="35" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/ObjectConstructor.java" name="ObjectConstructor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="47" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ObjectConstructor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/ObjectNavigator.java" name="ObjectNavigator.java">
            <metrics coveredelements="65" coveredconditionals="20" complexity="18" loc="169" coveredmethods="4" methods="4" elements="68" classes="2" ncloc="90" statements="42" conditionals="22" coveredstatements="41"/>
            <class name="ObjectNavigator">
               <metrics coveredelements="65" coveredconditionals="20" complexity="18" coveredmethods="4" methods="4" elements="68" statements="42" conditionals="22" coveredstatements="41"/>
            </class>
            <class name="ObjectNavigator.Visitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="ObjectNavigator(ObjectTypePair,ExclusionStrategy)" num="90" count="1399" type="method"/>
            <line num="91" count="1401" type="stmt"/>
            <line num="93" count="1406" type="stmt"/>
            <line num="94" count="1407" type="stmt"/>
            <line complexity="11" visibility="public" signature="accept(Visitor) : void" num="101" count="1401" type="method"/>
            <line num="102" count="1397" type="stmt"/>
            <line num="103" count="1405" type="stmt"/>
            <line falsecount="1391" truecount="4" num="103" type="cond"/>
            <line num="104" count="4" type="stmt"/>
            <line num="106" count="1400" type="stmt"/>
            <line num="107" count="1377" type="stmt"/>
            <line falsecount="712" truecount="665" num="107" type="cond"/>
            <line num="108" count="665" type="stmt"/>
            <line num="109" count="665" type="stmt"/>
            <line falsecount="388" truecount="277" num="109" type="cond"/>
            <line num="110" count="656" type="stmt"/>
            <line falsecount="658" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="662" type="stmt"/>
            <line num="114" count="665" type="stmt"/>
            <line num="115" count="658" type="stmt"/>
            <line num="116" count="660" type="stmt"/>
            <line falsecount="559" truecount="103" num="116" type="cond"/>
            <line num="117" count="103" type="stmt"/>
            <line num="118" count="558" type="stmt"/>
            <line falsecount="546" truecount="10" num="118" type="cond"/>
            <line num="122" count="10" type="stmt"/>
            <line num="123" count="8" type="stmt"/>
            <line num="125" count="546" type="stmt"/>
            <line num="126" count="540" type="stmt"/>
            <line num="127" count="547" type="stmt"/>
            <line num="128" count="546" type="stmt"/>
            <line falsecount="534" truecount="567" num="128" type="cond"/>
            <line num="130" count="569" type="stmt"/>
            <line falsecount="0" truecount="570" num="130" type="cond"/>
            <line num="131" count="565" type="stmt"/>
            <line num="136" count="657" type="stmt"/>
            <line complexity="1" visibility="private" signature="isPrimitiveOrString(Object) : boolean" num="141" count="14" type="method"/>
            <line num="142" count="14" type="stmt"/>
            <line num="143" count="14" type="stmt"/>
            <line complexity="5" visibility="private" signature="navigateClassFields(Object,Class&lt;?&gt;,Visitor) : void" num="147" count="556" type="method"/>
            <line num="148" count="561" type="stmt"/>
            <line num="149" count="567" type="stmt"/>
            <line num="150" count="569" type="stmt"/>
            <line num="151" count="1710" type="stmt"/>
            <line num="152" count="1718" type="stmt"/>
            <line falsecount="1463" truecount="242" num="152" type="cond"/>
            <line num="154" count="242" type="stmt"/>
            <line num="156" count="1472" type="stmt"/>
            <line num="157" count="1476" type="stmt"/>
            <line num="158" count="1476" type="stmt"/>
            <line num="160" count="1457" type="stmt"/>
            <line falsecount="1405" truecount="60" num="160" type="cond"/>
            <line num="161" count="60" type="stmt"/>
            <line falsecount="29" truecount="31" num="161" type="cond"/>
            <line num="162" count="31" type="stmt"/>
            <line num="164" count="29" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/ObjectNavigatorFactory.java" name="ObjectNavigatorFactory.java">
            <metrics coveredelements="9" coveredconditionals="1" complexity="4" loc="61" coveredmethods="3" methods="3" elements="10" classes="1" ncloc="16" statements="5" conditionals="2" coveredstatements="5"/>
            <class name="ObjectNavigatorFactory">
               <metrics coveredelements="9" coveredconditionals="1" complexity="4" coveredmethods="3" methods="3" elements="10" statements="5" conditionals="2" coveredstatements="5"/>
            </class>
            <line complexity="2" visibility="public" signature="ObjectNavigatorFactory(ExclusionStrategy,FieldNamingStrategy2)" num="39" count="775" type="method"/>
            <line num="40" count="779" type="stmt"/>
            <line num="41" count="783" type="stmt"/>
            <line falsecount="785" truecount="0" num="41" type="cond"/>
            <line num="42" count="786" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(ObjectTypePair) : ObjectNavigator" num="54" count="1392" type="method"/>
            <line num="55" count="1397" type="stmt"/>
            <line complexity="1" visibility="package" signature="getFieldNamingPolicy() : FieldNamingStrategy2" num="58" count="1426" type="method"/>
            <line num="59" count="1439" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/ObjectTypePair.java" name="ObjectTypePair.java">
            <metrics coveredelements="54" coveredconditionals="16" complexity="31" loc="136" coveredmethods="9" methods="11" elements="95" classes="1" ncloc="95" statements="48" conditionals="36" coveredstatements="29"/>
            <class name="ObjectTypePair">
               <metrics coveredelements="54" coveredconditionals="16" complexity="31" coveredmethods="9" methods="11" elements="95" statements="48" conditionals="36" coveredstatements="29"/>
            </class>
            <line complexity="1" visibility="package" signature="ObjectTypePair(Object,Type,boolean)" num="30" count="2779" type="method"/>
            <line num="31" count="2790" type="stmt"/>
            <line num="32" count="2788" type="stmt"/>
            <line num="33" count="2785" type="stmt"/>
            <line complexity="1" visibility="package" signature="getObject() : Object" num="36" count="6061" type="method"/>
            <line num="37" count="6070" type="stmt"/>
            <line complexity="1" visibility="package" signature="setObject(Object) : void" num="40" count="654" type="method"/>
            <line num="41" count="663" type="stmt"/>
            <line complexity="1" visibility="package" signature="getType() : Type" num="44" count="1156" type="method"/>
            <line num="45" count="1157" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="48" count="4" type="method"/>
            <line num="50" count="4" type="stmt"/>
            <line complexity="5" visibility="package" signature="getMatchingHandler(ParameterizedTypeHandlerMap&lt;HANDLER&gt;) : Pair&lt;HANDLER, ObjectTypePair&gt;" num="53" count="2724" type="method"/>
            <line num="55" count="2737" type="stmt"/>
            <line num="56" count="2749" type="stmt"/>
            <line falsecount="1801" truecount="946" num="56" type="cond"/>
            <line num="58" count="944" type="stmt"/>
            <line num="59" count="945" type="stmt"/>
            <line num="60" count="946" type="stmt"/>
            <line falsecount="109" truecount="837" num="60" type="cond"/>
            <line num="61" count="837" type="stmt"/>
            <line num="65" count="1900" type="stmt"/>
            <line num="66" count="1915" type="stmt"/>
            <line falsecount="1190" truecount="725" num="66" type="cond"/>
            <line complexity="4" visibility="package" signature="toMoreSpecificType() : ObjectTypePair" num="69" count="1481" type="method"/>
            <line num="70" count="1489" type="stmt"/>
            <line falsecount="1001" truecount="490" num="70" type="cond"/>
            <line num="71" count="489" type="stmt"/>
            <line num="73" count="1003" type="stmt"/>
            <line num="74" count="1003" type="stmt"/>
            <line falsecount="33" truecount="970" num="74" type="cond"/>
            <line num="75" count="970" type="stmt"/>
            <line num="77" count="33" type="stmt"/>
            <line complexity="4" visibility="package" signature="getActualTypeIfMoreSpecific(Type,Class&lt;?&gt;) : Type" num="84" count="1001" type="method"/>
            <line num="85" count="1000" type="stmt"/>
            <line falsecount="63" truecount="939" num="85" type="cond"/>
            <line num="86" count="940" type="stmt"/>
            <line num="87" count="940" type="stmt"/>
            <line falsecount="379" truecount="561" num="87" type="cond"/>
            <line num="88" count="561" type="stmt"/>
            <line num="90" count="939" type="stmt"/>
            <line falsecount="938" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="94" count="1004" type="stmt"/>
            <line complexity="2" visibility="public" signature="hashCode() : int" num="97" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line complexity="10" visibility="public" signature="equals(Object) : boolean" num="104" count="4" type="method"/>
            <line num="106" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="106" type="cond"/>
            <line num="107" count="4" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isPreserveType() : boolean" num="133" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/Pair.java" name="Pair.java">
            <metrics coveredelements="14" coveredconditionals="3" complexity="8" loc="62" coveredmethods="4" methods="5" elements="20" classes="1" ncloc="28" statements="9" conditionals="6" coveredstatements="7"/>
            <class name="Pair">
               <metrics coveredelements="14" coveredconditionals="3" complexity="8" coveredmethods="4" methods="5" elements="20" statements="9" conditionals="6" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="package" signature="Pair(FIRST,SECOND)" num="33" count="3523" type="method"/>
            <line num="34" count="3534" type="stmt"/>
            <line num="35" count="3534" type="stmt"/>
            <line complexity="3" visibility="public" signature="hashCode() : int" num="38" count="1626" type="method"/>
            <line num="40" count="1633" type="stmt"/>
            <line falsecount="0" truecount="1633" num="40" type="cond"/>
            <line falsecount="0" truecount="1638" num="41" type="cond"/>
            <line complexity="2" visibility="public" signature="equals(Object) : boolean" num="44" count="1318" type="method"/>
            <line num="46" count="1333" type="stmt"/>
            <line falsecount="1346" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line num="50" count="1348" type="stmt"/>
            <line num="51" count="1345" type="stmt"/>
            <line complexity="1" visibility="private" signature="equal(Object,Object) : boolean" num="54" count="2673" type="method"/>
            <line num="55" count="2692" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java" name="ParameterizedTypeHandlerMap.java">
            <metrics coveredelements="102" coveredconditionals="34" complexity="35" loc="200" coveredmethods="12" methods="14" elements="135" classes="1" ncloc="154" statements="79" conditionals="42" coveredstatements="56"/>
            <class name="ParameterizedTypeHandlerMap">
               <metrics coveredelements="102" coveredconditionals="34" complexity="35" coveredmethods="12" methods="14" elements="135" statements="79" conditionals="42" coveredstatements="56"/>
            </class>
            <line complexity="1" visibility="public" signature="registerForTypeHierarchy(Class&lt;?&gt;,T) : void" num="43" count="19" type="method"/>
            <line num="44" count="19" type="stmt"/>
            <line num="45" count="19" type="stmt"/>
            <line complexity="4" visibility="public" signature="registerForTypeHierarchy(Pair&lt;Class&lt;?&gt;, T&gt;) : void" num="48" count="3147" type="method"/>
            <line num="49" count="3147" type="stmt"/>
            <line falsecount="3147" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="3147" type="stmt"/>
            <line num="53" count="3147" type="stmt"/>
            <line falsecount="3146" truecount="1" num="53" type="cond"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="3147" type="stmt"/>
            <line num="58" count="3147" type="stmt"/>
            <line falsecount="3146" truecount="1" num="58" type="cond"/>
            <line num="59" count="1" type="stmt"/>
            <line num="65" count="3146" type="stmt"/>
            <line complexity="3" visibility="private" signature="getIndexOfAnOverriddenHandler(Class&lt;?&gt;) : int" num="68" count="3147" type="method"/>
            <line num="69" count="3147" type="stmt"/>
            <line falsecount="3146" truecount="3464" num="69" type="cond"/>
            <line num="70" count="3464" type="stmt"/>
            <line num="71" count="3464" type="stmt"/>
            <line falsecount="3463" truecount="1" num="71" type="cond"/>
            <line num="72" count="1" type="stmt"/>
            <line num="75" count="3146" type="stmt"/>
            <line complexity="3" visibility="public" signature="register(Type,T) : void" num="78" count="25266" type="method"/>
            <line num="79" count="25266" type="stmt"/>
            <line falsecount="25265" truecount="1" num="79" type="cond"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="25265" type="stmt"/>
            <line falsecount="25264" truecount="1" num="82" type="cond"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="25265" type="stmt"/>
            <line complexity="5" visibility="public" signature="registerIfAbsent(ParameterizedTypeHandlerMap&lt;T&gt;) : void" num="88" count="990" type="method"/>
            <line num="89" count="990" type="stmt"/>
            <line falsecount="990" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="990" type="stmt"/>
            <line num="93" count="21965" type="stmt"/>
            <line falsecount="18" truecount="21947" num="93" type="cond"/>
            <line num="94" count="21947" type="stmt"/>
            <line num="99" count="990" type="stmt"/>
            <line falsecount="990" truecount="3129" num="99" type="cond"/>
            <line num="100" count="3129" type="stmt"/>
            <line num="101" count="3129" type="stmt"/>
            <line num="102" count="3129" type="stmt"/>
            <line falsecount="1" truecount="3128" num="102" type="cond"/>
            <line num="103" count="3128" type="stmt"/>
            <line complexity="3" visibility="public" signature="registerIfAbsent(Type,T) : void" num="108" count="3036" type="method"/>
            <line num="109" count="3036" type="stmt"/>
            <line falsecount="3036" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="3036" type="stmt"/>
            <line falsecount="0" truecount="3036" num="112" type="cond"/>
            <line num="113" count="3036" type="stmt"/>
            <line complexity="1" visibility="public" signature="makeUnmodifiable() : void" num="117" count="487" type="method"/>
            <line num="118" count="487" type="stmt"/>
            <line complexity="4" visibility="public" signature="getHandlerFor(Type) : T" num="121" count="3456" type="method"/>
            <line num="122" count="3456" type="stmt"/>
            <line num="123" count="3456" type="stmt"/>
            <line falsecount="1852" truecount="1604" num="123" type="cond"/>
            <line num="124" count="1604" type="stmt"/>
            <line num="125" count="1604" type="stmt"/>
            <line falsecount="1333" truecount="271" num="125" type="cond"/>
            <line num="126" count="271" type="stmt"/>
            <line num="128" count="1604" type="stmt"/>
            <line falsecount="209" truecount="1395" num="128" type="cond"/>
            <line num="130" count="1395" type="stmt"/>
            <line num="133" count="3456" type="stmt"/>
            <line complexity="2" visibility="private" signature="getHandlerForTypeHierarchy(Class&lt;?&gt;) : T" num="136" count="1395" type="method"/>
            <line num="137" count="1395" type="stmt"/>
            <line num="138" count="4208" type="stmt"/>
            <line falsecount="3954" truecount="254" num="138" type="cond"/>
            <line num="139" count="254" type="stmt"/>
            <line num="142" count="1141" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasSpecificHandlerFor(Type) : boolean" num="145" count="25277" type="method"/>
            <line num="146" count="25277" type="stmt"/>
            <line complexity="3" visibility="private" signature="getIndexOfSpecificHandlerForTypeHierarchy(Class&lt;?&gt;) : int" num="149" count="6276" type="method"/>
            <line num="150" count="6276" type="stmt"/>
            <line falsecount="6274" truecount="6916" num="150" type="cond"/>
            <line num="151" count="6916" type="stmt"/>
            <line falsecount="6914" truecount="2" num="151" type="cond"/>
            <line num="152" count="2" type="stmt"/>
            <line num="155" count="6274" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyOf() : ParameterizedTypeHandlerMap&lt;T&gt;" num="158" count="483" type="method"/>
            <line num="159" count="483" type="stmt"/>
            <line num="160" count="483" type="stmt"/>
            <line num="161" count="109" type="stmt"/>
            <line num="163" count="483" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="166" count="483" type="stmt"/>
            <line complexity="3" visibility="public" signature="toString() : String" num="169" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="174" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="185" type="cond"/>
            <line num="186" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="typeToString(Type) : String" num="197" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java" name="ParameterizedTypeImpl.java">
            <metrics coveredelements="25" coveredconditionals="6" complexity="12" loc="91" coveredmethods="6" methods="6" elements="33" classes="1" ncloc="44" statements="15" conditionals="12" coveredstatements="13"/>
            <class name="ParameterizedTypeImpl">
               <metrics coveredelements="25" coveredconditionals="6" complexity="12" coveredmethods="6" methods="6" elements="33" statements="15" conditionals="12" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="ParameterizedTypeImpl(Type,Type[],Type)" num="49" count="118" type="method"/>
            <line num="50" count="118" type="stmt"/>
            <line num="51" count="118" type="stmt"/>
            <line num="52" count="118" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRawType() : Type" num="55" count="457" type="method"/>
            <line num="56" count="457" type="stmt"/>
            <line complexity="1" visibility="public" signature="getActualTypeArguments() : Type[]" num="59" count="125" type="method"/>
            <line num="60" count="125" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOwnerType() : Type" num="63" count="45" type="method"/>
            <line num="64" count="45" type="stmt"/>
            <line complexity="5" visibility="public" signature="equals(Object) : boolean" num="67" count="1" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="80" type="cond"/>
            <line falsecount="1" truecount="0" num="81" type="cond"/>
            <line complexity="3" visibility="public" signature="hashCode() : int" num="85" count="141" type="method"/>
            <line num="87" count="141" type="stmt"/>
            <line falsecount="0" truecount="141" num="88" type="cond"/>
            <line falsecount="141" truecount="0" num="89" type="cond"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/Preconditions.java" name="Preconditions.java">
            <metrics coveredelements="10" coveredconditionals="3" complexity="5" loc="48" coveredmethods="3" methods="3" elements="12" classes="1" ncloc="16" statements="5" conditionals="4" coveredstatements="4"/>
            <class name="Preconditions">
               <metrics coveredelements="10" coveredconditionals="3" complexity="5" coveredmethods="3" methods="3" elements="12" statements="5" conditionals="4" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="checkNotNull(Object) : void" num="33" count="10635" type="method"/>
            <line num="34" count="10686" type="stmt"/>
            <line complexity="2" visibility="public" signature="checkArgument(boolean) : void" num="37" count="14599" type="method"/>
            <line num="38" count="14624" type="stmt"/>
            <line falsecount="14608" truecount="8" num="38" type="cond"/>
            <line num="39" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="checkState(boolean) : void" num="43" count="812" type="method"/>
            <line num="44" count="817" type="stmt"/>
            <line falsecount="824" truecount="0" num="44" type="cond"/>
            <line num="45" count="0" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/Primitives.java" name="Primitives.java">
            <metrics coveredelements="34" coveredconditionals="4" complexity="9" loc="114" coveredmethods="6" methods="7" elements="35" classes="1" ncloc="48" statements="24" conditionals="4" coveredstatements="24"/>
            <class name="Primitives">
               <metrics coveredelements="34" coveredconditionals="4" complexity="9" coveredmethods="6" methods="7" elements="35" statements="24" conditionals="4" coveredstatements="24"/>
            </class>
            <line complexity="1" visibility="private" signature="Primitives()" num="30" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 40()" num="40" count="1" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="add(Map&lt;Class&lt;?&gt;, Class&lt;?&gt;&gt;,Map&lt;Class&lt;?&gt;, Class&lt;?&gt;&gt;,Class&lt;?&gt;,Class&lt;?&gt;) : void" num="58" count="9" type="method"/>
            <line num="60" count="9" type="stmt"/>
            <line num="61" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="isWrapperType(Class&lt;?&gt;) : boolean" num="70" count="23" type="method"/>
            <line num="71" count="23" type="stmt"/>
            <line complexity="1" visibility="private" signature="checkNotNull(Class&lt;?&gt;) : Class&lt;?&gt;" num="74" count="357" type="method"/>
            <line num="75" count="358" type="stmt"/>
            <line num="76" count="367" type="stmt"/>
            <line complexity="2" visibility="public" signature="wrap(Class&lt;T&gt;) : Class&lt;T&gt;" num="88" count="325" type="method"/>
            <line num="89" count="327" type="stmt"/>
            <line num="92" count="331" type="stmt"/>
            <line num="94" count="335" type="stmt"/>
            <line falsecount="30" truecount="304" num="94" type="cond"/>
            <line complexity="2" visibility="public" signature="unwrap(Class&lt;T&gt;) : Class&lt;T&gt;" num="106" count="8" type="method"/>
            <line num="107" count="8" type="stmt"/>
            <line num="110" count="8" type="stmt"/>
            <line num="112" count="8" type="stmt"/>
            <line falsecount="2" truecount="6" num="112" type="cond"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/RecursiveFieldNamingPolicy.java" name="RecursiveFieldNamingPolicy.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="1" loc="46" coveredmethods="1" methods="1" elements="3" classes="1" ncloc="11" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="RecursiveFieldNamingPolicy">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="translateName(FieldAttributes) : String" num="32" count="1422" type="method"/>
            <line num="33" count="1438" type="stmt"/>
            <line num="34" count="1445" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java" name="SerializedNameAnnotationInterceptingNamingPolicy.java">
            <metrics coveredelements="8" coveredconditionals="2" complexity="3" loc="48" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="15" statements="4" conditionals="2" coveredstatements="4"/>
            <class name="SerializedNameAnnotationInterceptingNamingPolicy">
               <metrics coveredelements="8" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="8" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="SerializedNameAnnotationInterceptingNamingPolicy(FieldNamingStrategy2)" num="38" count="12" type="method"/>
            <line num="39" count="12" type="stmt"/>
            <line complexity="2" visibility="public" signature="translateName(FieldAttributes) : String" num="42" count="1438" type="method"/>
            <line num="43" count="1450" type="stmt"/>
            <line num="44" count="1450" type="stmt"/>
            <line num="45" count="1441" type="stmt"/>
            <line falsecount="6" truecount="1436" num="45" type="cond"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/Streams.java" name="Streams.java">
            <metrics coveredelements="83" coveredconditionals="22" complexity="39" loc="176" coveredmethods="3" methods="11" elements="107" classes="3" ncloc="127" statements="72" conditionals="24" coveredstatements="58"/>
            <class name="Streams">
               <metrics coveredelements="83" coveredconditionals="22" complexity="31" coveredmethods="3" methods="3" elements="92" statements="65" conditionals="24" coveredstatements="58"/>
            </class>
            <class name="Streams.AppendableWriter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="9" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Streams.AppendableWriter.CurrentWrite">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="17" visibility="package" signature="parse(JsonReader) : JsonElement" num="36" count="1242" type="method"/>
            <line num="37" count="1251" type="stmt"/>
            <line num="38" count="1248" type="stmt"/>
            <line num="39" count="390" type="stmt"/>
            <line num="40" count="393" type="stmt"/>
            <line num="41" count="423" type="stmt"/>
            <line num="42" count="426" type="stmt"/>
            <line num="43" count="427" type="stmt"/>
            <line num="44" count="45" type="stmt"/>
            <line num="45" count="45" type="stmt"/>
            <line num="46" count="15" type="stmt"/>
            <line num="47" count="15" type="stmt"/>
            <line num="48" count="15" type="stmt"/>
            <line num="49" count="97" type="stmt"/>
            <line num="50" count="97" type="stmt"/>
            <line num="51" count="97" type="stmt"/>
            <line num="52" count="97" type="stmt"/>
            <line falsecount="96" truecount="210" num="52" type="cond"/>
            <line num="53" count="210" type="stmt"/>
            <line num="55" count="96" type="stmt"/>
            <line num="56" count="96" type="stmt"/>
            <line num="57" count="267" type="stmt"/>
            <line num="58" count="268" type="stmt"/>
            <line num="59" count="271" type="stmt"/>
            <line num="60" count="271" type="stmt"/>
            <line falsecount="264" truecount="658" num="60" type="cond"/>
            <line num="61" count="662" type="stmt"/>
            <line num="63" count="263" type="stmt"/>
            <line num="64" count="269" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="12" visibility="package" signature="write(JsonElement,boolean,JsonWriter) : void" num="86" count="1525" type="method"/>
            <line num="88" count="1525" type="stmt"/>
            <line falsecount="1497" truecount="31" num="88" type="cond"/>
            <line num="89" count="31" type="stmt"/>
            <line falsecount="7" truecount="24" num="89" type="cond"/>
            <line num="90" count="24" type="stmt"/>
            <line num="93" count="1495" type="stmt"/>
            <line falsecount="481" truecount="1017" num="93" type="cond"/>
            <line num="94" count="1016" type="stmt"/>
            <line num="95" count="1018" type="stmt"/>
            <line falsecount="505" truecount="510" num="95" type="cond"/>
            <line num="96" count="511" type="stmt"/>
            <line num="97" count="507" type="stmt"/>
            <line falsecount="434" truecount="70" num="97" type="cond"/>
            <line num="98" count="70" type="stmt"/>
            <line num="100" count="437" type="stmt"/>
            <line num="103" count="480" type="stmt"/>
            <line falsecount="334" truecount="145" num="103" type="cond"/>
            <line num="104" count="145" type="stmt"/>
            <line num="105" count="145" type="stmt"/>
            <line num="107" count="328" type="stmt"/>
            <line falsecount="320" truecount="8" num="107" type="cond"/>
            <line num="108" count="8" type="stmt"/>
            <line num="109" count="8" type="stmt"/>
            <line num="111" count="320" type="stmt"/>
            <line num="113" count="145" type="stmt"/>
            <line num="115" count="336" type="stmt"/>
            <line falsecount="0" truecount="335" num="115" type="cond"/>
            <line num="116" count="334" type="stmt"/>
            <line num="117" count="332" type="stmt"/>
            <line num="118" count="809" type="stmt"/>
            <line num="119" count="817" type="stmt"/>
            <line falsecount="811" truecount="6" num="119" type="cond"/>
            <line num="120" count="6" type="stmt"/>
            <line num="122" count="810" type="stmt"/>
            <line num="123" count="810" type="stmt"/>
            <line num="125" count="334" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="writerForAppendable(Appendable) : Writer" num="132" count="383" type="method"/>
            <line num="133" count="383" type="stmt"/>
            <line falsecount="0" truecount="386" num="133" type="cond"/>
            <line complexity="1" visibility="private" signature="AppendableWriter(Appendable)" num="144" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(char[],int,int) : void" num="148" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(int) : void" num="153" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="flush() : void" num="157" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="close() : void" num="158" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="length() : int" num="165" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="charAt(int) : char" num="168" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subSequence(int,int) : CharSequence" num="171" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java" name="SyntheticFieldExclusionStrategy.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="3" loc="44" coveredmethods="3" methods="3" elements="6" classes="1" ncloc="13" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="SyntheticFieldExclusionStrategy">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="package" signature="SyntheticFieldExclusionStrategy(boolean)" num="32" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldSkipClass(Class&lt;?&gt;) : boolean" num="36" count="2864" type="method"/>
            <line num="37" count="2870" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldSkipField(FieldAttributes) : boolean" num="40" count="1697" type="method"/>
            <line num="41" count="1712" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/TypeAdapter.java" name="TypeAdapter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="35" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TypeAdapter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/TypeInfo.java" name="TypeInfo.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="8" loc="76" coveredmethods="7" methods="8" elements="17" classes="1" ncloc="31" statements="9" conditionals="0" coveredstatements="8"/>
            <class name="TypeInfo">
               <metrics coveredelements="15" coveredconditionals="0" complexity="8" coveredmethods="7" methods="8" elements="17" statements="9" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="package" signature="TypeInfo(Type)" num="32" count="4631" type="method"/>
            <line num="33" count="4642" type="stmt"/>
            <line num="34" count="4649" type="stmt"/>
            <line complexity="1" visibility="public" signature="getActualType() : Type" num="37" count="2034" type="method"/>
            <line num="38" count="2042" type="stmt"/>
            <line complexity="1" visibility="public" signature="getWrappedClass() : Class&lt;?&gt;" num="50" count="1" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRawClass() : Class&lt;?&gt;" num="57" count="2360" type="method"/>
            <line num="58" count="2364" type="stmt"/>
            <line complexity="1" visibility="public" signature="isCollectionOrArray() : boolean" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isArray() : boolean" num="65" count="771" type="method"/>
            <line num="66" count="773" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEnum() : boolean" num="69" count="17" type="method"/>
            <line num="70" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="isPrimitive() : boolean" num="73" count="18" type="method"/>
            <line num="74" count="18" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/TypeInfoArray.java" name="TypeInfoArray.java">
            <metrics coveredelements="17" coveredconditionals="4" complexity="6" loc="69" coveredmethods="4" methods="4" elements="17" classes="1" ncloc="26" statements="9" conditionals="4" coveredstatements="9"/>
            <class name="TypeInfoArray">
               <metrics coveredelements="17" coveredconditionals="4" complexity="6" coveredmethods="4" methods="4" elements="17" statements="9" conditionals="4" coveredstatements="9"/>
            </class>
            <line complexity="2" visibility="package" signature="TypeInfoArray(Type)" num="32" count="142" type="method"/>
            <line num="33" count="142" type="stmt"/>
            <line num="34" count="142" type="stmt"/>
            <line num="35" count="142" type="stmt"/>
            <line falsecount="142" truecount="151" num="35" type="cond"/>
            <line num="36" count="151" type="stmt"/>
            <line num="38" count="142" type="stmt"/>
            <line num="39" count="142" type="stmt"/>
            <line complexity="2" visibility="private" signature="extractSecondLevelType(Type,Class&lt;?&gt;) : Type" num="42" count="142" type="method"/>
            <line num="43" count="142" type="stmt"/>
            <line falsecount="123" truecount="19" num="43" type="cond"/>
            <line complexity="1" visibility="public" signature="getSecondLevelType() : Type" num="55" count="123" type="method"/>
            <line num="56" count="123" type="stmt"/>
            <line complexity="1" visibility="public" signature="getComponentRawType() : Class&lt;?&gt;" num="66" count="61" type="method"/>
            <line num="67" count="61" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/TypeInfoCollection.java" name="TypeInfoCollection.java">
            <metrics coveredelements="10" coveredconditionals="2" complexity="3" loc="46" coveredmethods="2" methods="2" elements="10" classes="1" ncloc="20" statements="6" conditionals="2" coveredstatements="6"/>
            <class name="TypeInfoCollection">
               <metrics coveredelements="10" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="10" statements="6" conditionals="2" coveredstatements="6"/>
            </class>
            <line complexity="2" visibility="public" signature="TypeInfoCollection(Type)" num="32" count="108" type="method"/>
            <line num="33" count="108" type="stmt"/>
            <line falsecount="105" truecount="3" num="33" type="cond"/>
            <line num="34" count="3" type="stmt"/>
            <line num="38" count="105" type="stmt"/>
            <line num="39" count="105" type="stmt"/>
            <line num="40" count="105" type="stmt"/>
            <line complexity="1" visibility="public" signature="getElementType() : Type" num="43" count="105" type="method"/>
            <line num="44" count="105" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/TypeInfoFactory.java" name="TypeInfoFactory.java">
            <metrics coveredelements="89" coveredconditionals="26" complexity="29" loc="175" coveredmethods="6" methods="7" elements="118" classes="1" ncloc="120" statements="71" conditionals="40" coveredstatements="57"/>
            <class name="TypeInfoFactory">
               <metrics coveredelements="89" coveredconditionals="26" complexity="29" coveredmethods="6" methods="7" elements="118" statements="71" conditionals="40" coveredstatements="57"/>
            </class>
            <line complexity="1" visibility="private" signature="TypeInfoFactory()" num="34" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getTypeInfoForArray(Type) : TypeInfoArray" num="38" count="132" type="method"/>
            <line num="39" count="132" type="stmt"/>
            <line num="40" count="132" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypeInfoForField(Field,Type) : TypeInfo" num="51" count="1454" type="method"/>
            <line num="52" count="1478" type="stmt"/>
            <line num="53" count="1492" type="stmt"/>
            <line num="54" count="1492" type="stmt"/>
            <line num="55" count="1483" type="stmt"/>
            <line complexity="13" visibility="private" signature="getActualType(Type,Type,Class&lt;?&gt;) : Type" num="58" count="1661" type="method"/>
            <line num="60" count="1684" type="stmt"/>
            <line falsecount="297" truecount="1395" num="60" type="cond"/>
            <line num="61" count="1378" type="stmt"/>
            <line num="62" count="297" type="stmt"/>
            <line falsecount="181" truecount="116" num="62" type="cond"/>
            <line num="63" count="116" type="stmt"/>
            <line num="64" count="116" type="stmt"/>
            <line num="65" count="116" type="stmt"/>
            <line num="67" count="116" type="stmt"/>
            <line num="68" count="116" type="stmt"/>
            <line num="69" count="181" type="stmt"/>
            <line falsecount="136" truecount="45" num="69" type="cond"/>
            <line num="70" count="45" type="stmt"/>
            <line num="71" count="45" type="stmt"/>
            <line num="72" count="45" type="stmt"/>
            <line num="73" count="45" type="stmt"/>
            <line falsecount="44" truecount="1" num="73" type="cond"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="44" type="stmt"/>
            <line falsecount="28" truecount="16" num="76" type="cond"/>
            <line num="79" count="136" type="stmt"/>
            <line falsecount="34" truecount="102" num="79" type="cond"/>
            <line num="80" count="102" type="stmt"/>
            <line falsecount="8" truecount="94" num="80" type="cond"/>
            <line num="87" count="94" type="stmt"/>
            <line num="88" count="94" type="stmt"/>
            <line num="89" count="94" type="stmt"/>
            <line num="90" count="94" type="stmt"/>
            <line num="91" count="94" type="stmt"/>
            <line num="92" count="94" type="stmt"/>
            <line num="93" count="8" type="stmt"/>
            <line falsecount="0" truecount="8" num="93" type="cond"/>
            <line num="94" count="8" type="stmt"/>
            <line num="96" count="8" type="stmt"/>
            <line num="97" count="8" type="stmt"/>
            <line falsecount="8" truecount="0" num="98" type="cond"/>
            <line num="100" count="8" type="stmt"/>
            <line falsecount="0" truecount="8" num="100" type="cond"/>
            <line num="101" count="8" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="108" count="34" type="stmt"/>
            <line falsecount="0" truecount="34" num="108" type="cond"/>
            <line num="109" count="34" type="stmt"/>
            <line num="110" count="34" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="8" visibility="private" signature="extractTypeForHierarchy(Type,TypeVariable&lt;?&gt;) : Type" num="117" count="8" type="method"/>
            <line num="118" count="8" type="stmt"/>
            <line num="119" count="8" type="stmt"/>
            <line falsecount="0" truecount="8" num="119" type="cond"/>
            <line num="120" count="8" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="128" count="8" type="stmt"/>
            <line num="129" count="8" type="stmt"/>
            <line falsecount="0" truecount="8" num="129" type="cond"/>
            <line num="132" count="8" type="stmt"/>
            <line num="134" count="8" type="stmt"/>
            <line num="136" count="8" type="stmt"/>
            <line num="137" count="8" type="stmt"/>
            <line falsecount="0" truecount="8" num="137" type="cond"/>
            <line num="138" count="8" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="145" count="8" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="149" type="cond"/>
            <line num="150" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="extractRealTypes(Type[],Type,Class&lt;?&gt;) : Type[]" num="155" count="116" type="method"/>
            <line num="157" count="116" type="stmt"/>
            <line num="159" count="116" type="stmt"/>
            <line num="160" count="116" type="stmt"/>
            <line falsecount="116" truecount="121" num="160" type="cond"/>
            <line num="161" count="121" type="stmt"/>
            <line num="163" count="116" type="stmt"/>
            <line complexity="3" visibility="private" signature="getIndex(TypeVariable&lt;?&gt;[],TypeVariable&lt;?&gt;) : int" num="166" count="102" type="method"/>
            <line num="167" count="102" type="stmt"/>
            <line falsecount="0" truecount="126" num="167" type="cond"/>
            <line num="168" count="126" type="stmt"/>
            <line falsecount="24" truecount="102" num="168" type="cond"/>
            <line num="169" count="102" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/TypeInfoMap.java" name="TypeInfoMap.java">
            <metrics coveredelements="19" coveredconditionals="4" complexity="6" loc="58" coveredmethods="3" methods="3" elements="19" classes="1" ncloc="31" statements="12" conditionals="4" coveredstatements="12"/>
            <class name="TypeInfoMap">
               <metrics coveredelements="19" coveredconditionals="4" complexity="6" coveredmethods="3" methods="3" elements="19" statements="12" conditionals="4" coveredstatements="12"/>
            </class>
            <line complexity="4" visibility="public" signature="TypeInfoMap(Type)" num="34" count="32" type="method"/>
            <line num="35" count="32" type="stmt"/>
            <line falsecount="31" truecount="1" num="35" type="cond"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="31" type="stmt"/>
            <line falsecount="1" truecount="30" num="38" type="cond"/>
            <line num="39" count="30" type="stmt"/>
            <line num="40" count="30" type="stmt"/>
            <line num="41" count="29" type="stmt"/>
            <line num="42" count="29" type="stmt"/>
            <line num="43" count="29" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKeyType() : Type" num="51" count="20" type="method"/>
            <line num="52" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValueType() : Type" num="55" count="34" type="method"/>
            <line num="56" count="34" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/TypeUtils.java" name="TypeUtils.java">
            <metrics coveredelements="44" coveredconditionals="16" complexity="14" loc="95" coveredmethods="4" methods="5" elements="49" classes="1" ncloc="52" statements="26" conditionals="18" coveredstatements="24"/>
            <class name="TypeUtils">
               <metrics coveredelements="44" coveredconditionals="16" complexity="14" coveredmethods="4" methods="5" elements="49" statements="26" conditionals="18" coveredstatements="24"/>
            </class>
            <line complexity="4" visibility="package" signature="getActualTypeForFirstTypeVariable(Type) : Type" num="43" count="7" type="method"/>
            <line num="44" count="7" type="stmt"/>
            <line falsecount="7" truecount="0" num="44" type="cond"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="7" type="stmt"/>
            <line falsecount="1" truecount="6" num="46" type="cond"/>
            <line num="47" count="6" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="48" type="cond"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="3" visibility="package" signature="isArray(Type) : boolean" num="56" count="914" type="method"/>
            <line num="57" count="919" type="stmt"/>
            <line falsecount="16" truecount="903" num="57" type="cond"/>
            <line num="58" count="900" type="stmt"/>
            <line num="59" count="16" type="stmt"/>
            <line falsecount="1" truecount="15" num="59" type="cond"/>
            <line num="60" count="15" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="5" visibility="package" signature="toRawClass(Type) : Class&lt;?&gt;" num="69" count="8720" type="method"/>
            <line num="70" count="8738" type="stmt"/>
            <line falsecount="958" truecount="7793" num="70" type="cond"/>
            <line num="71" count="7790" type="stmt"/>
            <line num="72" count="958" type="stmt"/>
            <line falsecount="146" truecount="812" num="72" type="cond"/>
            <line num="73" count="812" type="stmt"/>
            <line num="74" count="812" type="stmt"/>
            <line num="75" count="146" type="stmt"/>
            <line falsecount="40" truecount="106" num="75" type="cond"/>
            <line num="76" count="106" type="stmt"/>
            <line num="77" count="106" type="stmt"/>
            <line num="78" count="106" type="stmt"/>
            <line num="79" count="40" type="stmt"/>
            <line falsecount="2" truecount="38" num="79" type="cond"/>
            <line num="80" count="38" type="stmt"/>
            <line num="81" count="38" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="wrapWithArray(Class&lt;?&gt;) : Class&lt;?&gt;" num="88" count="122" type="method"/>
            <line num="89" count="122" type="stmt"/>
            <line complexity="1" visibility="private" signature="TypeUtils()" num="92" count="0" type="method"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/UpperCamelCaseSeparatorNamingPolicy.java" name="UpperCamelCaseSeparatorNamingPolicy.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="45" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="7" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="UpperCamelCaseSeparatorNamingPolicy">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="UpperCamelCaseSeparatorNamingPolicy(String)" num="41" count="6" type="method"/>
            <line num="42" count="6" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/UpperCaseNamingPolicy.java" name="UpperCaseNamingPolicy.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="48" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="UpperCaseNamingPolicy">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="protected" signature="translateName(String,Type,Collection&lt;Annotation&gt;) : String" num="44" count="3" type="method"/>
            <line num="46" count="3" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/VersionConstants.java" name="VersionConstants.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="29" coveredmethods="0" methods="1" elements="1" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="VersionConstants">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="VersionConstants()" num="26" count="0" type="method"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/VersionExclusionStrategy.java" name="VersionExclusionStrategy.java">
            <metrics coveredelements="29" coveredconditionals="8" complexity="10" loc="67" coveredmethods="6" methods="6" elements="29" classes="1" ncloc="37" statements="15" conditionals="8" coveredstatements="15"/>
            <class name="VersionExclusionStrategy">
               <metrics coveredelements="29" coveredconditionals="8" complexity="10" coveredmethods="6" methods="6" elements="29" statements="15" conditionals="8" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="VersionExclusionStrategy(double)" num="31" count="34" type="method"/>
            <line num="32" count="34" type="stmt"/>
            <line num="33" count="33" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldSkipField(FieldAttributes) : boolean" num="36" count="39" type="method"/>
            <line num="37" count="39" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldSkipClass(Class&lt;?&gt;) : boolean" num="40" count="48" type="method"/>
            <line num="41" count="48" type="stmt"/>
            <line complexity="1" visibility="private" signature="isValidVersion(Since,Until) : boolean" num="44" count="87" type="method"/>
            <line num="45" count="87" type="stmt"/>
            <line complexity="3" visibility="private" signature="isValidSince(Since) : boolean" num="48" count="87" type="method"/>
            <line num="49" count="87" type="stmt"/>
            <line falsecount="64" truecount="23" num="49" type="cond"/>
            <line num="50" count="23" type="stmt"/>
            <line num="51" count="23" type="stmt"/>
            <line falsecount="15" truecount="8" num="51" type="cond"/>
            <line num="52" count="8" type="stmt"/>
            <line num="55" count="79" type="stmt"/>
            <line complexity="3" visibility="private" signature="isValidUntil(Until) : boolean" num="58" count="79" type="method"/>
            <line num="59" count="79" type="stmt"/>
            <line falsecount="68" truecount="11" num="59" type="cond"/>
            <line num="60" count="11" type="stmt"/>
            <line num="61" count="11" type="stmt"/>
            <line falsecount="7" truecount="4" num="61" type="cond"/>
            <line num="62" count="4" type="stmt"/>
            <line num="65" count="75" type="stmt"/>
         </file>
      </package>
      <package name="com.google.gson.annotations">
         <metrics coveredelements="0" complexity="0" loc="280" methods="0" classes="4" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="41" files="4" conditionals="0" coveredstatements="0"/>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/annotations/Expose.java" name="Expose.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="79" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Expose">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/annotations/SerializedName.java" name="SerializedName.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="74" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SerializedName">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/annotations/Since.java" name="Since.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="61" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Since">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/annotations/Until.java" name="Until.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="66" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Until">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="com.google.gson.reflect">
         <metrics coveredelements="26" complexity="54" loc="375" methods="22" classes="2" statements="108" coveredconditionals="6" coveredmethods="4" elements="194" ncloc="210" files="1" conditionals="64" coveredstatements="16"/>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/main/java/com/google/gson/reflect/TypeToken.java" name="TypeToken.java">
            <metrics coveredelements="26" coveredconditionals="6" complexity="54" loc="375" coveredmethods="4" methods="22" elements="194" classes="2" ncloc="210" statements="108" conditionals="64" coveredstatements="16"/>
            <class name="TypeToken">
               <metrics coveredelements="26" coveredconditionals="6" complexity="53" coveredmethods="4" methods="21" elements="192" statements="107" conditionals="64" coveredstatements="16"/>
            </class>
            <class name="TypeToken.SimpleTypeToken">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="TypeToken()" num="63" count="105" type="method"/>
            <line num="65" count="105" type="stmt"/>
            <line num="66" count="105" type="stmt"/>
            <line complexity="1" visibility="private" signature="TypeToken(Type)" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="nonNull(T,String) : T" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="getSuperclassTypeParameter(Class&lt;?&gt;) : Type" num="88" count="105" type="method"/>
            <line num="89" count="105" type="stmt"/>
            <line num="90" count="105" type="stmt"/>
            <line falsecount="105" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="105" type="stmt"/>
            <line complexity="1" visibility="package" signature="fromSuperclassTypeParameter(Class&lt;?&gt;) : TypeToken&lt;?&gt;" num="99" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="getRawType(Type) : Class&lt;?&gt;" num="103" count="122" type="method"/>
            <line num="104" count="122" type="stmt"/>
            <line falsecount="122" truecount="0" num="104" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="122" type="stmt"/>
            <line falsecount="17" truecount="105" num="107" type="cond"/>
            <line num="108" count="105" type="stmt"/>
            <line num="113" count="105" type="stmt"/>
            <line num="114" count="105" type="stmt"/>
            <line falsecount="0" truecount="105" num="114" type="cond"/>
            <line num="115" count="105" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="17" type="stmt"/>
            <line falsecount="0" truecount="17" num="118" type="cond"/>
            <line num="119" count="17" type="stmt"/>
            <line num="124" count="17" type="stmt"/>
            <line num="126" count="17" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRawType() : Class&lt;? super T&gt;" num="136" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getType() : Type" num="143" count="105" type="method"/>
            <line num="144" count="105" type="stmt"/>
            <line complexity="1" visibility="public" signature="isAssignableFrom(Class&lt;?&gt;) : boolean" num="150" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="isAssignableFrom(Type) : boolean" num="157" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="168" type="cond"/>
            <line num="169" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="171" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isAssignableFrom(TypeToken&lt;?&gt;) : boolean" num="183" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="isAssignableFrom(Type,GenericArrayType) : boolean" num="191" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="193" type="cond"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="195" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="197" type="cond"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="199" type="cond"/>
            <line num="200" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="10" visibility="private" signature="isAssignableFrom(Type,ParameterizedType,Map&lt;String, Type&gt;) : boolean" num="216" count="0" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="219" type="cond"/>
            <line num="220" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="223" type="cond"/>
            <line num="224" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="230" type="cond"/>
            <line num="231" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="235" type="cond"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="238" type="cond"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="241" type="cond"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="249" type="cond"/>
            <line num="250" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="255" type="cond"/>
            <line num="256" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="262" type="cond"/>
            <line num="263" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="typeEquals(ParameterizedType,ParameterizedType,Map&lt;String, Type&gt;) : boolean" num="273" count="0" type="method"/>
            <line num="275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="275" type="cond"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="278" type="cond"/>
            <line num="279" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="279" type="cond"/>
            <line num="280" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="matches(Type,Type,Map&lt;String, Type&gt;) : boolean" num="292" count="0" type="method"/>
            <line num="294" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="294" type="cond"/>
            <line num="296" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="296" type="cond"/>
            <line num="297" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="307" count="0" type="method"/>
            <line num="308" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="316" count="0" type="method"/>
            <line num="317" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="317" type="cond"/>
            <line num="318" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="320" type="cond"/>
            <line num="321" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="331" count="0" type="method"/>
            <line num="332" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="332" type="cond"/>
            <line complexity="1" visibility="private" signature="buildUnexpectedTypeError(Type,Class&lt;?&gt;) : AssertionError" num="337" count="0" type="method"/>
            <line num="341" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(Type) : TypeToken&lt;?&gt;" num="355" count="0" type="method"/>
            <line num="356" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(Class&lt;T&gt;) : TypeToken&lt;T&gt;" num="362" count="0" type="method"/>
            <line num="363" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpleTypeToken(Type)" num="371" count="0" type="method"/>
            <line num="372" count="0" type="stmt"/>
         </file>
      </package>
   </project>
   <testproject name="Gson 1.6" timestamp="1672979762045">
      <metrics coveredelements="5323" complexity="1307" loc="12496" methods="1020" classes="218" statements="4640" packages="5" coveredconditionals="158" coveredmethods="957" elements="5932" ncloc="8925" files="82" conditionals="272" coveredstatements="4208"/>
      <package name="com.google.gson.stream">
         <metrics coveredelements="717" complexity="141" loc="1225" methods="77" classes="2" statements="697" coveredconditionals="8" coveredmethods="76" elements="782" ncloc="1087" files="2" conditionals="8" coveredstatements="633"/>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/stream/JsonReaderTest.java" name="JsonReaderTest.java">
            <metrics coveredelements="443" coveredconditionals="0" complexity="97" loc="767" coveredmethods="50" methods="51" elements="494" classes="1" ncloc="679" statements="443" conditionals="0" coveredstatements="393"/>
            <class name="JsonReaderTest">
               <metrics coveredelements="443" complexity="97" methods="51" testruns="50" statements="443" coveredconditionals="0" coveredmethods="50" elements="494" testfailures="0" testduration="0.019000000000000003" conditionals="0" coveredstatements="393" testpasses="50"/>
            </class>
            <line complexity="1" visibility="public" signature="testReadArray() : void" num="26" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReadEmptyArray() : void" num="35" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReadObject() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReadEmptyObject() : void" num="55" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSkipObject() : void" num="63" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHelloWorld() : void" num="75" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNulls() : void" num="92" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testEmptyString() : void" num="100" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNoTopLevelObject() : void" num="111" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCharacterUnescaping() : void" num="118" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="119" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntegersWithFractionalPartSpecified() : void" num="164" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoubles() : void" num="172" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="173" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStrictNonFiniteDoubles() : void" num="197" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLenientNonFiniteDoubles() : void" num="208" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="209" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line num="214" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testLongs() : void" num="219" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="220" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line num="230" count="1" type="stmt"/>
            <line num="231" count="1" type="stmt"/>
            <line num="232" count="1" type="stmt"/>
            <line num="233" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="disabled_testHighPrecisionLong() : void" num="256" count="0" type="method"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testNumberWithOctalPrefix() : void" num="264" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="265" count="1" type="stmt"/>
            <line num="266" count="1" type="stmt"/>
            <line num="267" count="1" type="stmt"/>
            <line num="268" count="1" type="stmt"/>
            <line num="269" count="1" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="273" count="1" type="stmt"/>
            <line num="274" count="1" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="278" count="1" type="stmt"/>
            <line num="279" count="1" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="283" count="1" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line num="285" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBooleans() : void" num="288" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="289" count="1" type="stmt"/>
            <line num="290" count="1" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line num="292" count="1" type="stmt"/>
            <line num="293" count="1" type="stmt"/>
            <line num="294" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMixedCaseLiterals() : void" num="297" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="298" count="1" type="stmt"/>
            <line num="299" count="1" type="stmt"/>
            <line num="300" count="1" type="stmt"/>
            <line num="301" count="1" type="stmt"/>
            <line num="302" count="1" type="stmt"/>
            <line num="303" count="1" type="stmt"/>
            <line num="304" count="1" type="stmt"/>
            <line num="305" count="1" type="stmt"/>
            <line num="306" count="1" type="stmt"/>
            <line num="307" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMissingValue() : void" num="310" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="311" count="1" type="stmt"/>
            <line num="312" count="1" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line num="314" count="1" type="stmt"/>
            <line num="315" count="1" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testPrematureEndOfInput() : void" num="321" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="322" count="1" type="stmt"/>
            <line num="323" count="1" type="stmt"/>
            <line num="324" count="1" type="stmt"/>
            <line num="325" count="1" type="stmt"/>
            <line num="326" count="1" type="stmt"/>
            <line num="327" count="1" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testPrematurelyClosed() : void" num="333" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="334" count="1" type="stmt"/>
            <line num="335" count="1" type="stmt"/>
            <line num="336" count="1" type="stmt"/>
            <line num="337" count="1" type="stmt"/>
            <line num="338" count="1" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="343" count="1" type="stmt"/>
            <line num="344" count="1" type="stmt"/>
            <line num="345" count="1" type="stmt"/>
            <line num="346" count="1" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="351" count="1" type="stmt"/>
            <line num="352" count="1" type="stmt"/>
            <line num="353" count="1" type="stmt"/>
            <line num="354" count="1" type="stmt"/>
            <line num="355" count="1" type="stmt"/>
            <line num="356" count="1" type="stmt"/>
            <line num="357" count="1" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line complexity="11" visibility="public" signature="testNextFailuresDoNotAdvance() : void" num="363" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="364" count="1" type="stmt"/>
            <line num="365" count="1" type="stmt"/>
            <line num="366" count="1" type="stmt"/>
            <line num="367" count="1" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="371" count="1" type="stmt"/>
            <line num="372" count="1" type="stmt"/>
            <line num="373" count="1" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line num="377" count="1" type="stmt"/>
            <line num="378" count="1" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line num="382" count="1" type="stmt"/>
            <line num="383" count="1" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line num="387" count="1" type="stmt"/>
            <line num="388" count="1" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line num="392" count="1" type="stmt"/>
            <line num="393" count="1" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line num="397" count="1" type="stmt"/>
            <line num="398" count="1" type="stmt"/>
            <line num="399" count="1" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line num="403" count="1" type="stmt"/>
            <line num="404" count="1" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line num="408" count="1" type="stmt"/>
            <line num="409" count="1" type="stmt"/>
            <line num="410" count="0" type="stmt"/>
            <line num="413" count="1" type="stmt"/>
            <line num="414" count="1" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line num="418" count="1" type="stmt"/>
            <line num="419" count="1" type="stmt"/>
            <line num="420" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStringNullIsNotNull() : void" num="423" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="424" count="1" type="stmt"/>
            <line num="425" count="1" type="stmt"/>
            <line num="426" count="1" type="stmt"/>
            <line num="427" count="1" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNullLiteralIsNotAString() : void" num="433" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="434" count="1" type="stmt"/>
            <line num="435" count="1" type="stmt"/>
            <line num="436" count="1" type="stmt"/>
            <line num="437" count="1" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testStrictNameValueSeparator() : void" num="443" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="444" count="1" type="stmt"/>
            <line num="445" count="1" type="stmt"/>
            <line num="446" count="1" type="stmt"/>
            <line num="447" count="1" type="stmt"/>
            <line num="448" count="1" type="stmt"/>
            <line num="449" count="0" type="stmt"/>
            <line num="453" count="1" type="stmt"/>
            <line num="454" count="1" type="stmt"/>
            <line num="455" count="1" type="stmt"/>
            <line num="456" count="1" type="stmt"/>
            <line num="457" count="1" type="stmt"/>
            <line num="458" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLenientNameValueSeparator() : void" num="463" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="464" count="1" type="stmt"/>
            <line num="465" count="1" type="stmt"/>
            <line num="466" count="1" type="stmt"/>
            <line num="467" count="1" type="stmt"/>
            <line num="468" count="1" type="stmt"/>
            <line num="470" count="1" type="stmt"/>
            <line num="471" count="1" type="stmt"/>
            <line num="472" count="1" type="stmt"/>
            <line num="473" count="1" type="stmt"/>
            <line num="474" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="testStrictComments() : void" num="477" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="478" count="1" type="stmt"/>
            <line num="479" count="1" type="stmt"/>
            <line num="480" count="1" type="stmt"/>
            <line num="481" count="1" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line num="486" count="1" type="stmt"/>
            <line num="487" count="1" type="stmt"/>
            <line num="488" count="1" type="stmt"/>
            <line num="489" count="1" type="stmt"/>
            <line num="490" count="0" type="stmt"/>
            <line num="494" count="1" type="stmt"/>
            <line num="495" count="1" type="stmt"/>
            <line num="496" count="1" type="stmt"/>
            <line num="497" count="1" type="stmt"/>
            <line num="498" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLenientComments() : void" num="503" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="504" count="1" type="stmt"/>
            <line num="505" count="1" type="stmt"/>
            <line num="506" count="1" type="stmt"/>
            <line num="507" count="1" type="stmt"/>
            <line num="509" count="1" type="stmt"/>
            <line num="510" count="1" type="stmt"/>
            <line num="511" count="1" type="stmt"/>
            <line num="512" count="1" type="stmt"/>
            <line num="514" count="1" type="stmt"/>
            <line num="515" count="1" type="stmt"/>
            <line num="516" count="1" type="stmt"/>
            <line num="517" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStrictUnquotedNames() : void" num="520" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="521" count="1" type="stmt"/>
            <line num="522" count="1" type="stmt"/>
            <line num="523" count="1" type="stmt"/>
            <line num="524" count="1" type="stmt"/>
            <line num="525" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLenientUnquotedNames() : void" num="530" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="531" count="1" type="stmt"/>
            <line num="532" count="1" type="stmt"/>
            <line num="533" count="1" type="stmt"/>
            <line num="534" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStrictSingleQuotedNames() : void" num="537" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="538" count="1" type="stmt"/>
            <line num="539" count="1" type="stmt"/>
            <line num="540" count="1" type="stmt"/>
            <line num="541" count="1" type="stmt"/>
            <line num="542" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLenientSingleQuotedNames() : void" num="547" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="548" count="1" type="stmt"/>
            <line num="549" count="1" type="stmt"/>
            <line num="550" count="1" type="stmt"/>
            <line num="551" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStrictUnquotedStrings() : void" num="554" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="555" count="1" type="stmt"/>
            <line num="556" count="1" type="stmt"/>
            <line num="557" count="1" type="stmt"/>
            <line num="558" count="1" type="stmt"/>
            <line num="559" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLenientUnquotedStrings() : void" num="564" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="565" count="1" type="stmt"/>
            <line num="566" count="1" type="stmt"/>
            <line num="567" count="1" type="stmt"/>
            <line num="568" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStrictSingleQuotedStrings() : void" num="571" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="572" count="1" type="stmt"/>
            <line num="573" count="1" type="stmt"/>
            <line num="574" count="1" type="stmt"/>
            <line num="575" count="1" type="stmt"/>
            <line num="576" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLenientSingleQuotedStrings() : void" num="581" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="582" count="1" type="stmt"/>
            <line num="583" count="1" type="stmt"/>
            <line num="584" count="1" type="stmt"/>
            <line num="585" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStrictSemicolonDelimitedArray() : void" num="588" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="589" count="1" type="stmt"/>
            <line num="590" count="1" type="stmt"/>
            <line num="591" count="1" type="stmt"/>
            <line num="592" count="1" type="stmt"/>
            <line num="593" count="0" type="stmt"/>
            <line num="594" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLenientSemicolonDelimitedArray() : void" num="599" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="600" count="1" type="stmt"/>
            <line num="601" count="1" type="stmt"/>
            <line num="602" count="1" type="stmt"/>
            <line num="603" count="1" type="stmt"/>
            <line num="604" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStrictSemicolonDelimitedNameValuePair() : void" num="607" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="608" count="1" type="stmt"/>
            <line num="609" count="1" type="stmt"/>
            <line num="610" count="1" type="stmt"/>
            <line num="611" count="1" type="stmt"/>
            <line num="612" count="1" type="stmt"/>
            <line num="613" count="0" type="stmt"/>
            <line num="614" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLenientSemicolonDelimitedNameValuePair() : void" num="619" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="620" count="1" type="stmt"/>
            <line num="621" count="1" type="stmt"/>
            <line num="622" count="1" type="stmt"/>
            <line num="623" count="1" type="stmt"/>
            <line num="624" count="1" type="stmt"/>
            <line num="625" count="1" type="stmt"/>
            <line complexity="5" visibility="public" signature="testStrictUnnecessaryArraySeparators() : void" num="628" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="629" count="1" type="stmt"/>
            <line num="630" count="1" type="stmt"/>
            <line num="631" count="1" type="stmt"/>
            <line num="632" count="1" type="stmt"/>
            <line num="633" count="1" type="stmt"/>
            <line num="634" count="0" type="stmt"/>
            <line num="638" count="1" type="stmt"/>
            <line num="639" count="1" type="stmt"/>
            <line num="640" count="1" type="stmt"/>
            <line num="641" count="1" type="stmt"/>
            <line num="642" count="0" type="stmt"/>
            <line num="646" count="1" type="stmt"/>
            <line num="647" count="1" type="stmt"/>
            <line num="648" count="1" type="stmt"/>
            <line num="649" count="1" type="stmt"/>
            <line num="650" count="1" type="stmt"/>
            <line num="651" count="0" type="stmt"/>
            <line num="655" count="1" type="stmt"/>
            <line num="656" count="1" type="stmt"/>
            <line num="657" count="1" type="stmt"/>
            <line num="658" count="1" type="stmt"/>
            <line num="659" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLenientUnnecessaryArraySeparators() : void" num="664" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="665" count="1" type="stmt"/>
            <line num="666" count="1" type="stmt"/>
            <line num="667" count="1" type="stmt"/>
            <line num="668" count="1" type="stmt"/>
            <line num="669" count="1" type="stmt"/>
            <line num="670" count="1" type="stmt"/>
            <line num="671" count="1" type="stmt"/>
            <line num="673" count="1" type="stmt"/>
            <line num="674" count="1" type="stmt"/>
            <line num="675" count="1" type="stmt"/>
            <line num="676" count="1" type="stmt"/>
            <line num="677" count="1" type="stmt"/>
            <line num="678" count="1" type="stmt"/>
            <line num="680" count="1" type="stmt"/>
            <line num="681" count="1" type="stmt"/>
            <line num="682" count="1" type="stmt"/>
            <line num="683" count="1" type="stmt"/>
            <line num="684" count="1" type="stmt"/>
            <line num="685" count="1" type="stmt"/>
            <line num="687" count="1" type="stmt"/>
            <line num="688" count="1" type="stmt"/>
            <line num="689" count="1" type="stmt"/>
            <line num="690" count="1" type="stmt"/>
            <line num="691" count="1" type="stmt"/>
            <line num="692" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStrictMultipleTopLevelValues() : void" num="695" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="696" count="1" type="stmt"/>
            <line num="697" count="1" type="stmt"/>
            <line num="698" count="1" type="stmt"/>
            <line num="699" count="1" type="stmt"/>
            <line num="700" count="1" type="stmt"/>
            <line num="701" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLenientMultipleTopLevelValues() : void" num="706" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="707" count="1" type="stmt"/>
            <line num="708" count="1" type="stmt"/>
            <line num="709" count="1" type="stmt"/>
            <line num="710" count="1" type="stmt"/>
            <line num="711" count="1" type="stmt"/>
            <line num="712" count="1" type="stmt"/>
            <line num="713" count="1" type="stmt"/>
            <line num="714" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStrictTopLevelValueType() : void" num="717" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="718" count="1" type="stmt"/>
            <line num="719" count="1" type="stmt"/>
            <line num="720" count="1" type="stmt"/>
            <line num="721" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLenientTopLevelValueType() : void" num="726" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="727" count="1" type="stmt"/>
            <line num="728" count="1" type="stmt"/>
            <line num="729" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStrictNonExecutePrefix() : void" num="732" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="733" count="1" type="stmt"/>
            <line num="734" count="1" type="stmt"/>
            <line num="735" count="1" type="stmt"/>
            <line num="736" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLenientNonExecutePrefix() : void" num="741" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="742" count="1" type="stmt"/>
            <line num="743" count="1" type="stmt"/>
            <line num="744" count="1" type="stmt"/>
            <line num="745" count="1" type="stmt"/>
            <line num="746" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLenientNonExecutePrefixWithLeadingWhitespace() : void" num="749" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="750" count="1" type="stmt"/>
            <line num="751" count="1" type="stmt"/>
            <line num="752" count="1" type="stmt"/>
            <line num="753" count="1" type="stmt"/>
            <line num="754" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testLenientPartialNonExecutePrefix() : void" num="757" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="758" count="1" type="stmt"/>
            <line num="759" count="1" type="stmt"/>
            <line num="760" count="1" type="stmt"/>
            <line num="761" count="1" type="stmt"/>
            <line num="762" count="1" type="stmt"/>
            <line num="763" count="0" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/stream/JsonWriterTest.java" name="JsonWriterTest.java">
            <metrics coveredelements="274" coveredconditionals="8" complexity="44" loc="458" coveredmethods="26" methods="26" elements="288" classes="1" ncloc="408" statements="254" conditionals="8" coveredstatements="240"/>
            <class name="JsonWriterTest">
               <metrics coveredelements="274" complexity="44" methods="26" testruns="26" statements="254" coveredconditionals="8" coveredmethods="26" elements="288" testfailures="0" testduration="0.01" conditionals="8" coveredstatements="240" testpasses="26"/>
            </class>
            <line complexity="2" visibility="public" signature="testWrongTopLevelType() : void" num="28" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testTwoNames() : void" num="38" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNameWithoutValue() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testValueWithoutName() : void" num="62" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMultipleTopLevelValues() : void" num="73" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBadNestingObject() : void" num="84" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBadNestingArray() : void" num="96" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNullName() : void" num="108" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullStringValue() : void" num="119" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="testNonFiniteDoubles() : void" num="129" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testNonFiniteBoxedDoubles() : void" num="150" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoubles() : void" num="171" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLongs() : void" num="197" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNumbers() : void" num="215" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="216" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBooleans() : void" num="231" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="232" count="1" type="stmt"/>
            <line num="233" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNulls() : void" num="241" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="242" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStrings() : void" num="250" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="251" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="254" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line num="258" count="1" type="stmt"/>
            <line num="259" count="1" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line num="262" count="1" type="stmt"/>
            <line num="263" count="1" type="stmt"/>
            <line num="264" count="1" type="stmt"/>
            <line num="265" count="1" type="stmt"/>
            <line num="266" count="1" type="stmt"/>
            <line num="267" count="1" type="stmt"/>
            <line num="268" count="1" type="stmt"/>
            <line num="269" count="1" type="stmt"/>
            <line num="270" count="1" type="stmt"/>
            <line num="271" count="1" type="stmt"/>
            <line num="272" count="1" type="stmt"/>
            <line num="273" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyArray() : void" num="293" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="294" count="1" type="stmt"/>
            <line num="295" count="1" type="stmt"/>
            <line num="296" count="1" type="stmt"/>
            <line num="297" count="1" type="stmt"/>
            <line num="298" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyObject() : void" num="301" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="302" count="1" type="stmt"/>
            <line num="303" count="1" type="stmt"/>
            <line num="304" count="1" type="stmt"/>
            <line num="305" count="1" type="stmt"/>
            <line num="306" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testObjectsInArrays() : void" num="309" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="310" count="1" type="stmt"/>
            <line num="311" count="1" type="stmt"/>
            <line num="312" count="1" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line num="314" count="1" type="stmt"/>
            <line num="315" count="1" type="stmt"/>
            <line num="316" count="1" type="stmt"/>
            <line num="317" count="1" type="stmt"/>
            <line num="318" count="1" type="stmt"/>
            <line num="319" count="1" type="stmt"/>
            <line num="320" count="1" type="stmt"/>
            <line num="321" count="1" type="stmt"/>
            <line num="322" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArraysInObjects() : void" num="326" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="327" count="1" type="stmt"/>
            <line num="328" count="1" type="stmt"/>
            <line num="329" count="1" type="stmt"/>
            <line num="330" count="1" type="stmt"/>
            <line num="331" count="1" type="stmt"/>
            <line num="332" count="1" type="stmt"/>
            <line num="333" count="1" type="stmt"/>
            <line num="334" count="1" type="stmt"/>
            <line num="335" count="1" type="stmt"/>
            <line num="336" count="1" type="stmt"/>
            <line num="337" count="1" type="stmt"/>
            <line num="338" count="1" type="stmt"/>
            <line num="339" count="1" type="stmt"/>
            <line num="340" count="1" type="stmt"/>
            <line num="341" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testDeepNestingArrays() : void" num="345" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="346" count="1" type="stmt"/>
            <line num="347" count="1" type="stmt"/>
            <line num="348" count="1" type="stmt"/>
            <line falsecount="1" truecount="20" num="348" type="cond"/>
            <line num="349" count="20" type="stmt"/>
            <line num="351" count="1" type="stmt"/>
            <line falsecount="1" truecount="20" num="351" type="cond"/>
            <line num="352" count="20" type="stmt"/>
            <line num="354" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testDeepNestingObjects() : void" num="357" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="358" count="1" type="stmt"/>
            <line num="359" count="1" type="stmt"/>
            <line num="360" count="1" type="stmt"/>
            <line num="361" count="1" type="stmt"/>
            <line falsecount="1" truecount="20" num="361" type="cond"/>
            <line num="362" count="20" type="stmt"/>
            <line num="363" count="20" type="stmt"/>
            <line num="365" count="1" type="stmt"/>
            <line falsecount="1" truecount="20" num="365" type="cond"/>
            <line num="366" count="20" type="stmt"/>
            <line num="368" count="1" type="stmt"/>
            <line num="369" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRepeatedName() : void" num="374" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="375" count="1" type="stmt"/>
            <line num="376" count="1" type="stmt"/>
            <line num="377" count="1" type="stmt"/>
            <line num="378" count="1" type="stmt"/>
            <line num="379" count="1" type="stmt"/>
            <line num="380" count="1" type="stmt"/>
            <line num="382" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrettyPrintObject() : void" num="385" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="386" count="1" type="stmt"/>
            <line num="387" count="1" type="stmt"/>
            <line num="388" count="1" type="stmt"/>
            <line num="390" count="1" type="stmt"/>
            <line num="391" count="1" type="stmt"/>
            <line num="392" count="1" type="stmt"/>
            <line num="393" count="1" type="stmt"/>
            <line num="394" count="1" type="stmt"/>
            <line num="395" count="1" type="stmt"/>
            <line num="396" count="1" type="stmt"/>
            <line num="397" count="1" type="stmt"/>
            <line num="398" count="1" type="stmt"/>
            <line num="399" count="1" type="stmt"/>
            <line num="400" count="1" type="stmt"/>
            <line num="401" count="1" type="stmt"/>
            <line num="402" count="1" type="stmt"/>
            <line num="403" count="1" type="stmt"/>
            <line num="405" count="1" type="stmt"/>
            <line num="419" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrettyPrintArray() : void" num="422" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="423" count="1" type="stmt"/>
            <line num="424" count="1" type="stmt"/>
            <line num="425" count="1" type="stmt"/>
            <line num="427" count="1" type="stmt"/>
            <line num="428" count="1" type="stmt"/>
            <line num="429" count="1" type="stmt"/>
            <line num="430" count="1" type="stmt"/>
            <line num="431" count="1" type="stmt"/>
            <line num="432" count="1" type="stmt"/>
            <line num="433" count="1" type="stmt"/>
            <line num="434" count="1" type="stmt"/>
            <line num="435" count="1" type="stmt"/>
            <line num="436" count="1" type="stmt"/>
            <line num="437" count="1" type="stmt"/>
            <line num="438" count="1" type="stmt"/>
            <line num="439" count="1" type="stmt"/>
            <line num="440" count="1" type="stmt"/>
            <line num="442" count="1" type="stmt"/>
            <line num="456" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.google.gson">
         <metrics coveredelements="1387" complexity="346" loc="3862" methods="279" classes="64" statements="1157" coveredconditionals="20" coveredmethods="276" elements="1472" ncloc="2318" files="44" conditionals="36" coveredstatements="1091"/>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/CamelCaseSeparatorNamingPolicyTest.java" name="CamelCaseSeparatorNamingPolicyTest.java">
            <metrics coveredelements="21" coveredconditionals="0" complexity="7" loc="69" coveredmethods="5" methods="5" elements="23" classes="1" ncloc="39" statements="18" conditionals="0" coveredstatements="16"/>
            <class name="CamelCaseSeparatorNamingPolicyTest">
               <metrics coveredelements="21" complexity="7" methods="5" testruns="5" statements="18" coveredconditionals="0" coveredmethods="5" elements="23" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="16" testpasses="5"/>
            </class>
            <line complexity="3" visibility="public" signature="testInvalidInstantiation() : void" num="32" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnderscoreSeparator() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMultiCharSeparator() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNameBeginsWithCapital() : void" num="58" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExceptionPossiblyIncorrectSeparation() : void" num="64" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/CommentsTest.java" name="CommentsTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="1" loc="45" coveredmethods="1" methods="1" elements="4" classes="1" ncloc="19" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="CommentsTest">
               <metrics coveredelements="4" complexity="1" methods="1" testruns="1" statements="3" coveredconditionals="0" coveredmethods="1" elements="4" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testParseComments() : void" num="32" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java" name="DefaultDateTypeAdapterTest.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="4" loc="60" coveredmethods="3" methods="3" elements="18" classes="1" ncloc="30" statements="15" conditionals="0" coveredstatements="14"/>
            <class name="DefaultDateTypeAdapterTest">
               <metrics coveredelements="17" complexity="4" methods="3" testruns="3" statements="15" coveredconditionals="0" coveredmethods="3" elements="18" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="14" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="testDateSerialization() : void" num="34" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDatePattern() : void" num="44" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testInvalidDatePattern() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/DefaultMapJsonSerializerTest.java" name="DefaultMapJsonSerializerTest.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="3" loc="61" coveredmethods="3" methods="3" elements="16" classes="1" ncloc="30" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="DefaultMapJsonSerializerTest">
               <metrics coveredelements="16" complexity="3" methods="3" testruns="2" statements="13" coveredconditionals="0" coveredmethods="3" elements="16" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="13" testpasses="2"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="38" count="2" type="method"/>
            <line num="40" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyMapNoTypeSerialization() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyMapSerialization() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java" name="DisjunctionExclusionStrategyTest.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="4" loc="62" coveredmethods="3" methods="3" elements="18" classes="1" ncloc="32" statements="15" conditionals="0" coveredstatements="14"/>
            <class name="DisjunctionExclusionStrategyTest">
               <metrics coveredelements="17" complexity="4" methods="3" testruns="3" statements="15" coveredconditionals="0" coveredmethods="3" elements="18" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="14" testpasses="3"/>
            </class>
            <line complexity="2" visibility="public" signature="testBadInstantiation() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSkipFieldsWithMixedTrueAndFalse() : void" num="44" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSkipFieldsWithFalseOnly() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/EscaperTest.java" name="EscaperTest.java">
            <metrics coveredelements="102" coveredconditionals="4" complexity="20" loc="189" coveredmethods="18" methods="18" elements="102" classes="1" ncloc="125" statements="80" conditionals="4" coveredstatements="80"/>
            <class name="EscaperTest">
               <metrics coveredelements="102" complexity="20" methods="18" testruns="16" statements="80" coveredconditionals="4" coveredmethods="18" elements="102" testfailures="0" testduration="0.006" conditionals="4" coveredstatements="80" testpasses="16"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="31" count="16" type="method"/>
            <line num="33" count="16" type="stmt"/>
            <line num="34" count="16" type="stmt"/>
            <line num="35" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNoSpecialCharacters() : void" num="38" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNewlineEscaping() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCarrageReturnEscaping() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTabEscaping() : void" num="56" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoubleQuoteEscaping() : void" num="62" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSingleQuoteEscaping() : void" num="68" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLineSeparatorEscaping() : void" num="74" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParagraphSeparatorEscaping() : void" num="80" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testControlCharBlockEscaping() : void" num="86" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="87" count="1" type="stmt"/>
            <line falsecount="1" truecount="33" num="87" type="cond"/>
            <line num="88" count="33" type="stmt"/>
            <line num="89" count="33" type="stmt"/>
            <line num="90" count="33" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEqualsEscaping() : void" num="94" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGreaterThanAndLessThanEscaping() : void" num="105" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAmpersandEscaping() : void" num="119" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSlashEscaping() : void" num="139" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSingleQuoteNotEscaped() : void" num="145" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRequiredEscapingUnicodeCharacter() : void" num="151" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnicodeCharacterStringNoEscaping() : void" num="160" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="161" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="convertToUnicodeString(int) : String" num="179" count="4" type="method"/>
            <line num="180" count="4" type="stmt"/>
            <line num="181" count="4" type="stmt"/>
            <line num="182" count="4" type="stmt"/>
            <line falsecount="4" truecount="8" num="182" type="cond"/>
            <line num="183" count="8" type="stmt"/>
            <line num="185" count="4" type="stmt"/>
            <line num="187" count="4" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java" name="ExposeAnnotationDeserializationExclusionStrategyTest.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="6" loc="76" coveredmethods="6" methods="6" elements="17" classes="2" ncloc="41" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="ExposeAnnotationDeserializationExclusionStrategyTest">
               <metrics coveredelements="17" complexity="6" methods="6" testruns="5" statements="11" coveredconditionals="0" coveredmethods="6" elements="17" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="11" testpasses="5"/>
            </class>
            <class name="ExposeAnnotationDeserializationExclusionStrategyTest.MockObject">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="33" count="5" type="method"/>
            <line num="35" count="5" type="stmt"/>
            <line num="36" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNeverSkipClasses() : void" num="39" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSkipNonAnnotatedFields() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSkipExplicitlySkippedFields() : void" num="48" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNeverSkipExposedAnnotatedFields() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNeverSkipExplicitlyExposedAnnotatedFields() : void" num="58" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java" name="ExposeAnnotationSerializationExclusionStrategyTest.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="6" loc="76" coveredmethods="6" methods="6" elements="17" classes="2" ncloc="41" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="ExposeAnnotationSerializationExclusionStrategyTest">
               <metrics coveredelements="17" complexity="6" methods="6" testruns="5" statements="11" coveredconditionals="0" coveredmethods="6" elements="17" testfailures="0" testduration="0.006" conditionals="0" coveredstatements="11" testpasses="5"/>
            </class>
            <class name="ExposeAnnotationSerializationExclusionStrategyTest.MockObject">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="33" count="5" type="method"/>
            <line num="35" count="5" type="stmt"/>
            <line num="36" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNeverSkipClasses() : void" num="39" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSkipNonAnnotatedFields() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSkipExplicitlySkippedFields() : void" num="48" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNeverSkipExposedAnnotatedFields() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNeverSkipExplicitlyExposedAnnotatedFields() : void" num="58" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/FieldAttributesTest.java" name="FieldAttributesTest.java">
            <metrics coveredelements="24" coveredconditionals="0" complexity="8" loc="82" coveredmethods="7" methods="7" elements="25" classes="2" ncloc="47" statements="18" conditionals="0" coveredstatements="17"/>
            <class name="FieldAttributesTest">
               <metrics coveredelements="24" complexity="8" methods="7" testruns="6" statements="18" coveredconditionals="0" coveredmethods="7" elements="25" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="17" testpasses="6"/>
            </class>
            <class name="FieldAttributesTest.Foo">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="36" count="6" type="method"/>
            <line num="38" count="6" type="stmt"/>
            <line num="39" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNullField() : void" num="42" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeclaringClass() : void" num="49" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testModifiers() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIsSynthetic() : void" num="64" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testName() : void" num="68" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeclaredTypeAndClass() : void" num="72" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/FieldNamingStrategy2AdapterTest.java" name="FieldNamingStrategy2AdapterTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="2" loc="45" coveredmethods="2" methods="2" elements="7" classes="2" ncloc="18" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="FieldNamingStrategy2AdapterTest">
               <metrics coveredelements="5" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <class name="FieldNamingStrategy2AdapterTest.UpperCaseNamingStrategy">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testSimpleAdapter() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="translateName(Field) : String" num="41" count="1" type="method"/>
            <line num="42" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java" name="FunctionWithInternalDependenciesTest.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="5" loc="79" coveredmethods="5" methods="5" elements="17" classes="2" ncloc="40" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="FunctionWithInternalDependenciesTest">
               <metrics coveredelements="11" complexity="2" methods="2" testruns="2" statements="9" coveredconditionals="0" coveredmethods="2" elements="11" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="9" testpasses="2"/>
            </class>
            <class name="FunctionWithInternalDependenciesTest.UserDefinedExclusionStrategy">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="testAnonymousLocalClassesSerialization() : void" num="37" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUserDefinedExclusionPolicies() : void" num="54" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="UserDefinedExclusionStrategy(Class&lt;?&gt;)" num="66" count="1" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldSkipClass(Class&lt;?&gt;) : boolean" num="70" count="1" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldSkipField(FieldAttributes) : boolean" num="74" count="1" type="method"/>
            <line num="75" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/GenericArrayTypeImplTest.java" name="GenericArrayTypeImplTest.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="3" loc="58" coveredmethods="3" methods="3" elements="13" classes="1" ncloc="27" statements="10" conditionals="0" coveredstatements="10"/>
            <class name="GenericArrayTypeImplTest">
               <metrics coveredelements="13" complexity="3" methods="3" testruns="2" statements="10" coveredconditionals="0" coveredmethods="3" elements="13" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="10" testpasses="2"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="38" count="2" type="method"/>
            <line num="40" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOurTypeFunctionality() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNotEquals() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/GsonBuilderTest.java" name="GsonBuilderTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="4" classes="1" ncloc="9" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="GsonBuilderTest">
               <metrics coveredelements="4" complexity="1" methods="1" testruns="1" statements="3" coveredconditionals="0" coveredmethods="1" elements="4" testfailures="0" testduration="0.085" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testCreatingMoreThanOnce() : void" num="28" testsuccess="true" count="1" testduration="0.085" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/GsonTypeAdapterTest.java" name="GsonTypeAdapterTest.java">
            <metrics coveredelements="33" coveredconditionals="0" complexity="12" loc="108" coveredmethods="9" methods="9" elements="36" classes="3" ncloc="71" statements="27" conditionals="0" coveredstatements="24"/>
            <class name="GsonTypeAdapterTest">
               <metrics coveredelements="24" complexity="8" methods="5" testruns="4" statements="22" coveredconditionals="0" coveredmethods="5" elements="27" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="19" testpasses="4"/>
            </class>
            <class name="GsonTypeAdapterTest.ExceptionTypeAdapter">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="GsonTypeAdapterTest.AtomicIntegerTypeAdapter">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="35" count="4" type="method"/>
            <line num="37" count="4" type="stmt"/>
            <line num="38" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDefaultTypeAdapterThrowsParseException() : void" num="44" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testTypeAdapterThrowsException() : void" num="51" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTypeAdapterProperlyConvertsTypes() : void" num="63" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTypeAdapterDoesNotAffectNonAdaptedTypes() : void" num="73" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(AtomicLong,Type,JsonSerializationContext) : JsonElement" num="84" count="1" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : AtomicLong" num="89" count="1" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(AtomicInteger,Type,JsonSerializationContext) : JsonElement" num="98" count="1" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : AtomicInteger" num="102" count="1" type="method"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java" name="InnerClassExclusionStrategyTest.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="5" loc="67" coveredmethods="5" methods="5" elements="17" classes="3" ncloc="35" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="InnerClassExclusionStrategyTest">
               <metrics coveredelements="17" complexity="5" methods="5" testruns="4" statements="12" coveredconditionals="0" coveredmethods="5" elements="17" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="12" testpasses="4"/>
            </class>
            <class name="InnerClassExclusionStrategyTest.InnerClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="InnerClassExclusionStrategyTest.StaticNestedClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="34" count="4" type="method"/>
            <line num="36" count="4" type="stmt"/>
            <line num="37" count="4" type="stmt"/>
            <line num="38" count="4" type="stmt"/>
            <line num="39" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExcludeInnerClassObject() : void" num="42" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExcludeInnerClassField() : void" num="47" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIncludeStaticNestedClassObject() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIncludeStaticNestedClassField() : void" num="57" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/JavaFieldNamingPolicyTest.java" name="JavaFieldNamingPolicyTest.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="4" loc="47" coveredmethods="3" methods="3" elements="10" classes="1" ncloc="20" statements="7" conditionals="0" coveredstatements="6"/>
            <class name="JavaFieldNamingPolicyTest">
               <metrics coveredelements="9" complexity="4" methods="3" testruns="2" statements="7" coveredconditionals="0" coveredmethods="3" elements="10" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="6" testpasses="2"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="30" count="2" type="method"/>
            <line num="32" count="2" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFieldNamingPolicy() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNullField() : void" num="41" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/JsonDeserializerExceptionWrapperTest.java" name="JsonDeserializerExceptionWrapperTest.java">
            <metrics coveredelements="23" coveredconditionals="0" complexity="7" loc="90" coveredmethods="5" methods="5" elements="25" classes="2" ncloc="53" statements="20" conditionals="0" coveredstatements="18"/>
            <class name="JsonDeserializerExceptionWrapperTest">
               <metrics coveredelements="19" complexity="5" methods="3" testruns="3" statements="18" coveredconditionals="0" coveredmethods="3" elements="21" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="16" testpasses="3"/>
            </class>
            <class name="JsonDeserializerExceptionWrapperTest.ExceptionJsonDeserializer">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="2" visibility="public" signature="testRethrowJsonParseException() : void" num="39" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testWrappedExceptionPropagation() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testProperSerialization() : void" num="68" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ExceptionJsonDeserializer(RuntimeException)" num="81" count="2" type="method"/>
            <line num="82" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : String" num="85" count="2" type="method"/>
            <line num="87" count="2" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java" name="JsonFieldNameValidatorTest.java">
            <metrics coveredelements="42" coveredconditionals="0" complexity="20" loc="112" coveredmethods="14" methods="14" elements="48" classes="1" ncloc="74" statements="34" conditionals="0" coveredstatements="28"/>
            <class name="JsonFieldNameValidatorTest">
               <metrics coveredelements="42" complexity="20" methods="14" testruns="13" statements="34" coveredconditionals="0" coveredmethods="14" elements="48" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="28" testpasses="13"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="30" count="13" type="method"/>
            <line num="32" count="13" type="stmt"/>
            <line num="33" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="testValidFieldBeginsWithDollarSign() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testValidFieldBeginsWithUnderscore() : void" num="41" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testValidFieldBeginsWithLetter() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testValidFieldMixingLetter() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testInvalidFieldStartingWithNumbers() : void" num="56" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testInvalidFieldStartingTwoDollarSigns() : void" num="63" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testInvalidFieldStartingTwoUnderscores() : void" num="70" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testInvalidFieldStartingDollarUnderscore() : void" num="77" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJavaAndJsKeywordAsFieldName() : void" num="84" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testInvalidCharacters() : void" num="89" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDashesInFieldName() : void" num="96" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSpacesInFieldName() : void" num="101" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSpacesInBeginningOfName() : void" num="106" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/JsonObjectTest.java" name="JsonObjectTest.java">
            <metrics coveredelements="64" coveredconditionals="0" complexity="10" loc="132" coveredmethods="9" methods="9" elements="65" classes="1" ncloc="79" statements="56" conditionals="0" coveredstatements="55"/>
            <class name="JsonObjectTest">
               <metrics coveredelements="64" complexity="10" methods="9" testruns="9" statements="56" coveredconditionals="0" coveredmethods="9" elements="65" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="55" testpasses="9"/>
            </class>
            <line complexity="1" visibility="public" signature="testAddingAndRemovingObjectProperties() : void" num="28" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAddingNullPropertyValue() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAddingNullOrEmptyPropertyName() : void" num="55" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAddingBooleanProperties() : void" num="66" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAddingStringProperties() : void" num="78" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAddingCharacterProperties() : void" num="92" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPropertyWithQuotes() : void" num="110" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWritePropertyWithEmptyStringName() : void" num="120" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReadPropertyWithEmptyStringName() : void" num="127" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/JsonParserTest.java" name="JsonParserTest.java">
            <metrics coveredelements="46" coveredconditionals="0" complexity="7" loc="97" coveredmethods="7" methods="7" elements="46" classes="1" ncloc="64" statements="39" conditionals="0" coveredstatements="39"/>
            <class name="JsonParserTest">
               <metrics coveredelements="46" complexity="7" methods="7" testruns="6" statements="39" coveredconditionals="0" coveredmethods="7" elements="46" testfailures="0" testduration="0.027999999999999997" conditionals="0" coveredstatements="39" testpasses="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="35" count="6" type="method"/>
            <line num="37" count="6" type="stmt"/>
            <line num="38" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParseString() : void" num="41" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParseEmptyString() : void" num="49" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParseEmptyWhitespaceInput() : void" num="55" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParseMixedArray() : void" num="60" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParseReader() : void" num="71" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReadWriteTwoObjects() : void" num="79" testsuccess="true" count="1" testduration="0.019" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/JsonPrimitiveTest.java" name="JsonPrimitiveTest.java">
            <metrics coveredelements="105" coveredconditionals="0" complexity="20" loc="182" coveredmethods="19" methods="19" elements="106" classes="1" ncloc="132" statements="87" conditionals="0" coveredstatements="86"/>
            <class name="JsonPrimitiveTest">
               <metrics coveredelements="105" complexity="20" methods="19" testruns="19" statements="87" coveredconditionals="0" coveredmethods="19" elements="106" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="86" testpasses="19"/>
            </class>
            <line complexity="1" visibility="public" signature="testBoolean() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParsingStringAsBoolean() : void" num="38" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParsingStringAsNumber() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringsAndChar() : void" num="59" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testExponential() : void" num="71" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testByteEqualsShort() : void" num="84" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testByteEqualsInteger() : void" num="91" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testByteEqualsLong() : void" num="98" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testByteEqualsBigInteger() : void" num="105" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testShortEqualsInteger() : void" num="112" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testShortEqualsLong() : void" num="119" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testShortEqualsBigInteger() : void" num="126" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntegerEqualsLong() : void" num="133" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntegerEqualsBigInteger() : void" num="140" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLongEqualsBigInteger() : void" num="147" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFloatEqualsDouble() : void" num="154" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFloatEqualsBigDecimal() : void" num="161" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoubleEqualsBigDecimal() : void" num="168" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testValidJsonOnToString() : void" num="175" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/JsonStreamParserTest.java" name="JsonStreamParserTest.java">
            <metrics coveredelements="29" coveredconditionals="0" complexity="6" loc="74" coveredmethods="5" methods="5" elements="30" classes="1" ncloc="44" statements="25" conditionals="0" coveredstatements="24"/>
            <class name="JsonStreamParserTest">
               <metrics coveredelements="29" complexity="6" methods="5" testruns="4" statements="25" coveredconditionals="0" coveredmethods="5" elements="30" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="24" testpasses="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="30" count="4" type="method"/>
            <line num="32" count="4" type="stmt"/>
            <line num="33" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParseTwoStrings() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNoSideEffectForHasNext() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCallingNextBeyondAvailableInput() : void" num="65" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java" name="LongSerializationPolicyTest.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="2" loc="48" coveredmethods="2" methods="2" elements="14" classes="1" ncloc="20" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="LongSerializationPolicyTest">
               <metrics coveredelements="14" complexity="2" methods="2" testruns="2" statements="12" coveredconditionals="0" coveredmethods="2" elements="14" testfailures="0" testduration="0.03" conditionals="0" coveredstatements="12" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testDefaultLongSerialization() : void" num="29" testsuccess="true" count="1" testduration="0.03" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringLongSerialization() : void" num="39" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/LowerCamelCaseSeparatorNamingPolicyTest.java" name="LowerCamelCaseSeparatorNamingPolicyTest.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="5" loc="59" coveredmethods="5" methods="5" elements="16" classes="1" ncloc="29" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="LowerCamelCaseSeparatorNamingPolicyTest">
               <metrics coveredelements="16" complexity="5" methods="5" testruns="4" statements="11" coveredconditionals="0" coveredmethods="5" elements="16" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="11" testpasses="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="33" count="4" type="method"/>
            <line num="35" count="4" type="stmt"/>
            <line num="36" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNameBeginsWithLowerCase() : void" num="39" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNameBeginsWithUpperCase() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExceptionPossiblyIncorrectSeparation() : void" num="49" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUsingDashesInstead() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/LowerCaseNamingPolicyTest.java" name="LowerCaseNamingPolicyTest.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="4" loc="52" coveredmethods="4" methods="4" elements="9" classes="1" ncloc="23" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="LowerCaseNamingPolicyTest">
               <metrics coveredelements="9" complexity="4" methods="4" testruns="3" statements="5" coveredconditionals="0" coveredmethods="4" elements="9" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="5" testpasses="3"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="35" count="3" type="method"/>
            <line num="37" count="3" type="stmt"/>
            <line num="38" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAllLowerCase() : void" num="41" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAllUpperCase() : void" num="45" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMixedCase() : void" num="49" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="50" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/LruCacheTest.java" name="LruCacheTest.java">
            <metrics coveredelements="41" coveredconditionals="0" complexity="3" loc="82" coveredmethods="3" methods="3" elements="41" classes="1" ncloc="48" statements="38" conditionals="0" coveredstatements="38"/>
            <class name="LruCacheTest">
               <metrics coveredelements="41" complexity="3" methods="3" testruns="3" statements="38" coveredconditionals="0" coveredmethods="3" elements="41" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="38" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="testCacheHitAndMiss() : void" num="29" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCacheKeyOverwrite() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCacheEviction() : void" num="55" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/MemoryRefStackTest.java" name="MemoryRefStackTest.java">
            <metrics coveredelements="26" coveredconditionals="0" complexity="9" loc="85" coveredmethods="6" methods="7" elements="28" classes="2" ncloc="50" statements="21" conditionals="0" coveredstatements="20"/>
            <class name="MemoryRefStackTest">
               <metrics coveredelements="24" complexity="7" methods="5" testruns="4" statements="19" coveredconditionals="0" coveredmethods="5" elements="24" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="19" testpasses="4"/>
            </class>
            <class name="MemoryRefStackTest.MockObject">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="33" count="4" type="method"/>
            <line num="35" count="4" type="stmt"/>
            <line num="36" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="testPeekEmptyStack() : void" num="39" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPushPeekAndPop() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testPopTooMany() : void" num="53" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContains() : void" num="63" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="75" count="1" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/MixedStreamTest.java" name="MixedStreamTest.java">
            <metrics coveredelements="108" coveredconditionals="0" complexity="24" loc="239" coveredmethods="15" methods="16" elements="118" classes="2" ncloc="190" statements="102" conditionals="0" coveredstatements="93"/>
            <class name="MixedStreamTest">
               <metrics coveredelements="102" complexity="20" methods="12" testruns="12" statements="98" coveredconditionals="0" coveredmethods="12" elements="110" testfailures="0" testduration="0.007" conditionals="0" coveredstatements="90" testpasses="12"/>
            </class>
            <class name="MixedStreamTest.Car">
               <metrics coveredelements="6" coveredconditionals="0" complexity="4" coveredmethods="3" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="testWriteMixedStreamed() : void" num="50" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReadMixedStreamed() : void" num="65" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReaderDoesNotMutateState() : void" num="77" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWriteDoesNotMutateState() : void" num="91" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testReadInvalidState() : void" num="109" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testReadClosed() : void" num="121" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testWriteInvalidState() : void" num="132" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testWriteClosed() : void" num="143" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testWriteNulls() : void" num="156" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testReadNulls() : void" num="169" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWriteHtmlSafe() : void" num="183" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testWriteLenient() : void" num="199" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="200" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="Car(String,int)" num="221" count="3" type="method"/>
            <line num="222" count="3" type="stmt"/>
            <line num="223" count="3" type="stmt"/>
            <line complexity="1" visibility="package" signature="Car()" num="227" count="5" type="method"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="229" count="0" type="method"/>
            <line num="230" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="233" count="3" type="method"/>
            <line num="234" count="3" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/MockExclusionStrategy.java" name="MockExclusionStrategy.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="3" loc="42" coveredmethods="3" methods="3" elements="7" classes="1" ncloc="15" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="MockExclusionStrategy">
               <metrics coveredelements="7" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="MockExclusionStrategy(boolean,boolean)" num="30" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
            <line num="32" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldSkipField(FieldAttributes) : boolean" num="35" count="3" type="method"/>
            <line num="36" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldSkipClass(Class&lt;?&gt;) : boolean" num="39" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/ModifyFirstLetterNamingPolicyTest.java" name="ModifyFirstLetterNamingPolicyTest.java">
            <metrics coveredelements="33" coveredconditionals="0" complexity="9" loc="87" coveredmethods="8" methods="8" elements="34" classes="1" ncloc="54" statements="26" conditionals="0" coveredstatements="25"/>
            <class name="ModifyFirstLetterNamingPolicyTest">
               <metrics coveredelements="33" complexity="9" methods="8" testruns="8" statements="26" coveredconditionals="0" coveredmethods="8" elements="34" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="25" testpasses="8"/>
            </class>
            <line complexity="2" visibility="public" signature="testInvalidConstruction() : void" num="28" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLowerCaseFirstLetter() : void" num="35" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUpperCaseFirstLetter() : void" num="42" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSingleCharacterField() : void" num="49" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFieldStartsWithUnderscore() : void" num="56" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFieldStartsWithUnderscoreFollowedBySingleLetter() : void" num="63" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFieldHasSingleNonLetter() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFieldHasNoLetters() : void" num="79" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java" name="NullExclusionStrategyTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="3" loc="43" coveredmethods="3" methods="3" elements="7" classes="1" ncloc="17" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="NullExclusionStrategyTest">
               <metrics coveredelements="7" complexity="3" methods="3" testruns="2" statements="4" coveredconditionals="0" coveredmethods="3" elements="7" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="4" testpasses="2"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
            <line num="32" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNeverSkipsClass() : void" num="35" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNeverSkipsField() : void" num="39" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="40" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/ParameterizedTypeHandlerMapTest.java" name="ParameterizedTypeHandlerMapTest.java">
            <metrics coveredelements="61" coveredconditionals="0" complexity="13" loc="129" coveredmethods="11" methods="11" elements="63" classes="2" ncloc="90" statements="52" conditionals="0" coveredstatements="50"/>
            <class name="ParameterizedTypeHandlerMapTest">
               <metrics coveredelements="61" complexity="13" methods="11" testruns="10" statements="52" coveredconditionals="0" coveredmethods="11" elements="63" testfailures="0" testduration="0.010000000000000002" conditionals="0" coveredstatements="50" testpasses="10"/>
            </class>
            <class name="ParameterizedTypeHandlerMapTest.SubOfSub">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="36" count="10" type="method"/>
            <line num="38" count="10" type="stmt"/>
            <line num="39" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullMap() : void" num="42" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHasGenericButNotSpecific() : void" num="48" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHasSpecificType() : void" num="60" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTypeOverridding() : void" num="72" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMakeUnmodifiable() : void" num="82" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTypeHierarchy() : void" num="90" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTypeHierarchyMultipleHandlers() : void" num="96" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTypeHierarchyRegisterIfAbsent() : void" num="103" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReplaceExistingTypeHierarchyHandler() : void" num="112" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHidingExistingTypeHierarchyHandlerIsDisallowed() : void" num="119" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/ParameterizedTypeImplTest.java" name="ParameterizedTypeImplTest.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="3" loc="57" coveredmethods="3" methods="3" elements="14" classes="1" ncloc="27" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="ParameterizedTypeImplTest">
               <metrics coveredelements="14" complexity="3" methods="3" testruns="2" statements="11" coveredconditionals="0" coveredmethods="3" elements="14" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="11" testpasses="2"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="37" count="2" type="method"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOurTypeFunctionality() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNotEquals() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java" name="ParamterizedTypeFixtures.java">
            <metrics coveredelements="68" coveredconditionals="14" complexity="28" loc="162" coveredmethods="10" methods="11" elements="92" classes="4" ncloc="118" statements="57" conditionals="24" coveredstatements="44"/>
            <class name="ParamterizedTypeFixtures">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ParamterizedTypeFixtures.MyParameterizedType">
               <metrics coveredelements="32" coveredconditionals="8" complexity="20" coveredmethods="5" methods="6" elements="56" statements="32" conditionals="18" coveredstatements="19"/>
            </class>
            <class name="ParamterizedTypeFixtures.MyParameterizedTypeInstanceCreator">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="ParamterizedTypeFixtures.MyParameterizedTypeAdapter">
               <metrics coveredelements="32" coveredconditionals="6" complexity="6" coveredmethods="3" methods="3" elements="32" statements="23" conditionals="6" coveredstatements="23"/>
            </class>
            <line complexity="1" visibility="public" signature="MyParameterizedType(T)" num="36" count="12" type="method"/>
            <line num="37" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : T" num="39" count="2" type="method"/>
            <line num="40" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpectedJson() : String" num="43" count="4" type="method"/>
            <line num="44" count="4" type="stmt"/>
            <line num="45" count="4" type="stmt"/>
            <line complexity="8" visibility="private" signature="getExpectedJson(Object) : String" num="48" count="4" type="method"/>
            <line num="49" count="4" type="stmt"/>
            <line num="50" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="50" type="cond"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="hashCode() : int" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line complexity="7" visibility="public" signature="equals(Object) : boolean" num="78" count="2" type="method"/>
            <line num="81" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="MyParameterizedTypeInstanceCreator(T)" num="113" count="4" type="method"/>
            <line num="114" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="createInstance(Type) : MyParameterizedType&lt;T&gt;" num="116" count="2" type="method"/>
            <line num="117" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="getExpectedJson(MyParameterizedType&lt;T&gt;) : String" num="123" count="4" type="method"/>
            <line num="125" count="4" type="stmt"/>
            <line num="126" count="4" type="stmt"/>
            <line num="127" count="4" type="stmt"/>
            <line num="128" count="4" type="stmt"/>
            <line num="129" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="129" type="cond"/>
            <line num="130" count="2" type="stmt"/>
            <line num="132" count="4" type="stmt"/>
            <line num="133" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="133" type="cond"/>
            <line num="134" count="2" type="stmt"/>
            <line num="136" count="4" type="stmt"/>
            <line num="137" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(MyParameterizedType&lt;T&gt;,Type,JsonSerializationContext) : JsonElement" num="140" count="2" type="method"/>
            <line num="142" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line num="144" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : MyParameterizedType&lt;T&gt;" num="148" count="2" type="method"/>
            <line num="151" count="2" type="stmt"/>
            <line num="152" count="2" type="stmt"/>
            <line num="153" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="155" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="155" type="cond"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="159" count="2" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/PrimitiveTypeAdapter.java" name="PrimitiveTypeAdapter.java">
            <metrics coveredelements="9" coveredconditionals="2" complexity="12" loc="75" coveredmethods="1" methods="1" elements="31" classes="1" ncloc="46" statements="22" conditionals="8" coveredstatements="6"/>
            <class name="PrimitiveTypeAdapter">
               <metrics coveredelements="9" coveredconditionals="2" complexity="12" coveredmethods="1" methods="1" elements="31" statements="22" conditionals="8" coveredstatements="6"/>
            </class>
            <line complexity="12" visibility="public" signature="adaptType(Object,Class&lt;T&gt;) : T" num="34" count="1" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="37" type="cond"/>
            <line num="38" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="38" type="cond"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="40" type="cond"/>
            <line num="41" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicyTest.java" name="SerializedNameAnnotationInterceptingNamingPolicyTest.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="3" loc="61" coveredmethods="3" methods="3" elements="12" classes="2" ncloc="30" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="SerializedNameAnnotationInterceptingNamingPolicyTest">
               <metrics coveredelements="12" complexity="3" methods="3" testruns="2" statements="9" coveredconditionals="0" coveredmethods="3" elements="12" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="9" testpasses="2"/>
            </class>
            <class name="SerializedNameAnnotationInterceptingNamingPolicyTest.SomeObject">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="33" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFieldWithAnnotation() : void" num="39" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFieldWithoutAnnotation() : void" num="48" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/TypeInfoArrayTest.java" name="TypeInfoArrayTest.java">
            <metrics coveredelements="61" coveredconditionals="0" complexity="10" loc="123" coveredmethods="10" methods="10" elements="61" classes="1" ncloc="81" statements="51" conditionals="0" coveredstatements="51"/>
            <class name="TypeInfoArrayTest">
               <metrics coveredelements="61" complexity="10" methods="10" testruns="10" statements="51" coveredconditionals="0" coveredmethods="10" elements="61" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="51" testpasses="10"/>
            </class>
            <line complexity="1" visibility="public" signature="testArray() : void" num="34" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayOfArrays() : void" num="41" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParameterizedArray() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParameterizedArrayOfArrays() : void" num="59" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNestedParameterizedArray() : void" num="69" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveArray() : void" num="79" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringArray() : void" num="87" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveArrayType() : void" num="95" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringArrayType() : void" num="102" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayAsParameterizedTypes() : void" num="109" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/TypeInfoFactoryTest.java" name="TypeInfoFactoryTest.java">
            <metrics coveredelements="134" coveredconditionals="0" complexity="18" loc="253" coveredmethods="18" methods="18" elements="134" classes="3" ncloc="186" statements="116" conditionals="0" coveredstatements="116"/>
            <class name="TypeInfoFactoryTest">
               <metrics coveredelements="134" complexity="18" methods="18" testruns="17" statements="116" coveredconditionals="0" coveredmethods="18" elements="134" testfailures="0" testduration="0.023000000000000003" conditionals="0" coveredstatements="116" testpasses="17"/>
            </class>
            <class name="TypeInfoFactoryTest.ObjectWithDifferentFields">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TypeInfoFactoryTest.ObjectWithDifferentFields.TestEnum">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="38" count="17" type="method"/>
            <line num="40" count="17" type="stmt"/>
            <line num="41" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSimpleField() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEnumField() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParameterizedTypeField() : void" num="64" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNestedParameterizedTypeField() : void" num="75" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGenericArrayTypeField() : void" num="86" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTypeVariableField() : void" num="97" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTypeVariableArrayField() : void" num="107" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMutliDimensionalTypeVariableArrayField() : void" num="117" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParameterizedTypeVariableField() : void" num="127" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNestedParameterizedTypeVariableField() : void" num="138" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParameterizedTypeVariableArrayField() : void" num="149" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWildcardField() : void" num="160" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayOfWildcardField() : void" num="171" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testListStringWildcardField() : void" num="182" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayOfListStringWildcardField() : void" num="193" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="194" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testListTypeVariableWildcardField() : void" num="204" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayOfListTypeVariableWildcardField() : void" num="215" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="216" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/TypeInfoMapTest.java" name="TypeInfoMapTest.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="6" loc="66" coveredmethods="4" methods="4" elements="19" classes="1" ncloc="34" statements="15" conditionals="0" coveredstatements="13"/>
            <class name="TypeInfoMapTest">
               <metrics coveredelements="17" complexity="6" methods="4" testruns="4" statements="15" coveredconditionals="0" coveredmethods="4" elements="19" testfailures="0" testduration="0.008" conditionals="0" coveredstatements="13" testpasses="4"/>
            </class>
            <line complexity="2" visibility="public" signature="testInvalidConstruction() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNonMapConstruction() : void" num="43" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBasicGetters() : void" num="51" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapImplementations() : void" num="59" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/TypeInfoTest.java" name="TypeInfoTest.java">
            <metrics coveredelements="50" coveredconditionals="0" complexity="10" loc="111" coveredmethods="9" methods="9" elements="51" classes="1" ncloc="69" statements="42" conditionals="0" coveredstatements="41"/>
            <class name="TypeInfoTest">
               <metrics coveredelements="50" complexity="10" methods="9" testruns="9" statements="42" coveredconditionals="0" coveredmethods="9" elements="51" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="41" testpasses="9"/>
            </class>
            <line complexity="1" visibility="public" signature="testPrimitive() : void" num="34" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveWrapper() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testString() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testObject() : void" num="59" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveType() : void" num="67" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testObjectType() : void" num="73" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParameterizedTypes() : void" num="80" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGenericizedGenericType() : void" num="89" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStrangeTypeParameters() : void" num="104" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/TypeUtilsTest.java" name="TypeUtilsTest.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="5" loc="57" coveredmethods="5" methods="5" elements="13" classes="1" ncloc="27" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="TypeUtilsTest">
               <metrics coveredelements="13" complexity="5" methods="5" testruns="5" statements="8" coveredconditionals="0" coveredmethods="5" elements="13" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="8" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="testGetActualTypeForFirstTypeVariable() : void" num="35" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIsArrayForNonArrayClasses() : void" num="39" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIsArrayForArrayClasses() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToRawClassForNonGenericClasses() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToRawClassForGenericClasses() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="55" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/UpperCamelCaseSeparatorNamingPolicyTest.java" name="UpperCamelCaseSeparatorNamingPolicyTest.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="6" loc="60" coveredmethods="6" methods="6" elements="13" classes="1" ncloc="30" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="UpperCamelCaseSeparatorNamingPolicyTest">
               <metrics coveredelements="13" complexity="6" methods="6" testruns="5" statements="7" coveredconditionals="0" coveredmethods="6" elements="13" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="7" testpasses="5"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="30" count="5" type="method"/>
            <line num="32" count="5" type="stmt"/>
            <line num="33" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAllLowerCase() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAllUpperCase() : void" num="41" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAllUpperCaseExceptFirst() : void" num="46" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAllUpperCaseStartingWithUnderscore() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMixedCase() : void" num="56" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="57" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/UpperCaseNamingPolicyTest.java" name="UpperCaseNamingPolicyTest.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="4" loc="53" coveredmethods="4" methods="4" elements="9" classes="1" ncloc="24" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="UpperCaseNamingPolicyTest">
               <metrics coveredelements="9" complexity="4" methods="4" testruns="3" statements="5" coveredconditionals="0" coveredmethods="4" elements="9" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="5" testpasses="3"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="36" count="3" type="method"/>
            <line num="38" count="3" type="stmt"/>
            <line num="39" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAllLowerCase() : void" num="42" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAllUpperCase() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMixedCase() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="51" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java" name="VersionExclusionStrategyTest.java">
            <metrics coveredelements="21" coveredconditionals="0" complexity="5" loc="74" coveredmethods="4" methods="4" elements="22" classes="2" ncloc="40" statements="18" conditionals="0" coveredstatements="17"/>
            <class name="VersionExclusionStrategyTest">
               <metrics coveredelements="21" complexity="5" methods="4" testruns="4" statements="18" coveredconditionals="0" coveredmethods="4" elements="22" testfailures="0" testduration="0.009000000000000001" conditionals="0" coveredstatements="17" testpasses="4"/>
            </class>
            <class name="VersionExclusionStrategyTest.MockObject">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="testDisallowNegativeValuesAndFailFast() : void" num="33" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClassAndFieldAreAtSameVersion() : void" num="40" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClassAndFieldAreBehindInVersion() : void" num="49" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClassAndFieldAreAheadInVersion() : void" num="58" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.google.gson.functional">
         <metrics coveredelements="3015" complexity="700" loc="6574" methods="585" classes="123" statements="2504" coveredconditionals="100" coveredmethods="557" elements="3239" ncloc="4884" files="33" conditionals="150" coveredstatements="2358"/>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/functional/ArrayTest.java" name="ArrayTest.java">
            <metrics coveredelements="138" coveredconditionals="6" complexity="29" loc="247" coveredmethods="23" methods="23" elements="141" classes="1" ncloc="189" statements="112" conditionals="6" coveredstatements="109"/>
            <class name="ArrayTest">
               <metrics coveredelements="138" complexity="29" methods="23" testruns="22" statements="112" coveredconditionals="6" coveredmethods="23" elements="141" testfailures="0" testduration="0.023000000000000007" conditionals="6" coveredstatements="109" testpasses="22"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="43" count="22" type="method"/>
            <line num="45" count="22" type="stmt"/>
            <line num="46" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTopLevelArrayOfIntsSerialization() : void" num="49" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTopLevelArrayOfIntsDeserialization() : void" num="54" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testInvalidArrayDeserialization() : void" num="60" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyArraySerialization() : void" num="69" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyArrayDeserialization() : void" num="74" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullsInArraySerialization() : void" num="85" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNullsInArrayDeserialization() : void" num="92" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="96" type="cond"/>
            <line num="97" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSingleNullInArraySerialization() : void" num="101" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSingleNullInArrayDeserialization() : void" num="108" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullsInArrayWithSerializeNullPropertySetSerialization() : void" num="113" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayOfStringsSerialization() : void" num="121" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayOfStringsDeserialization() : void" num="126" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSingleStringArraySerialization() : void" num="133" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSingleStringArrayDeserialization() : void" num="139" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testArrayOfCollectionSerialization() : void" num="149" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="156" type="cond"/>
            <line num="157" count="3" type="stmt"/>
            <line num="158" count="3" type="stmt"/>
            <line num="159" count="3" type="stmt"/>
            <line num="160" count="3" type="stmt"/>
            <line num="161" count="3" type="stmt"/>
            <line num="162" count="3" type="stmt"/>
            <line num="164" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="164" type="cond"/>
            <line num="165" count="2" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayOfCollectionDeserialization() : void" num="174" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayOfPrimitivesWithCustomTypeAdapter() : void" num="184" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayOfPrimitivesAsObjectsSerialization() : void" num="200" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayOfPrimitivesAsObjectsDeserialization() : void" num="208" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="209" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line num="214" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testArrayOfObjectsWithoutTypeInfoDeserialization() : void" num="217" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testArrayWithoutTypeInfoDeserialization() : void" num="226" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="227" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testObjectArrayWithNonPrimitivesSerialization() : void" num="235" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java" name="CircularReferenceTest.java">
            <metrics coveredelements="46" coveredconditionals="0" complexity="12" loc="131" coveredmethods="8" methods="8" elements="51" classes="4" ncloc="94" statements="43" conditionals="0" coveredstatements="38"/>
            <class name="CircularReferenceTest">
               <metrics coveredelements="46" complexity="12" methods="8" testruns="6" statements="43" coveredconditionals="0" coveredmethods="8" elements="51" testfailures="0" testduration="0.006" conditionals="0" coveredstatements="38" testpasses="6"/>
            </class>
            <class name="CircularReferenceTest.ContainsReferenceToSelfType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CircularReferenceTest.ClassWithSelfReference">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CircularReferenceTest.ClassWithSelfReferenceArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="41" count="6" type="method"/>
            <line num="43" count="6" type="stmt"/>
            <line num="44" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCircularSerialization() : void" num="47" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSelfReferenceSerialization() : void" num="60" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSelfReferenceArrayFieldSerialization() : void" num="70" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSelfReferenceCustomHandlerSerialization() : void" num="82" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(ClassWithSelfReference,Type,JsonSerializationContext) : JsonElement" num="86" count="1" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDirectedAcyclicGraphSerialization() : void" num="102" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDirectedAcyclicGraphDeserialization() : void" num="112" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/functional/CollectionTest.java" name="CollectionTest.java">
            <metrics coveredelements="202" coveredconditionals="11" complexity="40" loc="340" coveredmethods="30" methods="30" elements="213" classes="3" ncloc="275" statements="169" conditionals="14" coveredstatements="161"/>
            <class name="CollectionTest">
               <metrics coveredelements="192" complexity="35" methods="25" testruns="23" statements="164" coveredconditionals="11" coveredmethods="25" elements="203" testfailures="0" testduration="0.019000000000000003" conditionals="14" coveredstatements="156" testpasses="23"/>
            </class>
            <class name="CollectionTest.ObjectWithWildcardCollection">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="CollectionTest.Entry">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="48" count="23" type="method"/>
            <line num="50" count="23" type="stmt"/>
            <line num="51" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTopLevelCollectionOfIntegersSerialization() : void" num="54" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTopLevelCollectionOfIntegersDeserialization() : void" num="61" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="testTopLevelListOfIntegerCollectionsDeserialization() : void" num="69" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="74" type="cond"/>
            <line num="75" count="3" type="stmt"/>
            <line num="76" count="3" type="stmt"/>
            <line falsecount="3" truecount="9" num="76" type="cond"/>
            <line num="77" count="9" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="81" type="cond"/>
            <line num="82" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLinkedListSerialization() : void" num="86" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLinkedListDeserialization() : void" num="96" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testQueueSerialization() : void" num="104" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testQueueDeserialization() : void" num="114" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullsInListSerialization() : void" num="123" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNullsInListDeserialization() : void" num="134" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="142" type="cond"/>
            <line num="143" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCollectionOfObjectSerialization() : void" num="147" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCollectionOfObjectWithNullSerialization() : void" num="157" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCollectionOfStringsSerialization() : void" num="168" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCollectionOfBagOfPrimitivesSerialization() : void" num="175" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCollectionOfStringsDeserialization() : void" num="190" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="191" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRawCollectionOfIntegersSerialization() : void" num="199" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRawCollectionSerialization() : void" num="204" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="206" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testRawCollectionDeserializationNotAlllowed() : void" num="212" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="213" count="1" type="stmt"/>
            <line num="214" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testRawCollectionOfBagOfPrimitivesNotAllowed() : void" num="226" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line num="230" count="1" type="stmt"/>
            <line num="231" count="1" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWildcardPrimitiveCollectionSerilaization() : void" num="241" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="242" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWildcardPrimitiveCollectionDeserilaization() : void" num="251" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="252" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="254" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWildcardCollectionField() : void" num="260" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="261" count="1" type="stmt"/>
            <line num="262" count="1" type="stmt"/>
            <line num="263" count="1" type="stmt"/>
            <line num="264" count="1" type="stmt"/>
            <line num="265" count="1" type="stmt"/>
            <line num="267" count="1" type="stmt"/>
            <line num="268" count="1" type="stmt"/>
            <line num="269" count="1" type="stmt"/>
            <line num="270" count="1" type="stmt"/>
            <line num="272" count="1" type="stmt"/>
            <line num="273" count="1" type="stmt"/>
            <line num="274" count="1" type="stmt"/>
            <line num="275" count="1" type="stmt"/>
            <line num="276" count="1" type="stmt"/>
            <line complexity="4" visibility="private" signature="toIntArray(Collection) : int[]" num="279" count="4" type="method"/>
            <line num="281" count="4" type="stmt"/>
            <line num="282" count="4" type="stmt"/>
            <line num="283" count="4" type="stmt"/>
            <line falsecount="4" truecount="19" num="283" type="cond"/>
            <line num="284" count="19" type="stmt"/>
            <line num="285" count="19" type="stmt"/>
            <line falsecount="0" truecount="19" num="285" type="cond"/>
            <line num="286" count="19" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="287" type="cond"/>
            <line num="288" count="0" type="stmt"/>
            <line num="291" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="ObjectWithWildcardCollection()" num="298" count="1" type="method"/>
            <line num="300" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ObjectWithWildcardCollection(Collection&lt;? extends BagOfPrimitives&gt;)" num="303" count="2" type="method"/>
            <line num="304" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCollection() : Collection&lt;? extends BagOfPrimitives&gt;" num="307" count="1" type="method"/>
            <line num="308" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="Entry()" num="315" count="2" type="method"/>
            <line num="317" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="Entry(int)" num="319" count="4" type="method"/>
            <line num="320" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetSerialization() : void" num="323" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="324" count="1" type="stmt"/>
            <line num="325" count="1" type="stmt"/>
            <line num="326" count="1" type="stmt"/>
            <line num="327" count="1" type="stmt"/>
            <line num="328" count="1" type="stmt"/>
            <line num="329" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetDeserialization() : void" num="331" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="332" count="1" type="stmt"/>
            <line num="333" count="1" type="stmt"/>
            <line num="334" count="1" type="stmt"/>
            <line num="335" count="1" type="stmt"/>
            <line num="336" count="1" type="stmt"/>
            <line num="337" count="2" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java" name="ConcurrencyTest.java">
            <metrics coveredelements="61" coveredconditionals="12" complexity="17" loc="140" coveredmethods="9" methods="9" elements="63" classes="2" ncloc="91" statements="42" conditionals="12" coveredstatements="40"/>
            <class name="ConcurrencyTest">
               <metrics coveredelements="55" complexity="15" methods="7" testruns="4" statements="38" coveredconditionals="12" coveredmethods="7" elements="57" testfailures="0" testduration="0.037000000000000005" conditionals="12" coveredstatements="36" testpasses="4"/>
            </class>
            <class name="ConcurrencyTest.MyObject">
               <metrics coveredelements="6" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="36" count="4" type="method"/>
            <line num="38" count="4" type="stmt"/>
            <line num="39" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSingleThreadSerialization() : void" num="46" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="48" type="cond"/>
            <line num="49" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSingleThreadDeserialization() : void" num="57" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="58" type="cond"/>
            <line num="59" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMultiThreadSerialization() : void" num="67" testsuccess="true" count="1" testduration="0.018" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="72" type="cond"/>
            <line num="73" count="10" type="stmt"/>
            <line complexity="3" visibility="public" signature="run() : void" num="74" count="10" type="method"/>
            <line num="75" count="10" type="stmt"/>
            <line num="76" count="10" type="stmt"/>
            <line num="77" count="10" type="stmt"/>
            <line num="78" count="10" type="stmt"/>
            <line falsecount="10" truecount="98" num="78" type="cond"/>
            <line num="79" count="100" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="10" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMultiThreadDeserialization() : void" num="98" testsuccess="true" count="1" testduration="0.016" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="103" type="cond"/>
            <line num="104" count="10" type="stmt"/>
            <line complexity="3" visibility="public" signature="run() : void" num="105" count="10" type="method"/>
            <line num="106" count="10" type="stmt"/>
            <line num="107" count="10" type="stmt"/>
            <line num="108" count="10" type="stmt"/>
            <line falsecount="9" truecount="94" num="108" type="cond"/>
            <line num="109" count="95" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="9" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="MyObject()" num="130" count="119" type="method"/>
            <line num="131" count="119" type="stmt"/>
            <line complexity="1" visibility="public" signature="MyObject(String,String,int)" num="134" count="116" type="method"/>
            <line num="135" count="117" type="stmt"/>
            <line num="136" count="119" type="stmt"/>
            <line num="137" count="120" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/functional/CustomDeserializerTest.java" name="CustomDeserializerTest.java">
            <metrics coveredelements="82" coveredconditionals="0" complexity="26" loc="235" coveredmethods="25" methods="26" elements="84" classes="10" ncloc="180" statements="58" conditionals="0" coveredstatements="57"/>
            <class name="CustomDeserializerTest">
               <metrics coveredelements="64" complexity="17" methods="17" testruns="9" statements="47" coveredconditionals="0" coveredmethods="17" elements="64" testfailures="0" testduration="0.015000000000000003" conditionals="0" coveredstatements="47" testpasses="9"/>
            </class>
            <class name="CustomDeserializerTest.DataHolder">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="CustomDeserializerTest.DataHolderWrapper">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="CustomDeserializerTest.DataHolderDeserializer">
               <metrics coveredelements="4" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="CustomDeserializerTest.MyBase">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CustomDeserializerTest.SubTypes">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="CustomDeserializerTest.SubType1">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CustomDeserializerTest.SubType2">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CustomDeserializerTest.ClassWithLong">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CustomDeserializerTest.ClassWithBaseArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="45" count="9" type="method"/>
            <line num="47" count="9" type="stmt"/>
            <line num="48" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultConstructorNotCalledOnObject() : void" num="51" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultConstructorNotCalledOnField() : void" num="59" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="DataHolder()" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataHolder(String)" num="76" count="5" type="method"/>
            <line num="77" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getData() : String" num="80" count="2" type="method"/>
            <line num="81" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="DataHolderWrapper()" num="89" count="1" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataHolderWrapper(DataHolder)" num="94" count="2" type="method"/>
            <line num="95" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getWrappedData() : DataHolder" num="98" count="1" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : DataHolder" num="104" count="2" type="method"/>
            <line num="106" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJsonTypeFieldBasedDeserialization() : void" num="112" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : MyBase" num="115" count="1" type="method"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="SubTypes(Type)" num="133" count="2" type="method"/>
            <line num="134" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSubclass() : Type" num="136" count="1" type="method"/>
            <line num="137" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomDeserializerReturnsNullForTopLevelObject() : void" num="150" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="151" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Base" num="153" count="1" type="method"/>
            <line num="155" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomDeserializerReturnsNull() : void" num="163" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="164" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Base" num="166" count="1" type="method"/>
            <line num="168" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomDeserializerReturnsNullForTopLevelPrimitives() : void" num="176" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="177" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Long" num="179" count="1" type="method"/>
            <line num="181" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomDeserializerReturnsNullForPrimitiveFields() : void" num="188" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="189" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Long" num="191" count="1" type="method"/>
            <line num="193" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomDeserializerReturnsNullForArrayElements() : void" num="204" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="205" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Base" num="207" count="2" type="method"/>
            <line num="209" count="2" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line num="214" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomDeserializerReturnsNullForArrayElementsForArrayField() : void" num="218" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="219" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Base" num="221" count="2" type="method"/>
            <line num="223" count="2" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/functional/CustomSerializerTest.java" name="CustomSerializerTest.java">
            <metrics coveredelements="32" coveredconditionals="0" complexity="6" loc="102" coveredmethods="6" methods="6" elements="32" classes="1" ncloc="71" statements="26" conditionals="0" coveredstatements="26"/>
            <class name="CustomSerializerTest">
               <metrics coveredelements="32" complexity="6" methods="6" testruns="5" statements="26" coveredconditionals="0" coveredmethods="6" elements="32" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="26" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="testBaseClassSerializerInvokedForBaseClassFields() : void" num="45" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances() : void" num="56" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances() : void" num="67" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances() : void" num="81" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSerializerReturnsNull() : void" num="91" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Base,Type,JsonSerializationContext) : JsonElement" num="94" count="1" type="method"/>
            <line num="95" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java" name="CustomTypeAdaptersTest.java">
            <metrics coveredelements="202" coveredconditionals="6" complexity="54" loc="474" coveredmethods="37" methods="47" elements="243" classes="13" ncloc="390" statements="186" conditionals="10" coveredstatements="159"/>
            <class name="CustomTypeAdaptersTest">
               <metrics coveredelements="180" complexity="37" methods="32" testruns="18" statements="160" coveredconditionals="6" coveredmethods="29" elements="200" testfailures="0" testduration="0.015000000000000006" conditionals="8" coveredstatements="145" testpasses="18"/>
            </class>
            <class name="CustomTypeAdaptersTest.Base">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CustomTypeAdaptersTest.Derived">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CustomTypeAdaptersTest.Foo">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CustomTypeAdaptersTest.FooTypeAdapter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CustomTypeAdaptersTest.ClassWithWrapperLongField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CustomTypeAdaptersTest.ClassWithBooleanField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CustomTypeAdaptersTest.StringHolder">
               <metrics coveredelements="7" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="7" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <class name="CustomTypeAdaptersTest.StringHolderTypeAdapter">
               <metrics coveredelements="5" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="CustomTypeAdaptersTest.DataHolder">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="CustomTypeAdaptersTest.DataHolderWrapper">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="CustomTypeAdaptersTest.DataHolderSerializer">
               <metrics coveredelements="4" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="CustomTypeAdaptersTest.DataHolderDeserializer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="1" elements="8" statements="5" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="50" count="18" type="method"/>
            <line num="52" count="18" type="stmt"/>
            <line num="53" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomSerializers() : void" num="56" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(ClassWithCustomTypeConverter,Type,JsonSerializationContext) : JsonElement" num="59" count="1" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomDeserializers() : void" num="71" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : ClassWithCustomTypeConverter" num="74" count="1" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="disable_testCustomSerializersOfSelf() : void" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="disable_testCustomDeserializersOfSelf() : void" num="97" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomNestedSerializers() : void" num="108" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="109" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(BagOfPrimitives,Type,JsonSerializationContext) : JsonElement" num="111" count="1" type="method"/>
            <line num="113" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomNestedDeserializers() : void" num="120" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="121" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : BagOfPrimitives" num="123" count="1" type="method"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomTypeAdapterDoesNotAppliesToSubClasses() : void" num="134" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="135" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Base,Type,JsonSerializationContext) : JsonElement" num="136" count="1" type="method"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass() : void" num="150" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="151" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Base,Type,JsonSerializationContext) : JsonElement" num="152" count="2" type="method"/>
            <line num="153" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="155" count="2" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="createGsonObjectWithFooTypeAdapter() : Gson" num="177" count="0" type="method"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Foo()" num="185" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Foo(int,long)" num="189" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Foo" num="196" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Foo,Type,JsonSerializationContext) : JsonElement" num="201" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomSerializerForLong() : void" num="206" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Long,Type,JsonSerializationContext) : JsonElement" num="210" count="1" type="method"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomDeserializerForLong() : void" num="227" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line num="230" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Long" num="231" count="1" type="method"/>
            <line num="233" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="234" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="238" type="cond"/>
            <line num="241" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomByteArraySerializer() : void" num="261" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="262" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(byte[],Type,JsonSerializationContext) : JsonElement" num="263" count="1" type="method"/>
            <line num="264" count="1" type="stmt"/>
            <line num="265" count="1" type="stmt"/>
            <line num="266" count="10" type="stmt"/>
            <line num="268" count="1" type="stmt"/>
            <line num="271" count="1" type="stmt"/>
            <line num="272" count="1" type="stmt"/>
            <line num="273" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCustomByteArrayDeserializerAndInstanceCreator() : void" num="276" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="277" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : byte[]" num="279" count="1" type="method"/>
            <line num="281" count="1" type="stmt"/>
            <line num="282" count="1" type="stmt"/>
            <line num="283" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="283" type="cond"/>
            <line num="284" count="10" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line num="289" count="1" type="stmt"/>
            <line num="290" count="1" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line num="292" count="1" type="stmt"/>
            <line num="293" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="293" type="cond"/>
            <line num="294" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="StringHolder(String)" num="302" count="2" type="method"/>
            <line num="303" count="2" type="stmt"/>
            <line num="304" count="2" type="stmt"/>
            <line num="305" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="StringHolder(String,String)" num="307" count="4" type="method"/>
            <line num="308" count="4" type="stmt"/>
            <line num="309" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="createInstance(Type) : StringHolder" num="316" count="0" type="method"/>
            <line num="318" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : StringHolder" num="321" count="2" type="method"/>
            <line num="323" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(StringHolder,Type,JsonSerializationContext) : JsonElement" num="326" count="4" type="method"/>
            <line num="328" count="4" type="stmt"/>
            <line num="329" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomAdapterInvokedForCollectionElementSerializationWithType() : void" num="334" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="335" count="1" type="stmt"/>
            <line num="338" count="1" type="stmt"/>
            <line num="339" count="1" type="stmt"/>
            <line num="340" count="1" type="stmt"/>
            <line num="341" count="1" type="stmt"/>
            <line num="342" count="1" type="stmt"/>
            <line num="343" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomAdapterInvokedForCollectionElementSerialization() : void" num="347" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="348" count="1" type="stmt"/>
            <line num="351" count="1" type="stmt"/>
            <line num="352" count="1" type="stmt"/>
            <line num="353" count="1" type="stmt"/>
            <line num="354" count="1" type="stmt"/>
            <line num="355" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomAdapterInvokedForCollectionElementDeserialization() : void" num="359" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="360" count="1" type="stmt"/>
            <line num="363" count="1" type="stmt"/>
            <line num="364" count="1" type="stmt"/>
            <line num="365" count="1" type="stmt"/>
            <line num="366" count="1" type="stmt"/>
            <line num="367" count="1" type="stmt"/>
            <line num="368" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomAdapterInvokedForMapElementSerializationWithType() : void" num="372" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="373" count="1" type="stmt"/>
            <line num="376" count="1" type="stmt"/>
            <line num="377" count="1" type="stmt"/>
            <line num="378" count="1" type="stmt"/>
            <line num="379" count="1" type="stmt"/>
            <line num="380" count="1" type="stmt"/>
            <line num="381" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomAdapterInvokedForMapElementSerialization() : void" num="385" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="386" count="1" type="stmt"/>
            <line num="389" count="1" type="stmt"/>
            <line num="390" count="1" type="stmt"/>
            <line num="391" count="1" type="stmt"/>
            <line num="392" count="1" type="stmt"/>
            <line num="393" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomAdapterInvokedForMapElementDeserialization() : void" num="397" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="398" count="1" type="stmt"/>
            <line num="401" count="1" type="stmt"/>
            <line num="402" count="1" type="stmt"/>
            <line num="403" count="1" type="stmt"/>
            <line num="404" count="1" type="stmt"/>
            <line num="405" count="1" type="stmt"/>
            <line num="406" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEnsureCustomSerializerNotInvokedForNullValues() : void" num="409" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="410" count="1" type="stmt"/>
            <line num="413" count="1" type="stmt"/>
            <line num="414" count="1" type="stmt"/>
            <line num="415" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEnsureCustomDeserializerNotInvokedForNullValues() : void" num="418" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="419" count="1" type="stmt"/>
            <line num="422" count="1" type="stmt"/>
            <line num="423" count="1" type="stmt"/>
            <line num="424" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="DataHolder()" num="431" count="0" type="method"/>
            <line num="433" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataHolder(String)" num="436" count="1" type="method"/>
            <line num="437" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="DataHolderWrapper()" num="445" count="1" type="method"/>
            <line num="447" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataHolderWrapper(DataHolder)" num="450" count="2" type="method"/>
            <line num="451" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(DataHolder,Type,JsonSerializationContext) : JsonElement" num="456" count="1" type="method"/>
            <line num="457" count="1" type="stmt"/>
            <line num="458" count="1" type="stmt"/>
            <line num="459" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : DataHolder" num="464" count="0" type="method"/>
            <line num="466" count="0" type="stmt"/>
            <line num="467" count="0" type="stmt"/>
            <line num="468" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="468" type="cond"/>
            <line num="469" count="0" type="stmt"/>
            <line num="471" count="0" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java" name="DefaultTypeAdaptersTest.java">
            <metrics coveredelements="201" coveredconditionals="0" complexity="53" loc="432" coveredmethods="41" methods="52" elements="247" classes="4" ncloc="351" statements="195" conditionals="0" coveredstatements="160"/>
            <class name="DefaultTypeAdaptersTest">
               <metrics coveredelements="191" complexity="47" methods="46" testruns="41" statements="191" coveredconditionals="0" coveredmethods="35" elements="237" testfailures="8" testduration="0.02600000000000001" conditionals="0" coveredstatements="156" testpasses="33"/>
            </class>
            <class name="DefaultTypeAdaptersTest.ClassWithUrlField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="DefaultTypeAdaptersTest.ClassWithBigDecimal">
               <metrics coveredelements="5" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="5" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="DefaultTypeAdaptersTest.ClassWithBigInteger">
               <metrics coveredelements="5" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="5" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="59" count="41" type="method"/>
            <line num="61" count="41" type="stmt"/>
            <line num="62" count="41" type="stmt"/>
            <line num="63" count="41" type="stmt"/>
            <line num="64" count="41" type="stmt"/>
            <line complexity="1" visibility="protected" signature="tearDown() : void" num="67" count="41" type="method"/>
            <line num="69" count="41" type="stmt"/>
            <line num="70" count="41" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUrlSerialization() : void" num="73" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUrlDeserialization() : void" num="79" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUrlNullSerialization() : void" num="89" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUrlNullDeserialization() : void" num="94" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUriSerialization() : void" num="104" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUriDeserialization() : void" num="110" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUuidSerialization() : void" num="117" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUuidDeserialization() : void" num="123" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLocaleSerializationWithLanguage() : void" num="130" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLocaleDeserializationWithLanguage() : void" num="135" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLocaleSerializationWithLanguageCountry() : void" num="141" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLocaleDeserializationWithLanguageCountry() : void" num="146" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLocaleSerializationWithLanguageCountryVariant() : void" num="152" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLocaleDeserializationWithLanguageCountryVariant() : void" num="158" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBigDecimalFieldSerialization() : void" num="166" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBigDecimalFieldDeserialization() : void" num="173" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBadValueForBigDecimalDeserialization() : void" num="180" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBigIntegerFieldSerialization() : void" num="187" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBigIntegerFieldDeserialization() : void" num="193" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="194" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetSerialization() : void" num="200" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultDateSerialization() : void" num="211" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultDateDeserialization() : void" num="217" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertEqualsDate(Date,int,int,int) : void" num="226" count="0" type="method"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertEqualsTime(Date,int,int,int) : void" num="233" count="0" type="method"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultJavaSqlDateSerialization() : void" num="240" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="241" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultJavaSqlDateDeserialization() : void" num="246" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultJavaSqlTimestampSerialization() : void" num="252" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultJavaSqlTimestampDeserialization() : void" num="258" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultJavaSqlTimeSerialization() : void" num="265" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultJavaSqlTimeDeserialization() : void" num="271" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultDateSerializationUsingBuilder() : void" num="277" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultDateDeserializationUsingBuilder() : void" num="284" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="285" count="1" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line num="287" count="1" type="stmt"/>
            <line num="288" count="1" type="stmt"/>
            <line num="289" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultCalendarSerialization() : void" num="292" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="293" count="1" type="stmt"/>
            <line num="294" count="1" type="stmt"/>
            <line num="295" count="1" type="stmt"/>
            <line num="296" count="1" type="stmt"/>
            <line num="297" count="1" type="stmt"/>
            <line num="298" count="1" type="stmt"/>
            <line num="299" count="1" type="stmt"/>
            <line num="300" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultCalendarDeserialization() : void" num="303" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="304" count="1" type="stmt"/>
            <line num="305" count="1" type="stmt"/>
            <line num="306" count="1" type="stmt"/>
            <line num="307" count="1" type="stmt"/>
            <line num="308" count="1" type="stmt"/>
            <line num="309" count="1" type="stmt"/>
            <line num="310" count="1" type="stmt"/>
            <line num="311" count="1" type="stmt"/>
            <line num="312" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultGregorianCalendarSerialization() : void" num="315" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="316" count="1" type="stmt"/>
            <line num="317" count="1" type="stmt"/>
            <line num="318" count="1" type="stmt"/>
            <line num="319" count="1" type="stmt"/>
            <line num="320" count="1" type="stmt"/>
            <line num="321" count="1" type="stmt"/>
            <line num="322" count="1" type="stmt"/>
            <line num="323" count="1" type="stmt"/>
            <line num="324" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultGregorianCalendarDeserialization() : void" num="327" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="328" count="1" type="stmt"/>
            <line num="329" count="1" type="stmt"/>
            <line num="330" count="1" type="stmt"/>
            <line num="331" count="1" type="stmt"/>
            <line num="332" count="1" type="stmt"/>
            <line num="333" count="1" type="stmt"/>
            <line num="334" count="1" type="stmt"/>
            <line num="335" count="1" type="stmt"/>
            <line num="336" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDateSerializationWithPattern() : void" num="339" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="340" count="1" type="stmt"/>
            <line num="341" count="1" type="stmt"/>
            <line num="342" count="1" type="stmt"/>
            <line num="343" count="1" type="stmt"/>
            <line num="344" count="1" type="stmt"/>
            <line num="345" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDateDeserializationWithPattern() : void" num="348" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="350" count="1" type="stmt"/>
            <line num="351" count="1" type="stmt"/>
            <line num="352" count="1" type="stmt"/>
            <line num="353" count="1" type="stmt"/>
            <line num="354" count="1" type="stmt"/>
            <line num="355" count="1" type="stmt"/>
            <line num="356" count="1" type="stmt"/>
            <line num="357" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDateSerializationWithPatternNotOverridenByTypeAdapter() : void" num="360" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="361" count="1" type="stmt"/>
            <line num="362" count="1" type="stmt"/>
            <line num="363" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Date" num="366" count="0" type="method"/>
            <line num="368" count="0" type="stmt"/>
            <line num="373" count="1" type="stmt"/>
            <line num="374" count="1" type="stmt"/>
            <line num="375" count="1" type="stmt"/>
            <line num="376" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="ClassWithBigDecimal()" num="382" count="2" type="method"/>
            <line complexity="1" visibility="package" signature="ClassWithBigDecimal(String)" num="384" count="2" type="method"/>
            <line num="385" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="getExpectedJson() : String" num="387" count="1" type="method"/>
            <line num="388" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="ClassWithBigInteger()" num="395" count="1" type="method"/>
            <line complexity="1" visibility="package" signature="ClassWithBigInteger(String)" num="397" count="2" type="method"/>
            <line num="398" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="getExpectedJson() : String" num="400" count="2" type="method"/>
            <line num="401" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPropertiesSerialization() : void" num="405" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="406" count="1" type="stmt"/>
            <line num="407" count="1" type="stmt"/>
            <line num="408" count="1" type="stmt"/>
            <line num="409" count="1" type="stmt"/>
            <line num="410" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPropertiesDeserialization() : void" num="413" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="414" count="1" type="stmt"/>
            <line num="415" count="1" type="stmt"/>
            <line num="416" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTreeSetSerialization() : void" num="419" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="420" count="1" type="stmt"/>
            <line num="421" count="1" type="stmt"/>
            <line num="422" count="1" type="stmt"/>
            <line num="423" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTreeSetDeserialization() : void" num="426" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="427" count="1" type="stmt"/>
            <line num="428" count="1" type="stmt"/>
            <line num="429" count="1" type="stmt"/>
            <line num="430" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/functional/EnumTest.java" name="EnumTest.java">
            <metrics coveredelements="47" coveredconditionals="0" complexity="14" loc="142" coveredmethods="11" methods="14" elements="53" classes="4" ncloc="98" statements="39" conditionals="0" coveredstatements="36"/>
            <class name="EnumTest">
               <metrics coveredelements="43" complexity="9" methods="9" testruns="8" statements="34" coveredconditionals="0" coveredmethods="9" elements="43" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="34" testpasses="8"/>
            </class>
            <class name="EnumTest.MyEnum">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="EnumTest.ClassWithEnumFields">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="EnumTest.Roshambo">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="41" count="8" type="method"/>
            <line num="43" count="8" type="stmt"/>
            <line num="44" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTopLevelEnumSerialization() : void" num="47" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTopLevelEnumDeserialization() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTopLevelEnumInASingleElementArrayDeserialization() : void" num="57" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCollectionOfEnumsSerialization() : void" num="63" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCollectionOfEnumsDeserialization() : void" num="75" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClassWithEnumFieldSerialization() : void" num="83" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClassWithEnumFieldDeserialization() : void" num="88" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpectedJson() : String" num="98" count="2" type="method"/>
            <line num="99" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpectedJson() : String" num="106" count="1" type="method"/>
            <line num="107" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEnumSubclass() : void" num="114" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="defeats() : Roshambo" num="125" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="defeats() : Roshambo" num="130" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="defeats() : Roshambo" num="135" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/functional/EscapingTest.java" name="EscapingTest.java">
            <metrics coveredelements="35" coveredconditionals="0" complexity="5" loc="84" coveredmethods="5" methods="5" elements="35" classes="1" ncloc="52" statements="30" conditionals="0" coveredstatements="30"/>
            <class name="EscapingTest">
               <metrics coveredelements="35" complexity="5" methods="5" testruns="4" statements="30" coveredconditionals="0" coveredmethods="5" elements="35" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="30" testpasses="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="35" count="4" type="method"/>
            <line num="37" count="4" type="stmt"/>
            <line num="38" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEscapingQuotesInStringArray() : void" num="41" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEscapeAllHtmlCharacters() : void" num="49" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEscapingObjectFields() : void" num="61" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsonAcceptsEscapedAndNonEscapedJsonDeserialization() : void" num="72" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java" name="ExclusionStrategyFunctionalTest.java">
            <metrics coveredelements="29" coveredconditionals="0" complexity="7" loc="112" coveredmethods="7" methods="7" elements="29" classes="4" ncloc="71" statements="22" conditionals="0" coveredstatements="22"/>
            <class name="ExclusionStrategyFunctionalTest">
               <metrics coveredelements="18" complexity="3" methods="3" testruns="2" statements="15" coveredconditionals="0" coveredmethods="3" elements="18" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="15" testpasses="2"/>
            </class>
            <class name="ExclusionStrategyFunctionalTest.Foo">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ExclusionStrategyFunctionalTest.SampleObjectForTest">
               <metrics coveredelements="5" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="5" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="ExclusionStrategyFunctionalTest.MyExclusionStrategy">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="44" count="2" type="method"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExclusionStrategySerialization() : void" num="54" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExclusionStrategyDeserialization() : void" num="61" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="SampleObjectForTest()" num="89" count="3" type="method"/>
            <line num="90" count="3" type="stmt"/>
            <line num="91" count="3" type="stmt"/>
            <line num="92" count="3" type="stmt"/>
            <line num="93" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="MyExclusionStrategy(Class&lt;?&gt;)" num="100" count="2" type="method"/>
            <line num="101" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldSkipClass(Class&lt;?&gt;) : boolean" num="104" count="9" type="method"/>
            <line num="105" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldSkipField(FieldAttributes) : boolean" num="108" count="28" type="method"/>
            <line num="109" count="28" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/functional/ExposeFieldsTest.java" name="ExposeFieldsTest.java">
            <metrics coveredelements="67" coveredconditionals="2" complexity="17" loc="181" coveredmethods="16" methods="16" elements="67" classes="7" ncloc="123" statements="49" conditionals="2" coveredstatements="49"/>
            <class name="ExposeFieldsTest">
               <metrics coveredelements="42" complexity="9" methods="9" testruns="8" statements="33" coveredconditionals="0" coveredmethods="9" elements="42" testfailures="0" testduration="0.007" conditionals="0" coveredstatements="33" testpasses="8"/>
            </class>
            <class name="ExposeFieldsTest.ClassWithExposedFields">
               <metrics coveredelements="19" coveredconditionals="2" complexity="5" coveredmethods="4" methods="4" elements="19" statements="13" conditionals="2" coveredstatements="13"/>
            </class>
            <class name="ExposeFieldsTest.ClassWithNoExposedFields">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ExposeFieldsTest.SomeInterface">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ExposeFieldsTest.SomeObject">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ExposeFieldsTest.SomeInterfaceInstanceCreator">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="ExposeFieldsTest.ClassWithInterfaceField">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="37" count="8" type="method"/>
            <line num="39" count="8" type="stmt"/>
            <line num="40" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullExposeFieldSerialization() : void" num="46" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayWithOneNullExposeFieldObjectSerialization() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExposeAnnotationSerialization() : void" num="69" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExposeAnnotationDeserialization() : void" num="74" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNoExposedFieldSerialization() : void" num="83" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNoExposedFieldDeserialization() : void" num="90" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExposedInterfaceFieldSerialization() : void" num="98" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExposedInterfaceFieldDeserialization() : void" num="106" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="ClassWithExposedFields()" num="122" count="1" type="method"/>
            <line num="123" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithExposedFields(Integer,Integer)" num="126" count="6" type="method"/>
            <line num="127" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithExposedFields(Integer,Integer,long,double,char)" num="129" count="6" type="method"/>
            <line num="130" count="6" type="stmt"/>
            <line num="131" count="6" type="stmt"/>
            <line num="132" count="6" type="stmt"/>
            <line num="133" count="6" type="stmt"/>
            <line num="134" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="getExpectedJson() : String" num="137" count="5" type="method"/>
            <line num="138" count="5" type="stmt"/>
            <line num="139" count="5" type="stmt"/>
            <line falsecount="2" truecount="3" num="139" type="cond"/>
            <line num="140" count="3" type="stmt"/>
            <line num="142" count="5" type="stmt"/>
            <line num="143" count="5" type="stmt"/>
            <line num="144" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="createInstance(Type) : SomeInterface" num="162" count="1" type="method"/>
            <line num="163" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="ClassWithInterfaceField()" num="172" count="1" type="method"/>
            <line num="174" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithInterfaceField(SomeInterface)" num="177" count="2" type="method"/>
            <line num="178" count="2" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java" name="FieldExclusionTest.java">
            <metrics coveredelements="32" coveredconditionals="0" complexity="7" loc="92" coveredmethods="7" methods="7" elements="32" classes="4" ncloc="55" statements="25" conditionals="0" coveredstatements="25"/>
            <class name="FieldExclusionTest">
               <metrics coveredelements="26" complexity="4" methods="4" testruns="3" statements="22" coveredconditionals="0" coveredmethods="4" elements="26" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="22" testpasses="3"/>
            </class>
            <class name="FieldExclusionTest.Outer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="FieldExclusionTest.Outer.Inner">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="FieldExclusionTest.NestedClass">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="36" count="3" type="method"/>
            <line num="38" count="3" type="stmt"/>
            <line num="39" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultInnerClassExclusion() : void" num="42" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInnerClassExclusion() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefaultNestedStaticClassIncluded() : void" num="61" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="Inner(String)" num="75" count="5" type="method"/>
            <line num="76" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="NestedClass(String)" num="84" count="5" type="method"/>
            <line num="85" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="toJson() : String" num="88" count="4" type="method"/>
            <line num="89" count="4" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/functional/InheritanceTest.java" name="InheritanceTest.java">
            <metrics coveredelements="144" coveredconditionals="10" complexity="33" loc="274" coveredmethods="24" methods="24" elements="152" classes="3" ncloc="220" statements="114" conditionals="14" coveredstatements="110"/>
            <class name="InheritanceTest">
               <metrics coveredelements="78" complexity="13" methods="13" testruns="12" statements="65" coveredconditionals="0" coveredmethods="13" elements="78" testfailures="0" testduration="0.009000000000000001" conditionals="0" coveredstatements="65" testpasses="12"/>
            </class>
            <class name="InheritanceTest.SubTypeOfNested">
               <metrics coveredelements="7" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="InheritanceTest.ClassWithSubInterfacesOfCollection">
               <metrics coveredelements="59" coveredconditionals="10" complexity="17" coveredmethods="8" methods="8" elements="67" statements="45" conditionals="14" coveredstatements="41"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="49" count="12" type="method"/>
            <line num="51" count="12" type="stmt"/>
            <line num="52" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubClassSerialization() : void" num="55" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubClassDeserialization() : void" num="61" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClassWithBaseFieldSerialization() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClassWithBaseArrayFieldSerialization() : void" num="77" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBaseSerializedAsSub() : void" num="87" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBaseSerializedAsSubForToJsonMethod() : void" num="93" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBaseSerializedAsBaseWhenSpecifiedWithExplicitType() : void" num="99" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod() : void" num="106" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBaseSerializedAsSubWhenSpecifiedWithExplicitType() : void" num="113" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod() : void" num="119" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="SubTypeOfNested()" num="129" count="1" type="method"/>
            <line num="131" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="SubTypeOfNested(BagOfPrimitives,BagOfPrimitives)" num="134" count="2" type="method"/>
            <line num="135" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="appendFields(StringBuilder) : void" num="138" count="2" type="method"/>
            <line num="140" count="2" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubInterfacesOfCollectionSerialization() : void" num="145" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubInterfacesOfCollectionDeserialization() : void" num="171" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="172" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="ClassWithSubInterfacesOfCollection()" num="190" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="ClassWithSubInterfacesOfCollection(List&lt;Integer&gt;,Queue&lt;Long&gt;,Set&lt;Float&gt;,SortedSet&lt;Character&gt;)" num="194" count="1" type="method"/>
            <line num="196" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line complexity="2" visibility="package" signature="listContains(int) : boolean" num="202" count="1" type="method"/>
            <line num="203" count="1" type="stmt"/>
            <line num="204" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="204" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line complexity="2" visibility="package" signature="queueContains(long) : boolean" num="211" count="1" type="method"/>
            <line num="212" count="1" type="stmt"/>
            <line num="213" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line complexity="2" visibility="package" signature="setContains(float) : boolean" num="220" count="1" type="method"/>
            <line num="221" count="1" type="stmt"/>
            <line num="222" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="222" type="cond"/>
            <line num="223" count="0" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line complexity="2" visibility="package" signature="sortedSetContains(char) : boolean" num="229" count="1" type="method"/>
            <line num="230" count="1" type="stmt"/>
            <line num="231" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="231" type="cond"/>
            <line num="232" count="0" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpectedJson() : String" num="238" count="1" type="method"/>
            <line num="239" count="1" type="stmt"/>
            <line num="240" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line complexity="6" visibility="private" signature="append(StringBuilder,Collection&lt;?&gt;) : StringBuilder" num="253" count="4" type="method"/>
            <line num="254" count="4" type="stmt"/>
            <line num="255" count="4" type="stmt"/>
            <line num="256" count="4" type="stmt"/>
            <line num="257" count="16" type="stmt"/>
            <line falsecount="4" truecount="12" num="257" type="cond"/>
            <line num="258" count="12" type="stmt"/>
            <line num="260" count="4" type="stmt"/>
            <line num="262" count="16" type="stmt"/>
            <line falsecount="12" truecount="4" num="262" type="cond"/>
            <line num="263" count="4" type="stmt"/>
            <line num="265" count="16" type="stmt"/>
            <line num="266" count="16" type="stmt"/>
            <line falsecount="12" truecount="4" num="266" type="cond"/>
            <line num="267" count="4" type="stmt"/>
            <line num="270" count="4" type="stmt"/>
            <line num="271" count="4" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/functional/InstanceCreatorTest.java" name="InstanceCreatorTest.java">
            <metrics coveredelements="25" coveredconditionals="0" complexity="6" loc="82" coveredmethods="6" methods="6" elements="25" classes="1" ncloc="51" statements="19" conditionals="0" coveredstatements="19"/>
            <class name="InstanceCreatorTest">
               <metrics coveredelements="25" complexity="6" methods="6" testruns="3" statements="19" coveredconditionals="0" coveredmethods="6" elements="25" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="19" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="testInstanceCreatorReturnsBaseType() : void" num="38" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="createInstance(Type) : Base" num="41" count="1" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInstanceCreatorReturnsSubTypeForTopLevelObject() : void" num="51" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="createInstance(Type) : Base" num="54" count="1" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInstanceCreatorReturnsSubTypeForField() : void" num="69" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="createInstance(Type) : Base" num="72" count="1" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/functional/InterfaceTest.java" name="InterfaceTest.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="5" loc="72" coveredmethods="5" methods="5" elements="13" classes="4" ncloc="37" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="InterfaceTest">
               <metrics coveredelements="9" complexity="3" methods="3" testruns="2" statements="6" coveredconditionals="0" coveredmethods="3" elements="9" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="6" testpasses="2"/>
            </class>
            <class name="InterfaceTest.TestObjectInterface">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="InterfaceTest.TestObject">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="InterfaceTest.TestObjectWrapper">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="35" count="2" type="method"/>
            <line num="37" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSerializingObjectImplementingInterface() : void" num="42" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSerializingInterfaceObjectField() : void" num="46" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="TestObject(String)" num="59" count="2" type="method"/>
            <line num="60" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="TestObjectWrapper(TestObjectInterface)" num="68" count="1" type="method"/>
            <line num="69" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/functional/InternationalizationTest.java" name="InternationalizationTest.java">
            <metrics coveredelements="21" coveredconditionals="0" complexity="5" loc="71" coveredmethods="5" methods="5" elements="21" classes="1" ncloc="33" statements="16" conditionals="0" coveredstatements="16"/>
            <class name="InternationalizationTest">
               <metrics coveredelements="21" complexity="5" methods="5" testruns="4" statements="16" coveredconditionals="0" coveredmethods="5" elements="21" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="16" testpasses="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="31" count="4" type="method"/>
            <line num="33" count="4" type="stmt"/>
            <line num="34" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringsWithRawChineseCharactersDeserialization() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringsWithUnicodeChineseCharactersSerialization() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringsWithUnicodeChineseCharactersDeserialization() : void" num="60" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringsWithUnicodeChineseCharactersEscapedDeserialization() : void" num="67" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/functional/JsonParserTest.java" name="JsonParserTest.java">
            <metrics coveredelements="47" coveredconditionals="0" complexity="9" loc="110" coveredmethods="6" methods="6" elements="50" classes="1" ncloc="75" statements="44" conditionals="0" coveredstatements="41"/>
            <class name="JsonParserTest">
               <metrics coveredelements="47" complexity="9" methods="6" testruns="5" statements="44" coveredconditionals="0" coveredmethods="6" elements="50" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="41" testpasses="5"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="41" count="5" type="method"/>
            <line num="43" count="5" type="stmt"/>
            <line num="44" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeserializingCustomTree() : void" num="47" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBadTypeForDeserializingCustomTree() : void" num="56" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBadFieldTypeForCustomDeserializerCustomTree() : void" num="68" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBadFieldTypeForDeserializingCustomTree() : void" num="82" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testChangingCustomTreeAndDeserializing() : void" num="99" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="100" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/functional/JsonTreeTest.java" name="JsonTreeTest.java">
            <metrics coveredelements="43" coveredconditionals="3" complexity="8" loc="85" coveredmethods="6" methods="6" elements="45" classes="2" ncloc="68" statements="35" conditionals="4" coveredstatements="34"/>
            <class name="JsonTreeTest">
               <metrics coveredelements="40" complexity="7" methods="5" testruns="3" statements="33" coveredconditionals="3" coveredmethods="5" elements="42" testfailures="0" testduration="0.004" conditionals="4" coveredstatements="32" testpasses="3"/>
            </class>
            <class name="JsonTreeTest.SubTypeOfBagOfPrimitives">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="25" count="3" type="method"/>
            <line num="27" count="3" type="stmt"/>
            <line num="28" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToJsonTree() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToJsonTreeObjectType() : void" num="44" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJsonTreeToString() : void" num="57" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="3" visibility="private" signature="assertContains(JsonObject,JsonPrimitive) : void" num="65" count="8" type="method"/>
            <line num="66" count="8" type="stmt"/>
            <line num="67" count="20" type="stmt"/>
            <line num="68" count="20" type="stmt"/>
            <line falsecount="0" truecount="20" num="68" type="cond"/>
            <line num="69" count="20" type="stmt"/>
            <line falsecount="12" truecount="8" num="69" type="cond"/>
            <line num="70" count="8" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SubTypeOfBagOfPrimitives(long,int,boolean,String,float)" num="80" count="2" type="method"/>
            <line num="81" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/functional/MapTest.java" name="MapTest.java">
            <metrics coveredelements="164" coveredconditionals="0" complexity="30" loc="334" coveredmethods="28" methods="30" elements="172" classes="4" ncloc="242" statements="142" conditionals="0" coveredstatements="136"/>
            <class name="MapTest">
               <metrics coveredelements="164" complexity="30" methods="30" testruns="26" statements="142" coveredconditionals="0" coveredmethods="28" elements="172" testfailures="0" testduration="0.020000000000000007" conditionals="0" coveredstatements="136" testpasses="26"/>
            </class>
            <class name="MapTest.MyParameterizedMap">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MapTest.ClassWithAMap">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MapTest.MyMap">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="42" count="26" type="method"/>
            <line num="44" count="26" type="stmt"/>
            <line num="45" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapSerialization() : void" num="48" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapDeserialization() : void" num="58" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRawMapSerialization() : void" num="66" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapSerializationEmpty() : void" num="76" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapDeserializationEmpty() : void" num="83" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapSerializationWithNullValue() : void" num="89" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapDeserializationWithNullValue() : void" num="99" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapSerializationWithNullValueButSerializeNulls() : void" num="106" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapSerializationWithNullKey() : void" num="116" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapDeserializationWithNullKey() : void" num="125" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapSerializationWithIntegerKeys() : void" num="132" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapDeserializationWithIntegerKeys() : void" num="141" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParameterizedMapSubclassSerialization() : void" num="149" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParameterizedMapSubclassDeserialization() : void" num="157" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="createInstance(Type) : MyParameterizedMap" num="162" count="1" type="method"/>
            <line num="163" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapSubclassSerialization() : void" num="179" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapStandardSubclassDeserialization() : void" num="186" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="disable_testMapSubclassDeserialization() : void" num="194" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createInstance(Type) : MyMap" num="196" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapSerializationWithNullValues() : void" num="216" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapSerializationWithNullValuesSerialized() : void" num="228" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="229" count="1" type="stmt"/>
            <line num="230" count="1" type="stmt"/>
            <line num="231" count="1" type="stmt"/>
            <line num="232" count="1" type="stmt"/>
            <line num="233" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapSerializationWithWildcardValues() : void" num="238" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="239" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapDeserializationWithWildcardValues() : void" num="249" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="250" count="1" type="stmt"/>
            <line num="251" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapOfMapSerialization() : void" num="267" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="268" count="1" type="stmt"/>
            <line num="269" count="1" type="stmt"/>
            <line num="270" count="1" type="stmt"/>
            <line num="271" count="1" type="stmt"/>
            <line num="272" count="1" type="stmt"/>
            <line num="273" count="1" type="stmt"/>
            <line num="274" count="1" type="stmt"/>
            <line num="275" count="1" type="stmt"/>
            <line num="276" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapOfMapDeserialization() : void" num="282" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="283" count="1" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line num="285" count="1" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line num="287" count="1" type="stmt"/>
            <line num="288" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapWithQuotes() : void" num="294" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="295" count="1" type="stmt"/>
            <line num="296" count="1" type="stmt"/>
            <line num="297" count="1" type="stmt"/>
            <line num="298" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWriteMapsWithEmptyStringKey() : void" num="304" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="305" count="1" type="stmt"/>
            <line num="306" count="1" type="stmt"/>
            <line num="307" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReadMapsWithEmptyStringKey() : void" num="311" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="312" count="1" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSerializeMaps() : void" num="319" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="320" count="1" type="stmt"/>
            <line num="321" count="1" type="stmt"/>
            <line num="322" count="1" type="stmt"/>
            <line num="323" count="1" type="stmt"/>
            <line num="325" count="1" type="stmt"/>
            <line num="327" count="1" type="stmt"/>
            <line num="329" count="1" type="stmt"/>
            <line num="331" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java" name="NamingPolicyTest.java">
            <metrics coveredelements="71" coveredconditionals="0" complexity="17" loc="163" coveredmethods="17" methods="17" elements="71" classes="3" ncloc="118" statements="54" conditionals="0" coveredstatements="54"/>
            <class name="NamingPolicyTest">
               <metrics coveredelements="62" complexity="13" methods="13" testruns="12" statements="49" coveredconditionals="0" coveredmethods="13" elements="62" testfailures="0" testduration="0.013000000000000001" conditionals="0" coveredstatements="49" testpasses="12"/>
            </class>
            <class name="NamingPolicyTest.UpperCaseNamingStrategy">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="NamingPolicyTest.ClassWithDuplicateFields">
               <metrics coveredelements="7" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="40" count="12" type="method"/>
            <line num="42" count="12" type="stmt"/>
            <line num="43" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsonWithNonDefaultFieldNamingPolicySerialization() : void" num="46" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsonWithNonDefaultFieldNamingPolicyDeserialiation() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsonWithLowerCaseDashPolicySerialization() : void" num="60" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsonWithLowerCaseDashPolicyDeserialiation() : void" num="67" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsonWithLowerCaseUnderscorePolicySerialization() : void" num="74" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsonWithLowerCaseUnderscorePolicyDeserialiation() : void" num="82" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsonWithSerializedNameFieldNamingPolicySerialization() : void" num="90" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsonWithSerializedNameFieldNamingPolicyDeserialization() : void" num="97" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization() : void" num="105" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsonWithUpperCamelCaseSpacesPolicySerialiation() : void" num="116" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="117" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsonWithUpperCamelCaseSpacesPolicyDeserialiation() : void" num="124" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="125" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeprecatedNamingStrategy() : void" num="132" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="translateName(Field) : String" num="140" count="1" type="method"/>
            <line num="141" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithDuplicateFields(Integer)" num="150" count="2" type="method"/>
            <line num="151" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithDuplicateFields(Double)" num="154" count="1" type="method"/>
            <line num="155" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithDuplicateFields(Integer,Double)" num="158" count="3" type="method"/>
            <line num="159" count="3" type="stmt"/>
            <line num="160" count="3" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java" name="NullObjectAndFieldTest.java">
            <metrics coveredelements="95" coveredconditionals="0" complexity="19" loc="209" coveredmethods="19" methods="19" elements="95" classes="5" ncloc="154" statements="76" conditionals="0" coveredstatements="76"/>
            <class name="NullObjectAndFieldTest">
               <metrics coveredelements="91" complexity="18" methods="18" testruns="15" statements="73" coveredconditionals="0" coveredmethods="18" elements="91" testfailures="0" testduration="0.009000000000000001" conditionals="0" coveredstatements="73" testpasses="15"/>
            </class>
            <class name="NullObjectAndFieldTest.ClassWithNullWrappedPrimitive">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="NullObjectAndFieldTest.ClassWithMembers">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="NullObjectAndFieldTest.ClassWithObjectsSerializer">
               <metrics coveredelements="4" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="NullObjectAndFieldTest.ObjectWithField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="45" count="15" type="method"/>
            <line num="47" count="15" type="stmt"/>
            <line num="48" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTopLevelNullObjectSerialization() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTopLevelNullObjectDeserialization() : void" num="60" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExplicitSerializationOfNulls() : void" num="66" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExplicitDeserializationOfNulls() : void" num="74" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExplicitSerializationOfNullArrayMembers() : void" num="80" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullWrappedPrimitiveMemberSerialization() : void" num="90" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullWrappedPrimitiveMemberDeserialization() : void" num="100" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExplicitSerializationOfNullCollectionMembers() : void" num="107" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExplicitSerializationOfNullStringMembers() : void" num="114" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomSerializationOfNulls() : void" num="121" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrintPrintingObjectWithNulls() : void" num="130" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrintPrintingArraysWithNulls() : void" num="141" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(ClassWithObjects,Type,JsonSerializationContext) : JsonElement" num="164" count="1" type="method"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExplicitNullSetsFieldToNullDuringDeserialization() : void" num="172" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomTypeAdapterPassesNullSerialization() : void" num="179" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="180" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(ObjectWithField,Type,JsonSerializationContext) : JsonElement" num="182" count="1" type="method"/>
            <line num="184" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCustomTypeAdapterPassesNullDesrialization() : void" num="193" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="194" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : ObjectWithField" num="196" count="1" type="method"/>
            <line num="198" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/functional/ObjectTest.java" name="ObjectTest.java">
            <metrics coveredelements="226" coveredconditionals="8" complexity="50" loc="451" coveredmethods="46" methods="46" elements="226" classes="10" ncloc="343" statements="172" conditionals="8" coveredstatements="172"/>
            <class name="ObjectTest">
               <metrics coveredelements="193" complexity="43" methods="43" testruns="41" statements="150" coveredconditionals="0" coveredmethods="43" elements="193" testfailures="0" testduration="0.021000000000000005" conditionals="0" coveredstatements="150" testpasses="41"/>
            </class>
            <class name="ObjectTest.ClassWithCollectionField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ObjectTest.ClassWithObjectField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ObjectTest.Parent">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ObjectTest.Parent.Child">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ObjectTest.ArrayOfArrays">
               <metrics coveredelements="31" coveredconditionals="8" complexity="6" coveredmethods="2" methods="2" elements="31" statements="21" conditionals="8" coveredstatements="21"/>
            </class>
            <class name="ObjectTest.ClassWithPrivateNoArgsConstructor">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="ObjectTest.ClassWithEmptyStringFields">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ObjectTest.Department">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ObjectTest.Product">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="49" count="41" type="method"/>
            <line num="51" count="41" type="stmt"/>
            <line num="52" count="41" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJsonInSingleQuotesDeserialization() : void" num="55" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJsonInMixedQuotesDeserialization() : void" num="63" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBagOfPrimitivesSerialization() : void" num="71" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBagOfPrimitivesDeserialization() : void" num="76" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBagOfPrimitiveWrappersSerialization() : void" num="83" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBagOfPrimitiveWrappersDeserialization() : void" num="88" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClassWithTransientFieldsSerialization() : void" num="95" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClassWithTransientFieldsDeserialization() : void" num="100" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored() : void" num="107" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClassWithNoFieldsSerialization() : void" num="115" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="116" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClassWithNoFieldsDeserialization() : void" num="119" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNestedSerialization() : void" num="126" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="127" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNestedDeserialization() : void" num="132" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="133" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullSerialization() : void" num="139" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="140" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyStringDeserialization() : void" num="143" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullDeserialization() : void" num="148" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullFieldsSerialization() : void" num="154" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullFieldsDeserialization() : void" num="159" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="160" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayOfObjectsSerialization() : void" num="166" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayOfObjectsDeserialization() : void" num="171" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayOfArraysSerialization() : void" num="177" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayOfArraysDeserialization() : void" num="182" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayOfObjectsAsFields() : void" num="188" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullArraysDeserialization() : void" num="207" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullObjectFieldsDeserialization() : void" num="216" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyCollectionInAnObjectDeserialization() : void" num="222" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="223" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveArrayInAnObjectDeserialization() : void" num="233" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="234" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullPrimitiveFieldsDeserialization() : void" num="242" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyCollectionInAnObjectSerialization() : void" num="248" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="249" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrivateNoArgConstructorDeserialization() : void" num="253" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="254" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAnonymousLocalClassesSerialization() : void" num="259" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="260" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveArrayFieldSerialization() : void" num="265" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="266" count="1" type="stmt"/>
            <line num="267" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClassWithObjectFieldSerialization() : void" num="274" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="275" count="1" type="stmt"/>
            <line num="276" count="1" type="stmt"/>
            <line num="277" count="1" type="stmt"/>
            <line num="278" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInnerClassSerialization() : void" num="286" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="287" count="1" type="stmt"/>
            <line num="288" count="1" type="stmt"/>
            <line num="289" count="1" type="stmt"/>
            <line num="290" count="1" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInnerClassDeserialization() : void" num="294" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="295" count="1" type="stmt"/>
            <line num="296" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="createInstance(Type) : Parent.Child" num="298" count="1" type="method"/>
            <line num="299" count="1" type="stmt"/>
            <line num="302" count="1" type="stmt"/>
            <line num="303" count="1" type="stmt"/>
            <line num="304" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="ArrayOfArrays()" num="317" count="3" type="method"/>
            <line num="318" count="3" type="stmt"/>
            <line num="319" count="3" type="stmt"/>
            <line falsecount="3" truecount="9" num="319" type="cond"/>
            <line num="320" count="9" type="stmt"/>
            <line num="321" count="9" type="stmt"/>
            <line falsecount="9" truecount="18" num="321" type="cond"/>
            <line num="322" count="18" type="stmt"/>
            <line complexity="3" visibility="public" signature="getExpectedJson() : String" num="326" count="3" type="method"/>
            <line num="327" count="3" type="stmt"/>
            <line num="328" count="3" type="stmt"/>
            <line num="329" count="3" type="stmt"/>
            <line num="330" count="9" type="stmt"/>
            <line falsecount="6" truecount="3" num="330" type="cond"/>
            <line num="331" count="3" type="stmt"/>
            <line num="333" count="6" type="stmt"/>
            <line num="335" count="9" type="stmt"/>
            <line num="336" count="9" type="stmt"/>
            <line num="337" count="9" type="stmt"/>
            <line num="338" count="18" type="stmt"/>
            <line falsecount="9" truecount="9" num="338" type="cond"/>
            <line num="339" count="9" type="stmt"/>
            <line num="341" count="9" type="stmt"/>
            <line num="343" count="18" type="stmt"/>
            <line num="345" count="9" type="stmt"/>
            <line num="347" count="3" type="stmt"/>
            <line num="348" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="ClassWithPrivateNoArgsConstructor()" num="354" count="1" type="method"/>
            <line num="355" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testObjectFieldNamesWithoutQuotesDeserialization() : void" num="362" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="363" count="1" type="stmt"/>
            <line num="364" count="1" type="stmt"/>
            <line num="365" count="1" type="stmt"/>
            <line num="366" count="1" type="stmt"/>
            <line num="367" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringFieldWithNumberValueDeserialization() : void" num="370" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="371" count="1" type="stmt"/>
            <line num="372" count="1" type="stmt"/>
            <line num="373" count="1" type="stmt"/>
            <line num="375" count="1" type="stmt"/>
            <line num="376" count="1" type="stmt"/>
            <line num="377" count="1" type="stmt"/>
            <line num="379" count="1" type="stmt"/>
            <line num="380" count="1" type="stmt"/>
            <line num="381" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringFieldWithEmptyValueSerialization() : void" num="387" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="388" count="1" type="stmt"/>
            <line num="389" count="1" type="stmt"/>
            <line num="390" count="1" type="stmt"/>
            <line num="391" count="1" type="stmt"/>
            <line num="392" count="1" type="stmt"/>
            <line num="393" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringFieldWithEmptyValueDeserialization() : void" num="399" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="400" count="1" type="stmt"/>
            <line num="401" count="1" type="stmt"/>
            <line num="402" count="1" type="stmt"/>
            <line num="403" count="1" type="stmt"/>
            <line num="404" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJsonObjectSerialization() : void" num="413" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="414" count="1" type="stmt"/>
            <line num="415" count="1" type="stmt"/>
            <line num="416" count="1" type="stmt"/>
            <line num="417" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSingletonLists() : void" num="423" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="424" count="1" type="stmt"/>
            <line num="425" count="1" type="stmt"/>
            <line num="426" count="1" type="stmt"/>
            <line num="428" count="1" type="stmt"/>
            <line num="430" count="1" type="stmt"/>
            <line num="431" count="1" type="stmt"/>
            <line num="433" count="1" type="stmt"/>
            <line num="435" count="1" type="stmt"/>
            <line num="436" count="1" type="stmt"/>
            <line num="438" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/functional/ParameterizedTypesTest.java" name="ParameterizedTypesTest.java">
            <metrics coveredelements="273" coveredconditionals="38" complexity="65" loc="503" coveredmethods="27" methods="28" elements="337" classes="9" ncloc="416" statements="235" conditionals="74" coveredstatements="208"/>
            <class name="ParameterizedTypesTest">
               <metrics coveredelements="140" complexity="18" methods="18" testruns="17" statements="122" coveredconditionals="0" coveredmethods="18" elements="140" testfailures="0" testduration="0.029000000000000005" conditionals="0" coveredstatements="122" testpasses="17"/>
            </class>
            <class name="ParameterizedTypesTest.ObjectWithTypeVariables">
               <metrics coveredelements="96" coveredconditionals="25" complexity="20" coveredmethods="6" methods="6" elements="100" statements="66" conditionals="28" coveredstatements="65"/>
            </class>
            <class name="ParameterizedTypesTest.MultiParameters">
               <metrics coveredelements="37" coveredconditionals="13" complexity="27" coveredmethods="3" methods="4" elements="97" statements="47" conditionals="46" coveredstatements="21"/>
            </class>
            <class name="ParameterizedTypesTest.Quantity">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ParameterizedTypesTest.MyQuantity">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ParameterizedTypesTest.Measurable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ParameterizedTypesTest.Field">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ParameterizedTypesTest.Immutable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ParameterizedTypesTest.Amount">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="48" count="17" type="method"/>
            <line num="50" count="17" type="stmt"/>
            <line num="51" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParameterizedTypesSerialization() : void" num="54" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParameterizedTypeDeserialization() : void" num="61" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTypesWithMultipleParametersSerialization() : void" num="75" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTypesWithMultipleParametersDeserialization() : void" num="87" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParameterizedTypeWithCustomSerializer() : void" num="100" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParameterizedTypesWithCustomDeserializer() : void" num="116" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParameterizedTypesWithWriterSerialization() : void" num="138" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParameterizedTypeWithReaderDeserialization() : void" num="146" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVariableTypeFieldsAndGenericArraysSerialization() : void" num="160" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVariableTypeFieldsAndGenericArraysDeserialization() : void" num="177" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVariableTypeDeserialization() : void" num="195" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="196" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVariableTypeArrayDeserialization() : void" num="205" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="206" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line num="214" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParameterizedTypeWithVariableTypeDeserialization() : void" num="217" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParameterizedTypeGenericArraysSerialization() : void" num="231" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="233" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParameterizedTypeGenericArraysDeserialization() : void" num="245" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="247" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line num="258" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="ObjectWithTypeVariables()" num="275" count="5" type="method"/>
            <line num="277" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="ObjectWithTypeVariables(T,T[],List&lt;T&gt;,List&lt;T&gt;[],List&lt;? extends T&gt;,List&lt;? extends T&gt;[])" num="280" count="12" type="method"/>
            <line num="282" count="12" type="stmt"/>
            <line num="283" count="12" type="stmt"/>
            <line num="284" count="12" type="stmt"/>
            <line num="285" count="12" type="stmt"/>
            <line num="286" count="12" type="stmt"/>
            <line num="287" count="12" type="stmt"/>
            <line complexity="12" visibility="public" signature="getExpectedJson() : String" num="290" count="6" type="method"/>
            <line num="291" count="6" type="stmt"/>
            <line num="293" count="6" type="stmt"/>
            <line num="294" count="6" type="stmt"/>
            <line falsecount="3" truecount="3" num="294" type="cond"/>
            <line num="295" count="3" type="stmt"/>
            <line num="296" count="3" type="stmt"/>
            <line num="299" count="6" type="stmt"/>
            <line falsecount="3" truecount="3" num="299" type="cond"/>
            <line num="300" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="300" type="cond"/>
            <line num="301" count="2" type="stmt"/>
            <line num="303" count="3" type="stmt"/>
            <line num="304" count="3" type="stmt"/>
            <line num="305" count="3" type="stmt"/>
            <line num="306" count="3" type="stmt"/>
            <line num="309" count="6" type="stmt"/>
            <line falsecount="3" truecount="3" num="309" type="cond"/>
            <line num="310" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="310" type="cond"/>
            <line num="311" count="2" type="stmt"/>
            <line num="313" count="3" type="stmt"/>
            <line num="314" count="3" type="stmt"/>
            <line num="315" count="3" type="stmt"/>
            <line num="316" count="3" type="stmt"/>
            <line num="319" count="6" type="stmt"/>
            <line falsecount="3" truecount="3" num="319" type="cond"/>
            <line num="320" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="320" type="cond"/>
            <line num="321" count="2" type="stmt"/>
            <line num="323" count="3" type="stmt"/>
            <line num="324" count="3" type="stmt"/>
            <line num="325" count="3" type="stmt"/>
            <line num="326" count="3" type="stmt"/>
            <line num="329" count="6" type="stmt"/>
            <line falsecount="4" truecount="2" num="329" type="cond"/>
            <line num="330" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="330" type="cond"/>
            <line num="331" count="2" type="stmt"/>
            <line num="333" count="2" type="stmt"/>
            <line num="334" count="2" type="stmt"/>
            <line num="335" count="2" type="stmt"/>
            <line num="336" count="2" type="stmt"/>
            <line num="339" count="6" type="stmt"/>
            <line falsecount="4" truecount="2" num="339" type="cond"/>
            <line num="340" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="340" type="cond"/>
            <line num="341" count="2" type="stmt"/>
            <line num="343" count="2" type="stmt"/>
            <line num="344" count="2" type="stmt"/>
            <line num="345" count="2" type="stmt"/>
            <line num="346" count="2" type="stmt"/>
            <line num="348" count="6" type="stmt"/>
            <line num="349" count="6" type="stmt"/>
            <line complexity="2" visibility="private" signature="appendObjectsToBuilder(StringBuilder,Iterable&lt;? extends T&gt;) : void" num="352" count="18" type="method"/>
            <line num="353" count="18" type="stmt"/>
            <line num="354" count="18" type="stmt"/>
            <line num="355" count="39" type="stmt"/>
            <line falsecount="18" truecount="21" num="355" type="cond"/>
            <line num="356" count="21" type="stmt"/>
            <line num="358" count="39" type="stmt"/>
            <line num="359" count="39" type="stmt"/>
            <line complexity="3" visibility="private" signature="appendObjectsToBuilder(StringBuilder,List&lt;? extends T&gt;[]) : void" num="363" count="5" type="method"/>
            <line num="364" count="5" type="stmt"/>
            <line num="365" count="5" type="stmt"/>
            <line num="366" count="10" type="stmt"/>
            <line falsecount="5" truecount="5" num="366" type="cond"/>
            <line num="367" count="5" type="stmt"/>
            <line num="369" count="10" type="stmt"/>
            <line num="370" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="370" type="cond"/>
            <line num="371" count="10" type="stmt"/>
            <line num="372" count="10" type="stmt"/>
            <line num="373" count="10" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString(T) : String" num="380" count="42" type="method"/>
            <line num="381" count="42" type="stmt"/>
            <line complexity="1" visibility="private" signature="MultiParameters()" num="392" count="1" type="method"/>
            <line complexity="1" visibility="package" signature="MultiParameters(A,B,C,D,E)" num="395" count="2" type="method"/>
            <line num="396" count="2" type="stmt"/>
            <line num="397" count="2" type="stmt"/>
            <line num="398" count="2" type="stmt"/>
            <line num="399" count="2" type="stmt"/>
            <line num="400" count="2" type="stmt"/>
            <line num="401" count="2" type="stmt"/>
            <line complexity="6" visibility="public" signature="hashCode() : int" num="403" count="0" type="method"/>
            <line num="405" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="407" type="cond"/>
            <line num="408" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="408" type="cond"/>
            <line num="409" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="409" type="cond"/>
            <line num="410" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="410" type="cond"/>
            <line num="411" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="411" type="cond"/>
            <line num="412" count="0" type="stmt"/>
            <line complexity="19" visibility="public" signature="equals(Object) : boolean" num="414" count="1" type="method"/>
            <line num="417" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="417" type="cond"/>
            <line num="418" count="0" type="stmt"/>
            <line num="420" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="420" type="cond"/>
            <line num="421" count="0" type="stmt"/>
            <line num="423" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="423" type="cond"/>
            <line num="424" count="0" type="stmt"/>
            <line num="426" count="1" type="stmt"/>
            <line num="427" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="427" type="cond"/>
            <line num="428" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="428" type="cond"/>
            <line num="429" count="0" type="stmt"/>
            <line num="431" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="431" type="cond"/>
            <line num="432" count="0" type="stmt"/>
            <line num="434" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="434" type="cond"/>
            <line num="435" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="435" type="cond"/>
            <line num="436" count="0" type="stmt"/>
            <line num="438" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="438" type="cond"/>
            <line num="439" count="0" type="stmt"/>
            <line num="441" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="441" type="cond"/>
            <line num="442" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="442" type="cond"/>
            <line num="443" count="0" type="stmt"/>
            <line num="445" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="445" type="cond"/>
            <line num="446" count="0" type="stmt"/>
            <line num="448" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="448" type="cond"/>
            <line num="449" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="449" type="cond"/>
            <line num="450" count="0" type="stmt"/>
            <line num="452" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="452" type="cond"/>
            <line num="453" count="0" type="stmt"/>
            <line num="455" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="455" type="cond"/>
            <line num="456" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="456" type="cond"/>
            <line num="457" count="0" type="stmt"/>
            <line num="459" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="459" type="cond"/>
            <line num="460" count="0" type="stmt"/>
            <line num="462" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeepParameterizedTypeSerialization() : void" num="489" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="490" count="1" type="stmt"/>
            <line num="491" count="1" type="stmt"/>
            <line num="492" count="1" type="stmt"/>
            <line num="493" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeepParameterizedTypeDeserialization() : void" num="496" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="497" count="1" type="stmt"/>
            <line num="498" count="1" type="stmt"/>
            <line num="499" count="1" type="stmt"/>
            <line num="500" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/functional/PrettyPrintingTest.java" name="PrettyPrintingTest.java">
            <metrics coveredelements="47" coveredconditionals="3" complexity="12" loc="125" coveredmethods="10" methods="10" elements="49" classes="2" ncloc="86" statements="35" conditionals="4" coveredstatements="34"/>
            <class name="PrettyPrintingTest">
               <metrics coveredelements="47" complexity="12" methods="10" testruns="8" statements="35" coveredconditionals="3" coveredmethods="10" elements="49" testfailures="0" testduration="0.005" conditionals="4" coveredstatements="34" testpasses="8"/>
            </class>
            <class name="PrettyPrintingTest.ClassWithMap">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="47" count="8" type="method"/>
            <line num="49" count="8" type="stmt"/>
            <line num="50" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="testPrettyPrintList() : void" num="53" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line falsecount="1" truecount="15" num="56" type="cond"/>
            <line num="57" count="15" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrettyPrintArrayOfObjects() : void" num="64" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrettyPrintArrayOfPrimitives() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrettyPrintArrayOfPrimitiveArrays() : void" num="76" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrettyPrintListOfPrimitiveArrays() : void" num="84" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMap() : void" num="92" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyMapField() : void" num="101" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMultipleArrays() : void" num="114" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="print(String) : void" num="120" count="2" type="method"/>
            <line num="121" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/functional/PrimitiveTest.java" name="PrimitiveTest.java">
            <metrics coveredelements="334" coveredconditionals="0" complexity="85" loc="585" coveredmethods="69" methods="69" elements="350" classes="2" ncloc="467" statements="281" conditionals="0" coveredstatements="265"/>
            <class name="PrimitiveTest">
               <metrics coveredelements="334" complexity="85" methods="69" testruns="67" statements="281" coveredconditionals="0" coveredmethods="69" elements="350" testfailures="0" testduration="0.015000000000000006" conditionals="0" coveredstatements="265" testpasses="67"/>
            </class>
            <class name="PrimitiveTest.ClassWithIntegerField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="37" count="67" type="method"/>
            <line num="39" count="67" type="stmt"/>
            <line num="40" count="67" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveIntegerAutoboxedSerialization() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveIntegerAutoboxedDeserialization() : void" num="47" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveIntegerAutoboxedInASingleElementArraySerialization() : void" num="56" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveIntegerAutoboxedInASingleElementArrayDeserialization() : void" num="63" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReallyLongValuesSerialization() : void" num="72" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReallyLongValuesDeserialization() : void" num="77" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveLongAutoboxedSerialization() : void" num="83" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveLongAutoboxedDeserialization() : void" num="88" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveLongAutoboxedInASingleElementArraySerialization() : void" num="97" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveLongAutoboxedInASingleElementArrayDeserialization() : void" num="104" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveBooleanAutoboxedSerialization() : void" num="113" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveBooleanAutoboxedDeserialization() : void" num="118" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveBooleanAutoboxedInASingleElementArraySerialization() : void" num="128" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveBooleanAutoboxedInASingleElementArrayDeserialization() : void" num="135" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNumberSerialization() : void" num="145" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNumberDeserialization() : void" num="154" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveDoubleAutoboxedSerialization() : void" num="166" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveDoubleAutoboxedDeserialization() : void" num="171" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveDoubleAutoboxedInASingleElementArraySerialization() : void" num="179" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoubleAsStringRepresentationDeserialization() : void" num="186" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoubleNoFractAsStringRepresentationDeserialization() : void" num="196" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLargeDoubleDeserialization() : void" num="206" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveDoubleAutoboxedInASingleElementArrayDeserialization() : void" num="216" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBigDecimalSerialization() : void" num="225" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBigDecimalDeserialization() : void" num="231" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="232" count="1" type="stmt"/>
            <line num="233" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBigDecimalInASingleElementArraySerialization() : void" num="237" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="238" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="240" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBigDecimalInASingleElementArrayDeserialization() : void" num="248" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="249" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line num="251" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSmallValueForBigDecimalSerialization() : void" num="254" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="255" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSmallValueForBigDecimalDeserialization() : void" num="260" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="261" count="1" type="stmt"/>
            <line num="262" count="1" type="stmt"/>
            <line num="263" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBigDecimalPreservePrecisionSerialization() : void" num="266" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="267" count="1" type="stmt"/>
            <line num="268" count="1" type="stmt"/>
            <line num="269" count="1" type="stmt"/>
            <line num="271" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBigDecimalPreservePrecisionDeserialization() : void" num="274" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="275" count="1" type="stmt"/>
            <line num="276" count="1" type="stmt"/>
            <line num="277" count="1" type="stmt"/>
            <line num="279" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBigDecimalAsStringRepresentationDeserialization() : void" num="282" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="283" count="1" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line num="285" count="1" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBigDecimalNoFractAsStringRepresentationDeserialization() : void" num="289" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="290" count="1" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line num="292" count="1" type="stmt"/>
            <line num="293" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBigIntegerSerialization() : void" num="296" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="297" count="1" type="stmt"/>
            <line num="298" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBigIntegerDeserialization() : void" num="301" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="302" count="1" type="stmt"/>
            <line num="303" count="1" type="stmt"/>
            <line num="304" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBigIntegerInASingleElementArraySerialization() : void" num="307" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="308" count="1" type="stmt"/>
            <line num="309" count="1" type="stmt"/>
            <line num="310" count="1" type="stmt"/>
            <line num="311" count="1" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line num="314" count="1" type="stmt"/>
            <line num="315" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBigIntegerInASingleElementArrayDeserialization() : void" num="318" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="319" count="1" type="stmt"/>
            <line num="320" count="1" type="stmt"/>
            <line num="321" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSmallValueForBigIntegerSerialization() : void" num="324" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="325" count="1" type="stmt"/>
            <line num="326" count="1" type="stmt"/>
            <line num="327" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSmallValueForBigIntegerDeserialization() : void" num="330" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="331" count="1" type="stmt"/>
            <line num="332" count="1" type="stmt"/>
            <line num="333" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBadValueForBigIntegerDeserialization() : void" num="336" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="337" count="1" type="stmt"/>
            <line num="338" count="1" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOverridingDefaultPrimitiveSerialization() : void" num="343" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="344" count="1" type="stmt"/>
            <line num="345" count="1" type="stmt"/>
            <line num="349" count="1" type="stmt"/>
            <line num="350" count="1" type="stmt"/>
            <line num="351" count="1" type="stmt"/>
            <line num="353" count="1" type="stmt"/>
            <line num="354" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="extractElementFromArray(String) : String" num="357" count="4" type="method"/>
            <line num="358" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="testDoubleNaNSerializationNotSupportedByDefault() : void" num="361" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="362" count="1" type="stmt"/>
            <line num="363" count="1" type="stmt"/>
            <line num="364" count="1" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line num="368" count="1" type="stmt"/>
            <line num="369" count="1" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoubleNaNSerialization() : void" num="375" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="376" count="1" type="stmt"/>
            <line num="377" count="1" type="stmt"/>
            <line num="378" count="1" type="stmt"/>
            <line num="379" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoubleNaNDeserialization() : void" num="382" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="383" count="1" type="stmt"/>
            <line num="384" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testFloatNaNSerializationNotSupportedByDefault() : void" num="387" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="388" count="1" type="stmt"/>
            <line num="389" count="1" type="stmt"/>
            <line num="390" count="1" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
            <line num="394" count="1" type="stmt"/>
            <line num="395" count="1" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFloatNaNSerialization() : void" num="401" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="402" count="1" type="stmt"/>
            <line num="403" count="1" type="stmt"/>
            <line num="404" count="1" type="stmt"/>
            <line num="405" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFloatNaNDeserialization() : void" num="408" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="409" count="1" type="stmt"/>
            <line num="410" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBigDecimalNaNDeserializationNotSupported() : void" num="413" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="414" count="1" type="stmt"/>
            <line num="415" count="1" type="stmt"/>
            <line num="416" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testDoubleInfinitySerializationNotSupportedByDefault() : void" num="421" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="422" count="1" type="stmt"/>
            <line num="423" count="1" type="stmt"/>
            <line num="424" count="1" type="stmt"/>
            <line num="425" count="0" type="stmt"/>
            <line num="428" count="1" type="stmt"/>
            <line num="429" count="1" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoubleInfinitySerialization() : void" num="435" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="436" count="1" type="stmt"/>
            <line num="437" count="1" type="stmt"/>
            <line num="438" count="1" type="stmt"/>
            <line num="439" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoubleInfinityDeserialization() : void" num="442" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="443" count="1" type="stmt"/>
            <line num="444" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testFloatInfinitySerializationNotSupportedByDefault() : void" num="447" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="448" count="1" type="stmt"/>
            <line num="449" count="1" type="stmt"/>
            <line num="450" count="1" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="454" count="1" type="stmt"/>
            <line num="455" count="1" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFloatInfinitySerialization() : void" num="461" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="462" count="1" type="stmt"/>
            <line num="463" count="1" type="stmt"/>
            <line num="464" count="1" type="stmt"/>
            <line num="465" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFloatInfinityDeserialization() : void" num="468" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="469" count="1" type="stmt"/>
            <line num="470" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBigDecimalInfinityDeserializationNotSupported() : void" num="473" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="474" count="1" type="stmt"/>
            <line num="475" count="1" type="stmt"/>
            <line num="476" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testNegativeInfinitySerializationNotSupportedByDefault() : void" num="481" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="482" count="1" type="stmt"/>
            <line num="483" count="1" type="stmt"/>
            <line num="484" count="1" type="stmt"/>
            <line num="485" count="0" type="stmt"/>
            <line num="488" count="1" type="stmt"/>
            <line num="489" count="1" type="stmt"/>
            <line num="490" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNegativeInfinitySerialization() : void" num="495" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="496" count="1" type="stmt"/>
            <line num="497" count="1" type="stmt"/>
            <line num="498" count="1" type="stmt"/>
            <line num="499" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNegativeInfinityDeserialization() : void" num="502" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="503" count="1" type="stmt"/>
            <line num="504" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testNegativeInfinityFloatSerializationNotSupportedByDefault() : void" num="507" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="508" count="1" type="stmt"/>
            <line num="509" count="1" type="stmt"/>
            <line num="510" count="1" type="stmt"/>
            <line num="511" count="0" type="stmt"/>
            <line num="514" count="1" type="stmt"/>
            <line num="515" count="1" type="stmt"/>
            <line num="516" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNegativeInfinityFloatSerialization() : void" num="521" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="522" count="1" type="stmt"/>
            <line num="523" count="1" type="stmt"/>
            <line num="524" count="1" type="stmt"/>
            <line num="525" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNegativeInfinityFloatDeserialization() : void" num="528" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="529" count="1" type="stmt"/>
            <line num="530" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBigDecimalNegativeInfinityDeserializationNotSupported() : void" num="533" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="534" count="1" type="stmt"/>
            <line num="535" count="1" type="stmt"/>
            <line num="536" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLongAsStringSerialization() : void" num="541" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="542" count="1" type="stmt"/>
            <line num="543" count="1" type="stmt"/>
            <line num="544" count="1" type="stmt"/>
            <line num="547" count="1" type="stmt"/>
            <line num="548" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLongAsStringDeserialization() : void" num="551" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="552" count="1" type="stmt"/>
            <line num="553" count="1" type="stmt"/>
            <line num="555" count="1" type="stmt"/>
            <line num="556" count="1" type="stmt"/>
            <line num="557" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHtmlCharacterSerialization() : void" num="560" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="561" count="1" type="stmt"/>
            <line num="562" count="1" type="stmt"/>
            <line num="563" count="1" type="stmt"/>
            <line num="565" count="1" type="stmt"/>
            <line num="566" count="1" type="stmt"/>
            <line num="567" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeserializePrimitiveWrapperAsObjectField() : void" num="570" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="571" count="1" type="stmt"/>
            <line num="572" count="1" type="stmt"/>
            <line num="573" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrimitiveClassLiteral() : void" num="580" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="581" count="1" type="stmt"/>
            <line num="582" count="1" type="stmt"/>
            <line num="583" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java" name="PrintFormattingTest.java">
            <metrics coveredelements="29" coveredconditionals="0" complexity="5" loc="84" coveredmethods="5" methods="5" elements="29" classes="1" ncloc="51" statements="24" conditionals="0" coveredstatements="24"/>
            <class name="PrintFormattingTest">
               <metrics coveredelements="29" complexity="5" methods="5" testruns="3" statements="24" coveredconditionals="0" coveredmethods="5" elements="29" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="24" testpasses="3"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="42" count="3" type="method"/>
            <line num="44" count="3" type="stmt"/>
            <line num="45" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCompactFormattingLeavesNoWhiteSpace() : void" num="48" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJsonObjectWithNullValues() : void" num="60" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJsonObjectWithNullValuesSerialized() : void" num="69" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertContainsNoWhiteSpace(String) : void" num="79" count="1" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="106" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/functional/ReadersWritersTest.java" name="ReadersWritersTest.java">
            <metrics coveredelements="56" coveredconditionals="0" complexity="9" loc="116" coveredmethods="9" methods="9" elements="56" classes="1" ncloc="82" statements="47" conditionals="0" coveredstatements="47"/>
            <class name="ReadersWritersTest">
               <metrics coveredelements="56" complexity="9" methods="9" testruns="8" statements="47" coveredconditionals="0" coveredmethods="9" elements="56" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="47" testpasses="8"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="42" count="8" type="method"/>
            <line num="44" count="8" type="stmt"/>
            <line num="45" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWriterForSerialization() : void" num="48" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReaderForDeserialization() : void" num="55" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTopLevelNullObjectSerializationWithWriter() : void" num="62" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTopLevelNullObjectDeserializationWithReader() : void" num="68" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTopLevelNullObjectSerializationWithWriterAndSerializeNulls() : void" num="74" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls() : void" num="81" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReadWriteTwoStrings() : void" num="88" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReadWriteTwoObjects() : void" num="101" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/functional/SecurityTest.java" name="SecurityTest.java">
            <metrics coveredelements="27" coveredconditionals="0" complexity="6" loc="86" coveredmethods="6" methods="6" elements="27" classes="1" ncloc="43" statements="21" conditionals="0" coveredstatements="21"/>
            <class name="SecurityTest">
               <metrics coveredelements="27" complexity="6" methods="6" testruns="5" statements="21" coveredconditionals="0" coveredmethods="6" elements="27" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="21" testpasses="5"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="38" count="5" type="method"/>
            <line num="40" count="5" type="stmt"/>
            <line num="41" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNonExecutableJsonSerialization() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNonExecutableJsonDeserialization() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJsonWithNonExectuableTokenSerialization() : void" num="57" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJsonWithNonExectuableTokenWithRegularGsonDeserialization() : void" num="67" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization() : void" num="78" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/functional/StringTest.java" name="StringTest.java">
            <metrics coveredelements="83" coveredconditionals="0" complexity="20" loc="146" coveredmethods="20" methods="20" elements="83" classes="1" ncloc="110" statements="63" conditionals="0" coveredstatements="63"/>
            <class name="StringTest">
               <metrics coveredelements="83" complexity="20" methods="20" testruns="19" statements="63" coveredconditionals="0" coveredmethods="20" elements="83" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="63" testpasses="19"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="16" count="19" type="method"/>
            <line num="18" count="19" type="stmt"/>
            <line num="19" count="19" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringValueSerialization() : void" num="22" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringValueDeserialization() : void" num="27" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSingleQuoteInStringSerialization() : void" num="33" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEscapedCtrlNInStringSerialization() : void" num="39" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEscapedCtrlNInStringDeserialization() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEscapedCtrlRInStringSerialization() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEscapedCtrlRInStringDeserialization() : void" num="57" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEscapedBackslashInStringSerialization() : void" num="63" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEscapedBackslashInStringDeserialization() : void" num="69" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSingleQuoteInStringDeserialization() : void" num="74" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEscapingQuotesInStringSerialization() : void" num="80" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEscapingQuotesInStringDeserialization() : void" num="87" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringValueAsSingleElementArraySerialization() : void" num="94" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringValueAsSingleElementArrayDeserialization() : void" num="100" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringWithEscapedSlashDeserialization() : void" num="106" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAssignmentCharSerialization() : void" num="116" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAssignmentCharDeserialization() : void" num="125" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJavascriptKeywordsInStringSerialization() : void" num="135" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJavascriptKeywordsInStringDeserialization() : void" num="141" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/functional/TypeVariableTest.java" name="TypeVariableTest.java">
            <metrics coveredelements="24" coveredconditionals="1" complexity="6" loc="80" coveredmethods="5" methods="5" elements="26" classes="3" ncloc="50" statements="19" conditionals="2" coveredstatements="18"/>
            <class name="TypeVariableTest">
               <metrics coveredelements="12" complexity="1" methods="1" testruns="1" statements="11" coveredconditionals="0" coveredmethods="1" elements="12" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="11" testpasses="1"/>
            </class>
            <class name="TypeVariableTest.Foo">
               <metrics coveredelements="8" coveredconditionals="1" complexity="3" coveredmethods="2" methods="2" elements="10" statements="6" conditionals="2" coveredstatements="5"/>
            </class>
            <class name="TypeVariableTest.Bar">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testSingle() : void" num="33" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="Foo(S,T)" num="53" count="2" type="method"/>
            <line num="54" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="equals(Object) : boolean" num="58" count="1" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="Bar()" num="72" count="1" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="Bar(String,Integer)" num="76" count="2" type="method"/>
            <line num="77" count="2" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/functional/UncategorizedTest.java" name="UncategorizedTest.java">
            <metrics coveredelements="39" coveredconditionals="0" complexity="12" loc="114" coveredmethods="8" methods="8" elements="42" classes="6" ncloc="75" statements="34" conditionals="0" coveredstatements="31"/>
            <class name="UncategorizedTest">
               <metrics coveredelements="27" complexity="7" methods="5" testruns="4" statements="24" coveredconditionals="0" coveredmethods="5" elements="29" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="22" testpasses="4"/>
            </class>
            <class name="UncategorizedTest.OperationType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="UncategorizedTest.Base">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="UncategorizedTest.Derived1">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="UncategorizedTest.Derived2">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="UncategorizedTest.BaseTypeAdapter">
               <metrics coveredelements="8" coveredconditionals="0" complexity="3" coveredmethods="1" methods="1" elements="9" statements="8" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="41" count="4" type="method"/>
            <line num="43" count="4" type="stmt"/>
            <line num="44" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="testInvalidJsonDeserializationFails() : void" num="47" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testObjectEqualButNotSameSerialization() : void" num="59" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStaticFieldsAreNotSerialized() : void" num="67" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReturningDerivedClassesDuringDeserialization() : void" num="77" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="Derived1()" num="95" count="1" type="method"/>
            <line num="95" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="Derived2()" num="98" count="1" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Base" num="101" count="2" type="method"/>
            <line num="103" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/functional/VersioningTest.java" name="VersioningTest.java">
            <metrics coveredelements="80" coveredconditionals="0" complexity="11" loc="172" coveredmethods="11" methods="11" elements="80" classes="5" ncloc="123" statements="69" conditionals="0" coveredstatements="69"/>
            <class name="VersioningTest">
               <metrics coveredelements="80" complexity="11" methods="11" testruns="10" statements="69" coveredconditionals="0" coveredmethods="11" elements="80" testfailures="0" testduration="0.010000000000000002" conditionals="0" coveredstatements="69" testpasses="10"/>
            </class>
            <class name="VersioningTest.Version1">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="VersioningTest.Version1_1">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="VersioningTest.Version1_2">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="VersioningTest.SinceUntilMixing">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="40" count="10" type="method"/>
            <line num="42" count="10" type="stmt"/>
            <line num="43" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVersionedUntilSerialization() : void" num="46" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVersionedUntilDeserialization() : void" num="57" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVersionedClassesSerialization() : void" num="64" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVersionedClassesDeserialization() : void" num="71" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIgnoreLaterVersionClassSerialization() : void" num="83" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIgnoreLaterVersionClassDeserialization() : void" num="88" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVersionedGsonWithUnversionedClassesSerialization() : void" num="100" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVersionedGsonWithUnversionedClassesDeserialization() : void" num="106" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVersionedGsonMixingSinceAndUntilSerialization() : void" num="118" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVersionedGsonMixingSinceAndUntilDeserialization() : void" num="133" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.google.gson.common">
         <metrics coveredelements="200" complexity="76" loc="489" methods="52" classes="22" statements="147" coveredconditionals="30" coveredmethods="46" elements="245" ncloc="374" files="2" conditionals="46" coveredstatements="124"/>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/common/MoreAsserts.java" name="MoreAsserts.java">
            <metrics coveredelements="22" coveredconditionals="8" complexity="8" loc="64" coveredmethods="3" methods="3" elements="27" classes="1" ncloc="31" statements="14" conditionals="10" coveredstatements="11"/>
            <class name="MoreAsserts">
               <metrics coveredelements="22" coveredconditionals="8" complexity="8" coveredmethods="3" methods="3" elements="27" statements="14" conditionals="10" coveredstatements="11"/>
            </class>
            <line complexity="3" visibility="public" signature="assertEquals(int[],int[]) : void" num="31" count="5" type="method"/>
            <line num="32" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="32" type="cond"/>
            <line num="33" count="0" type="stmt"/>
            <line num="35" count="5" type="stmt"/>
            <line num="36" count="5" type="stmt"/>
            <line falsecount="5" truecount="28" num="36" type="cond"/>
            <line num="37" count="28" type="stmt"/>
            <line complexity="3" visibility="public" signature="assertEquals(Integer[],Integer[]) : void" num="41" count="2" type="method"/>
            <line num="42" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="46" type="cond"/>
            <line num="47" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertContains(Collection&lt;T&gt;,T) : void" num="56" count="2" type="method"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="58" type="cond"/>
            <line num="59" count="2" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
         </file>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/common/TestTypes.java" name="TestTypes.java">
            <metrics coveredelements="178" coveredconditionals="22" complexity="68" loc="425" coveredmethods="43" methods="49" elements="218" classes="21" ncloc="343" statements="133" conditionals="36" coveredstatements="113"/>
            <class name="TestTypes">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestTypes.Base">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestTypes.Sub">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestTypes.ClassWithBaseField">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="TestTypes.ClassWithBaseArrayField">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="TestTypes.BaseSerializer">
               <metrics coveredelements="4" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="TestTypes.SubSerializer">
               <metrics coveredelements="4" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="TestTypes.StringWrapper">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="TestTypes.BagOfPrimitives">
               <metrics coveredelements="41" coveredconditionals="9" complexity="18" coveredmethods="6" methods="7" elements="70" statements="41" conditionals="22" coveredstatements="26"/>
            </class>
            <class name="TestTypes.BagOfPrimitiveWrappers">
               <metrics coveredelements="14" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="14" statements="11" conditionals="0" coveredstatements="11"/>
            </class>
            <class name="TestTypes.PrimitiveArray">
               <metrics coveredelements="17" coveredconditionals="2" complexity="4" coveredmethods="3" methods="3" elements="17" statements="12" conditionals="2" coveredstatements="12"/>
            </class>
            <class name="TestTypes.ClassWithNoFields">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="TestTypes.Nested">
               <metrics coveredelements="23" coveredconditionals="5" complexity="8" coveredmethods="4" methods="4" elements="24" statements="14" conditionals="6" coveredstatements="14"/>
            </class>
            <class name="TestTypes.ClassWithTransientFields">
               <metrics coveredelements="11" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="11" statements="8" conditionals="0" coveredstatements="8"/>
            </class>
            <class name="TestTypes.ClassWithCustomTypeConverter">
               <metrics coveredelements="7" coveredconditionals="0" complexity="6" coveredmethods="3" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="TestTypes.ArrayOfObjects">
               <metrics coveredelements="18" coveredconditionals="4" complexity="4" coveredmethods="2" methods="2" elements="18" statements="12" conditionals="4" coveredstatements="12"/>
            </class>
            <class name="TestTypes.ClassOverridingEquals">
               <metrics coveredelements="8" coveredconditionals="2" complexity="4" coveredmethods="2" methods="3" elements="10" statements="5" conditionals="2" coveredstatements="4"/>
            </class>
            <class name="TestTypes.ClassWithArray">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="TestTypes.ClassWithObjects">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="TestTypes.ClassWithSerializedNameFields">
               <metrics coveredelements="7" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="TestTypes.CrazyLongTypeAdapter">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="private" signature="ClassWithBaseField()" num="56" count="2" type="method"/>
            <line num="58" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithBaseField(Base)" num="60" count="6" type="method"/>
            <line num="61" count="6" type="stmt"/>
            <line complexity="1" visibility="private" signature="ClassWithBaseArrayField()" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithBaseArrayField(Base[])" num="72" count="2" type="method"/>
            <line num="73" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Base,Type,JsonSerializationContext) : JsonElement" num="79" count="2" type="method"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Sub,Type,JsonSerializationContext) : JsonElement" num="87" count="3" type="method"/>
            <line num="88" count="3" type="stmt"/>
            <line num="89" count="3" type="stmt"/>
            <line num="90" count="3" type="stmt"/>
            <line complexity="1" visibility="package" signature="StringWrapper()" num="97" count="4" type="method"/>
            <line num="98" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="StringWrapper(String)" num="101" count="9" type="method"/>
            <line num="102" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="BagOfPrimitives()" num="113" count="69" type="method"/>
            <line num="114" count="69" type="stmt"/>
            <line complexity="1" visibility="public" signature="BagOfPrimitives(long,int,boolean,String)" num="117" count="123" type="method"/>
            <line num="118" count="123" type="stmt"/>
            <line num="119" count="123" type="stmt"/>
            <line num="120" count="123" type="stmt"/>
            <line num="121" count="123" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntValue() : int" num="124" count="2" type="method"/>
            <line num="125" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpectedJson() : String" num="128" count="54" type="method"/>
            <line num="129" count="54" type="stmt"/>
            <line num="130" count="54" type="stmt"/>
            <line num="131" count="54" type="stmt"/>
            <line num="132" count="54" type="stmt"/>
            <line num="133" count="54" type="stmt"/>
            <line num="134" count="54" type="stmt"/>
            <line num="135" count="54" type="stmt"/>
            <line num="136" count="54" type="stmt"/>
            <line complexity="3" visibility="public" signature="hashCode() : int" num="139" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="10" visibility="public" signature="equals(Object) : boolean" num="150" count="10" type="method"/>
            <line num="152" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="154" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="10" type="stmt"/>
            <line num="159" count="10" type="stmt"/>
            <line falsecount="9" truecount="1" num="159" type="cond"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="9" type="stmt"/>
            <line falsecount="9" truecount="0" num="161" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="9" type="stmt"/>
            <line falsecount="9" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="9" type="stmt"/>
            <line falsecount="9" truecount="0" num="165" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="9" type="stmt"/>
            <line falsecount="9" truecount="0" num="168" type="cond"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="173" count="1" type="method"/>
            <line num="175" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="BagOfPrimitiveWrappers()" num="185" count="1" type="method"/>
            <line num="186" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="BagOfPrimitiveWrappers(Long,Integer,Boolean)" num="189" count="3" type="method"/>
            <line num="190" count="3" type="stmt"/>
            <line num="191" count="3" type="stmt"/>
            <line num="192" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpectedJson() : String" num="195" count="3" type="method"/>
            <line num="196" count="3" type="stmt"/>
            <line num="197" count="3" type="stmt"/>
            <line num="198" count="3" type="stmt"/>
            <line num="199" count="3" type="stmt"/>
            <line num="200" count="3" type="stmt"/>
            <line num="201" count="3" type="stmt"/>
            <line num="202" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="PrimitiveArray()" num="209" count="2" type="method"/>
            <line num="210" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="PrimitiveArray(long[])" num="213" count="3" type="method"/>
            <line num="214" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="getExpectedJson() : String" num="217" count="2" type="method"/>
            <line num="218" count="2" type="stmt"/>
            <line num="219" count="2" type="stmt"/>
            <line num="221" count="2" type="stmt"/>
            <line num="222" count="2" type="stmt"/>
            <line num="223" count="13" type="stmt"/>
            <line falsecount="2" truecount="11" num="223" type="cond"/>
            <line num="224" count="11" type="stmt"/>
            <line num="226" count="2" type="stmt"/>
            <line num="228" count="13" type="stmt"/>
            <line num="231" count="2" type="stmt"/>
            <line num="232" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="238" count="1" type="method"/>
            <line num="240" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="Nested()" num="248" count="4" type="method"/>
            <line num="249" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="Nested(BagOfPrimitives,BagOfPrimitives)" num="252" count="8" type="method"/>
            <line num="253" count="8" type="stmt"/>
            <line num="254" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpectedJson() : String" num="257" count="6" type="method"/>
            <line num="258" count="6" type="stmt"/>
            <line num="259" count="6" type="stmt"/>
            <line num="260" count="6" type="stmt"/>
            <line num="261" count="6" type="stmt"/>
            <line num="262" count="6" type="stmt"/>
            <line complexity="5" visibility="public" signature="appendFields(StringBuilder) : void" num="265" count="6" type="method"/>
            <line num="266" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="266" type="cond"/>
            <line num="267" count="6" type="stmt"/>
            <line num="269" count="6" type="stmt"/>
            <line falsecount="2" truecount="4" num="269" type="cond"/>
            <line num="270" count="4" type="stmt"/>
            <line num="272" count="6" type="stmt"/>
            <line falsecount="2" truecount="4" num="272" type="cond"/>
            <line num="273" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithTransientFields()" num="283" count="3" type="method"/>
            <line num="284" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithTransientFields(long)" num="287" count="4" type="method"/>
            <line num="288" count="4" type="stmt"/>
            <line num="289" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpectedJson() : String" num="292" count="2" type="method"/>
            <line num="293" count="2" type="stmt"/>
            <line num="294" count="2" type="stmt"/>
            <line num="295" count="2" type="stmt"/>
            <line num="296" count="2" type="stmt"/>
            <line num="297" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithCustomTypeConverter()" num="305" count="3" type="method"/>
            <line num="306" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithCustomTypeConverter(int)" num="309" count="0" type="method"/>
            <line num="310" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithCustomTypeConverter(BagOfPrimitives,int)" num="313" count="4" type="method"/>
            <line num="314" count="4" type="stmt"/>
            <line num="315" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBag() : BagOfPrimitives" num="318" count="2" type="method"/>
            <line num="319" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpectedJson() : String" num="322" count="0" type="method"/>
            <line num="323" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : int" num="326" count="0" type="method"/>
            <line num="327" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="ArrayOfObjects()" num="333" count="4" type="method"/>
            <line num="334" count="4" type="stmt"/>
            <line num="335" count="4" type="stmt"/>
            <line falsecount="4" truecount="12" num="335" type="cond"/>
            <line num="336" count="12" type="stmt"/>
            <line complexity="2" visibility="public" signature="getExpectedJson() : String" num="339" count="3" type="method"/>
            <line num="340" count="3" type="stmt"/>
            <line num="341" count="3" type="stmt"/>
            <line num="342" count="3" type="stmt"/>
            <line num="343" count="9" type="stmt"/>
            <line falsecount="6" truecount="3" num="343" type="cond"/>
            <line num="344" count="3" type="stmt"/>
            <line num="346" count="6" type="stmt"/>
            <line num="348" count="9" type="stmt"/>
            <line num="350" count="3" type="stmt"/>
            <line num="351" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="getExpectedJson() : String" num="358" count="2" type="method"/>
            <line num="359" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="359" type="cond"/>
            <line num="360" count="1" type="stmt"/>
            <line num="362" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="364" count="0" type="method"/>
            <line num="366" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="369" count="1" type="method"/>
            <line num="371" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithArray()" num="377" count="1" type="method"/>
            <line num="378" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithArray(Object[])" num="381" count="1" type="method"/>
            <line num="382" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithObjects()" num="388" count="4" type="method"/>
            <line num="389" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithObjects(BagOfPrimitives)" num="391" count="6" type="method"/>
            <line num="392" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithSerializedNameFields()" num="400" count="1" type="method"/>
            <line num="401" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithSerializedNameFields(int,int)" num="403" count="3" type="method"/>
            <line num="404" count="3" type="stmt"/>
            <line num="405" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpectedJson() : String" num="408" count="2" type="method"/>
            <line num="409" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Long,Type,JsonSerializationContext) : JsonElement" num="416" count="2" type="method"/>
            <line num="417" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(JsonElement,Type,JsonDeserializationContext) : Long" num="420" count="2" type="method"/>
            <line num="422" count="2" type="stmt"/>
         </file>
      </package>
      <package name="com.google.gson.metrics">
         <metrics coveredelements="4" complexity="44" loc="346" methods="27" classes="7" statements="135" coveredconditionals="0" coveredmethods="2" elements="194" ncloc="262" files="1" conditionals="32" coveredstatements="2"/>
         <file path="/home/sepehr/masters/test_generation/all_projects_coverage/Gson1f/gson/src/test/java/com/google/gson/metrics/PerformanceTest.java" name="PerformanceTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="44" loc="346" coveredmethods="2" methods="27" elements="194" classes="7" ncloc="262" statements="135" conditionals="32" coveredstatements="2"/>
            <class name="PerformanceTest">
               <metrics coveredelements="4" complexity="32" methods="15" testruns="1" statements="121" coveredconditionals="0" coveredmethods="2" elements="168" testfailures="0" testduration="0.0" conditionals="32" coveredstatements="2" testpasses="1"/>
            </class>
            <class name="PerformanceTest.ExceptionHolder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="PerformanceTest.CollectionEntry">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="PerformanceTest.ClassWithList">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="PerformanceTest.ClassWithField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="PerformanceTest.ClassWithListOfObjects">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="PerformanceTest.ClassWithExposedField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="47" count="1" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDummy() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="2" visibility="public" signature="disabled_testStringDeserialization() : void" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="parseLongJson(String) : void" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="ExceptionHolder()" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ExceptionHolder(String,String)" num="89" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="CollectionEntry()" num="101" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="CollectionEntry(String,String)" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="disabled_testLargeCollectionSerialization() : void" num="114" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="disabled_testLargeCollectionDeserialization() : void" num="126" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="disabled_testByteArraySerialization() : void" num="150" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="153" type="cond"/>
            <line num="154" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="disable_testByteArrayDeserialization() : void" num="165" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="170" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="171" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="disabled_testSerializeClasses() : void" num="194" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="196" type="cond"/>
            <line num="197" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="disabled_testDeserializeClasses() : void" num="209" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="disable_testLargeObjectSerializationAndDeserialization() : void" num="221" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="223" type="cond"/>
            <line num="224" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="disabled_testSerializeExposedClasses() : void" num="239" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="241" type="cond"/>
            <line num="242" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="247" type="cond"/>
            <line num="248" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="disabled_testDeserializeExposedClasses() : void" num="255" count="0" type="method"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="259" type="cond"/>
            <line num="260" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="disabled_testLargeGsonMapRoundTrip() : void" num="267" count="0" type="method"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="269" type="cond"/>
            <line num="270" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="buildJsonForClassWithList() : String" num="279" count="0" type="method"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="284" type="cond"/>
            <line num="285" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="285" type="cond"/>
            <line num="286" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="ClassWithList()" num="302" count="0" type="method"/>
            <line num="303" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="ClassWithList(String)" num="305" count="0" type="method"/>
            <line num="306" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="ClassWithField()" num="313" count="0" type="method"/>
            <line num="314" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassWithField(String)" num="316" count="0" type="method"/>
            <line num="317" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="ClassWithListOfObjects()" num="327" count="0" type="method"/>
            <line num="328" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="ClassWithListOfObjects(String)" num="330" count="0" type="method"/>
            <line num="331" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="ClassWithExposedField()" num="339" count="0" type="method"/>
            <line num="340" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="ClassWithExposedField(String)" num="342" count="0" type="method"/>
            <line num="343" count="0" type="stmt"/>
         </file>
      </package>
   </testproject>
</coverage>