var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":80,"id":1509,"methods":[{"el":42,"sc":3,"sl":40},{"el":54,"sc":3,"sl":52},{"el":79,"sc":3,"sl":62}],"name":"JsonParser","sl":30}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_104":{"methods":[{"sl":52},{"sl":62}],"name":"testParseReader","pass":true,"statements":[{"sl":53},{"sl":63},{"sl":64},{"sl":65},{"sl":66},{"sl":77}]},"test_215":{"methods":[{"sl":40},{"sl":52},{"sl":62}],"name":"testParseString","pass":true,"statements":[{"sl":41},{"sl":53},{"sl":63},{"sl":64},{"sl":65},{"sl":66},{"sl":77}]},"test_26":{"methods":[{"sl":40},{"sl":52},{"sl":62}],"name":"testReadPropertyWithEmptyStringName","pass":true,"statements":[{"sl":41},{"sl":53},{"sl":63},{"sl":64},{"sl":65},{"sl":66},{"sl":77}]},"test_306":{"methods":[{"sl":40},{"sl":52},{"sl":62}],"name":"testParseEmptyWhitespaceInput","pass":true,"statements":[{"sl":41},{"sl":53},{"sl":63},{"sl":64},{"sl":65},{"sl":66},{"sl":77}]},"test_312":{"methods":[{"sl":52},{"sl":62}],"name":"testChangingCustomTreeAndDeserializing","pass":true,"statements":[{"sl":53},{"sl":63},{"sl":64},{"sl":65},{"sl":66},{"sl":77}]},"test_426":{"methods":[{"sl":40},{"sl":52},{"sl":62}],"name":"testParseMixedArray","pass":true,"statements":[{"sl":41},{"sl":53},{"sl":63},{"sl":64},{"sl":65},{"sl":66},{"sl":77}]},"test_51":{"methods":[{"sl":40},{"sl":52},{"sl":62}],"name":"testParseEmptyString","pass":true,"statements":[{"sl":41},{"sl":53},{"sl":63},{"sl":64},{"sl":65},{"sl":66},{"sl":77}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines
