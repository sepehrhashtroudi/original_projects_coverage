var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":182,"id":4431,"methods":[{"el":36,"sc":3,"sl":31},{"el":43,"sc":3,"sl":38},{"el":57,"sc":3,"sl":45},{"el":69,"sc":3,"sl":59},{"el":82,"sc":3,"sl":71},{"el":89,"sc":3,"sl":84},{"el":96,"sc":3,"sl":91},{"el":103,"sc":3,"sl":98},{"el":110,"sc":3,"sl":105},{"el":117,"sc":3,"sl":112},{"el":124,"sc":3,"sl":119},{"el":131,"sc":3,"sl":126},{"el":138,"sc":3,"sl":133},{"el":145,"sc":3,"sl":140},{"el":152,"sc":3,"sl":147},{"el":159,"sc":3,"sl":154},{"el":166,"sc":3,"sl":161},{"el":173,"sc":3,"sl":168},{"el":181,"sc":3,"sl":175}],"name":"JsonPrimitiveTest","sl":29}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_12":{"methods":[{"sl":112}],"name":"testShortEqualsInteger","pass":true,"statements":[{"sl":113},{"sl":114},{"sl":115},{"sl":116}]},"test_212":{"methods":[{"sl":133}],"name":"testIntegerEqualsLong","pass":true,"statements":[{"sl":134},{"sl":135},{"sl":136},{"sl":137}]},"test_213":{"methods":[{"sl":59}],"name":"testStringsAndChar","pass":true,"statements":[{"sl":60},{"sl":61},{"sl":62},{"sl":63},{"sl":65},{"sl":66},{"sl":67},{"sl":68}]},"test_234":{"methods":[{"sl":154}],"name":"testFloatEqualsDouble","pass":true,"statements":[{"sl":155},{"sl":156},{"sl":157},{"sl":158}]},"test_24":{"methods":[{"sl":38}],"name":"testParsingStringAsBoolean","pass":true,"statements":[{"sl":39},{"sl":41},{"sl":42}]},"test_326":{"methods":[{"sl":71}],"name":"testExponential","pass":true,"statements":[{"sl":72},{"sl":74},{"sl":75},{"sl":76},{"sl":78},{"sl":79}]},"test_344":{"methods":[{"sl":84}],"name":"testByteEqualsShort","pass":true,"statements":[{"sl":85},{"sl":86},{"sl":87},{"sl":88}]},"test_348":{"methods":[{"sl":119}],"name":"testShortEqualsLong","pass":true,"statements":[{"sl":120},{"sl":121},{"sl":122},{"sl":123}]},"test_369":{"methods":[{"sl":140}],"name":"testIntegerEqualsBigInteger","pass":true,"statements":[{"sl":141},{"sl":142},{"sl":143},{"sl":144}]},"test_443":{"methods":[{"sl":91}],"name":"testByteEqualsInteger","pass":true,"statements":[{"sl":92},{"sl":93},{"sl":94},{"sl":95}]},"test_520":{"methods":[{"sl":31}],"name":"testBoolean","pass":true,"statements":[{"sl":32},{"sl":34},{"sl":35}]},"test_61":{"methods":[{"sl":105}],"name":"testByteEqualsBigInteger","pass":true,"statements":[{"sl":106},{"sl":107},{"sl":108},{"sl":109}]},"test_624":{"methods":[{"sl":168}],"name":"testDoubleEqualsBigDecimal","pass":true,"statements":[{"sl":169},{"sl":170},{"sl":171},{"sl":172}]},"test_638":{"methods":[{"sl":98}],"name":"testByteEqualsLong","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102}]},"test_649":{"methods":[{"sl":175}],"name":"testValidJsonOnToString","pass":true,"statements":[{"sl":176},{"sl":177},{"sl":179},{"sl":180}]},"test_661":{"methods":[{"sl":147}],"name":"testLongEqualsBigInteger","pass":true,"statements":[{"sl":148},{"sl":149},{"sl":150},{"sl":151}]},"test_68":{"methods":[{"sl":126}],"name":"testShortEqualsBigInteger","pass":true,"statements":[{"sl":127},{"sl":128},{"sl":129},{"sl":130}]},"test_691":{"methods":[{"sl":161}],"name":"testFloatEqualsBigDecimal","pass":true,"statements":[{"sl":162},{"sl":163},{"sl":164},{"sl":165}]},"test_699":{"methods":[{"sl":45}],"name":"testParsingStringAsNumber","pass":true,"statements":[{"sl":46},{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":55},{"sl":56}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines
