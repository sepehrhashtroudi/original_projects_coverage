var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":62,"id":669,"methods":[{"el":61,"sc":5,"sl":56}],"name":"Token","sl":28},{"el":45,"id":669,"methods":[],"name":"Token.Type","sl":33}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_1":{"methods":[{"sl":56}],"name":"testEmptyLineBehaviourCSV","pass":true,"statements":[{"sl":57},{"sl":58},{"sl":59},{"sl":60}]},"test_12":{"methods":[{"sl":56}],"name":"testGetLineNumberWithCR","pass":true,"statements":[{"sl":57},{"sl":58},{"sl":59},{"sl":60}]},"test_15":{"methods":[{"sl":56}],"name":"testNextToken2","pass":true,"statements":[{"sl":57},{"sl":58},{"sl":59},{"sl":60}]},"test_16":{"methods":[{"sl":56}],"name":"testHeader","pass":true,"statements":[{"sl":57},{"sl":58},{"sl":59},{"sl":60}]},"test_19":{"methods":[{"sl":56}],"name":"testLineFeedEndings","pass":true,"statements":[{"sl":57},{"sl":58},{"sl":59},{"sl":60}]},"test_20":{"methods":[{"sl":56}],"name":"testGetRecords","pass":true,"statements":[{"sl":57},{"sl":58},{"sl":59},{"sl":60}]},"test_21":{"methods":[{"sl":56}],"name":"testBackslashEscaping","pass":true,"statements":[{"sl":57},{"sl":58},{"sl":59},{"sl":60}]},"test_22":{"methods":[{"sl":56}],"name":"testIgnoreEmptyLines","pass":true,"statements":[{"sl":57},{"sl":58},{"sl":59},{"sl":60}]},"test_23":{"methods":[{"sl":56}],"name":"testCarriageReturnLineFeedEndings","pass":true,"statements":[{"sl":57},{"sl":58},{"sl":59},{"sl":60}]},"test_24":{"methods":[{"sl":56}],"name":"testDefaultFormat","pass":true,"statements":[{"sl":57},{"sl":58},{"sl":59},{"sl":60}]},"test_25":{"methods":[{"sl":56}],"name":"testEmptyLineBehaviourExcel","pass":true,"statements":[{"sl":57},{"sl":58},{"sl":59},{"sl":60}]},"test_28":{"methods":[{"sl":56}],"name":"testRandom","pass":true,"statements":[{"sl":57},{"sl":58},{"sl":59},{"sl":60}]},"test_3":{"methods":[{"sl":56}],"name":"testExcelFormat1","pass":true,"statements":[{"sl":57},{"sl":58},{"sl":59},{"sl":60}]},"test_30":{"methods":[{"sl":56}],"name":"testEndOfFileBehaviorCSV","pass":true,"statements":[{"sl":57},{"sl":58},{"sl":59},{"sl":60}]},"test_35":{"methods":[{"sl":56}],"name":"testExcelFormat2","pass":true,"statements":[{"sl":57},{"sl":58},{"sl":59},{"sl":60}]},"test_37":{"methods":[{"sl":56}],"name":"testBackslashEscaping2","pass":true,"statements":[{"sl":57},{"sl":58},{"sl":59},{"sl":60}]},"test_38":{"methods":[{"sl":56}],"name":"testForEach","pass":true,"statements":[{"sl":57},{"sl":58},{"sl":59},{"sl":60}]},"test_4":{"methods":[{"sl":56}],"name":"testGetLineNumberWithCRLF","pass":true,"statements":[{"sl":57},{"sl":58},{"sl":59},{"sl":60}]},"test_40":{"methods":[{"sl":56}],"name":"testCarriageReturnEndings","pass":true,"statements":[{"sl":57},{"sl":58},{"sl":59},{"sl":60}]},"test_48":{"methods":[{"sl":56}],"name":"testIterator","pass":true,"statements":[{"sl":57},{"sl":58},{"sl":59},{"sl":60}]},"test_50":{"methods":[{"sl":56}],"name":"testGetLine","pass":true,"statements":[{"sl":57},{"sl":58},{"sl":59},{"sl":60}]},"test_51":{"methods":[{"sl":56}],"name":"testGetLineNumberWithLF","pass":true,"statements":[{"sl":57},{"sl":58},{"sl":59},{"sl":60}]},"test_7":{"methods":[{"sl":56}],"name":"testEmptyFile","pass":true,"statements":[{"sl":57},{"sl":58},{"sl":59},{"sl":60}]},"test_8":{"methods":[{"sl":56}],"name":"testEndOfFileBehaviourExcel","pass":true,"statements":[{"sl":57},{"sl":58},{"sl":59},{"sl":60}]},"test_9":{"methods":[{"sl":56}],"name":"testProvidedHeader","pass":true,"statements":[{"sl":57},{"sl":58},{"sl":59},{"sl":60}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [22, 38, 7, 15, 8, 21, 4, 24, 51, 19, 50, 12, 30, 23, 1, 28, 9, 40, 35, 3, 16, 48, 20, 25, 37], [22, 38, 7, 15, 8, 21, 4, 24, 51, 19, 50, 12, 30, 23, 1, 28, 9, 40, 35, 3, 16, 48, 20, 25, 37], [22, 38, 7, 15, 8, 21, 4, 24, 51, 19, 50, 12, 30, 23, 1, 28, 9, 40, 35, 3, 16, 48, 20, 25, 37], [22, 38, 7, 15, 8, 21, 4, 24, 51, 19, 50, 12, 30, 23, 1, 28, 9, 40, 35, 3, 16, 48, 20, 25, 37], [22, 38, 7, 15, 8, 21, 4, 24, 51, 19, 50, 12, 30, 23, 1, 28, 9, 40, 35, 3, 16, 48, 20, 25, 37], [], []]
